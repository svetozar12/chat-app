// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[` component <FormWrapper /> should match snapshot 1`] = `
<FormWrapper
  chakraProps={
    Object {
      "color": "red",
    }
  }
  handleSubmit={[Function]}
  style={
    Object {
      "paddingBlock": "0.5rem",
    }
  }
  type="Register"
>
  <ScaleFade
    in={true}
    initialScale={0.7}
  >
    <AnimatePresence
      custom={
        Object {
          "delay": undefined,
          "initialScale": 0.7,
          "reverse": true,
          "transition": undefined,
          "transitionEnd": undefined,
        }
      }
    >
      <PresenceChild
        isPresent={true}
        key=""
        presenceAffectsLayout={true}
      >
        <ForwardRef(MotionComponent)
          animate="enter"
          className="chakra-offset-slide"
          custom={
            Object {
              "delay": undefined,
              "initialScale": 0.7,
              "reverse": true,
              "transition": undefined,
              "transitionEnd": undefined,
            }
          }
          exit="exit"
          initial="exit"
          variants={
            Object {
              "enter": [Function],
              "exit": [Function],
            }
          }
        >
          <VisualElementHandler
            props={
              Object {
                "animate": "enter",
                "children": <Flex
                  alignItems="center"
                  color="red"
                  flexDir="column"
                  h="100vh"
                  justifyContent="center"
                  paddingBlock="0.5rem"
                  pos="relative"
                  zIndex="101"
                >
                  <Heading
                    bg="form_gray"
                    borderTopRadius="5px"
                    color="white"
                    p="0.5rem"
                    textAlign="center"
                    w={
                      Object {
                        "base": "95%",
                        "lg": "60%",
                        "md": "70%",
                        "sm": "90%",
                        "xl": "40%",
                      }
                    }
                  >
                    Register
                  </Heading>
                  <Box
                    bg="white"
                    boxShadow="default"
                    maxH="auto"
                    minH="45vh"
                    padding="3rem"
                    w={
                      Object {
                        "base": "95%",
                        "lg": "60%",
                        "md": "70%",
                        "sm": "90%",
                        "xl": "40%",
                      }
                    }
                  >
                    <FormControl
                      borderRadius="5px"
                      w="full"
                    >
                      <form
                        onSubmit={[Function]}
                      >
                        <VStack
                          alignItems="flex-start"
                          spacing={5}
                          w="full"
                        >
                          <input />
                        </VStack>
                      </form>
                    </FormControl>
                  </Box>
                </Flex>,
                "className": "chakra-offset-slide",
                "custom": Object {
                  "delay": undefined,
                  "initialScale": 0.7,
                  "reverse": true,
                  "transition": undefined,
                  "transitionEnd": undefined,
                },
                "exit": "exit",
                "initial": "exit",
                "isStatic": false,
                "layoutId": undefined,
                "reducedMotion": "never",
                "transformPagePoint": [Function],
                "variants": Object {
                  "enter": [Function],
                  "exit": [Function],
                },
              }
            }
            visualElement={
              Object {
                "addValue": [Function],
                "addVariantChild": [Function],
                "animationState": Object {
                  "animateChanges": [Function],
                  "getState": [Function],
                  "isAnimated": [Function],
                  "setActive": [Function],
                  "setAnimateFunction": [Function],
                },
                "blockInitialAnimation": false,
                "build": [Function],
                "children": Set {},
                "clearAllListeners": [Function],
                "current": <div
                  class="chakra-offset-slide"
                  style="opacity: 0; transform: scale(0.7) translateZ(0);"
                >
                  <div
                    class="css-0"
                  >
                    <h2
                      class="chakra-heading css-0"
                    >
                      Register
                    </h2>
                    <div
                      class="css-0"
                    >
                      <div
                        class="chakra-form-control css-0"
                        role="group"
                      >
                        <form>
                          <div
                            class="chakra-stack css-0"
                          >
                            <input />
                          </div>
                        </form>
                      </div>
                    </div>
                  </div>
                </div>,
                "depth": 0,
                "forEachValue": [Function],
                "getBaseTarget": [Function],
                "getClosestVariantNode": [Function],
                "getDefaultTransition": [Function],
                "getInstance": [Function],
                "getLatestValues": [Function],
                "getLayoutId": [Function],
                "getProps": [Function],
                "getStaticValue": [Function],
                "getTransformPagePoint": [Function],
                "getValue": [Function],
                "getVariant": [Function],
                "getVariantContext": [Function],
                "hasValue": [Function],
                "isMounted": [Function],
                "isPresent": true,
                "isVisible": undefined,
                "makeTargetAnimatable": [Function],
                "manuallyAnimateOnMount": false,
                "measureViewportBox": [Function],
                "mount": [Function],
                "notifyAnimationComplete": [Function],
                "notifyAnimationStart": [Function],
                "notifyBeforeLayoutMeasure": [Function],
                "notifyLayoutAnimationComplete": [Function],
                "notifyLayoutAnimationStart": [Function],
                "notifyLayoutMeasure": [Function],
                "notifyLayoutUpdate": [Function],
                "notifyRender": [Function],
                "notifySetAxisTarget": [Function],
                "notifyUnmount": [Function],
                "notifyUpdate": [Function],
                "notifyViewportBoxUpdate": [Function],
                "onAnimationComplete": [Function],
                "onAnimationStart": [Function],
                "onBeforeLayoutMeasure": [Function],
                "onLayoutAnimationComplete": [Function],
                "onLayoutAnimationStart": [Function],
                "onLayoutMeasure": [Function],
                "onLayoutUpdate": [Function],
                "onRender": [Function],
                "onSetAxisTarget": [Function],
                "onUnmount": [Function],
                "onUpdate": [Function],
                "onViewportBoxUpdate": [Function],
                "parent": undefined,
                "presenceId": 4,
                "projection": ProjectionNode {
                  "animationProgress": 0,
                  "checkUpdateFailed": [Function],
                  "children": Set {},
                  "depth": 1,
                  "eventHandlers": Map {},
                  "hasProjected": false,
                  "id": undefined,
                  "instance": <div
                    class="chakra-offset-slide"
                    style="opacity: 0; transform: scale(0.7) translateZ(0);"
                  >
                    <div
                      class="css-0"
                    >
                      <h2
                        class="chakra-heading css-0"
                      >
                        Register
                      </h2>
                      <div
                        class="css-0"
                      >
                        <div
                          class="chakra-form-control css-0"
                          role="group"
                        >
                          <form>
                            <div
                              class="chakra-stack css-0"
                            >
                              <input />
                            </div>
                          </form>
                        </div>
                      </div>
                    </div>
                  </div>,
                  "isAnimationBlocked": false,
                  "isLayoutDirty": false,
                  "isSVG": false,
                  "isTreeAnimating": false,
                  "isUpdating": false,
                  "isVisible": true,
                  "latestValues": Object {
                    "opacity": 0,
                    "scale": 0.7,
                  },
                  "needsReset": false,
                  "options": Object {
                    "alwaysMeasureLayout": undefined,
                    "animationType": "both",
                    "crossfade": true,
                    "initialPromotionConfig": Object {},
                    "layout": undefined,
                    "layoutId": undefined,
                    "layoutScroll": undefined,
                    "scheduleRender": [Function],
                    "visualElement": [Circular],
                  },
                  "parent": ProjectionNode {
                    "animationProgress": 0,
                    "checkUpdateFailed": [Function],
                    "children": Set {
                      ProjectionNode {
                        "animationProgress": 0,
                        "checkUpdateFailed": [Function],
                        "children": Set {},
                        "depth": 1,
                        "eventHandlers": Map {},
                        "hasProjected": false,
                        "id": undefined,
                        "instance": <div
                          class="chakra-offset-slide"
                          style="opacity: 0; transform: scale(0.7) translateZ(0);"
                        >
                          <div
                            class="css-0"
                          >
                            <h2
                              class="chakra-heading css-0"
                            >
                              Register
                            </h2>
                            <div
                              class="css-0"
                            >
                              <div
                                class="chakra-form-control css-0"
                                role="group"
                              >
                                <form>
                                  <div
                                    class="chakra-stack css-0"
                                  >
                                    <input />
                                  </div>
                                </form>
                              </div>
                            </div>
                          </div>
                        </div>,
                        "isAnimationBlocked": false,
                        "isLayoutDirty": false,
                        "isSVG": false,
                        "isTreeAnimating": false,
                        "isUpdating": false,
                        "isVisible": true,
                        "latestValues": Object {
                          "opacity": 0,
                          "scale": 0.7,
                        },
                        "needsReset": false,
                        "options": Object {
                          "alwaysMeasureLayout": undefined,
                          "animationType": "both",
                          "crossfade": true,
                          "initialPromotionConfig": Object {},
                          "layout": undefined,
                          "layoutId": undefined,
                          "layoutScroll": undefined,
                          "scheduleRender": [Function],
                          "visualElement": Object {
                            "addValue": [Function],
                            "addVariantChild": [Function],
                            "animationState": Object {
                              "animateChanges": [Function],
                              "getState": [Function],
                              "isAnimated": [Function],
                              "setActive": [Function],
                              "setAnimateFunction": [Function],
                            },
                            "blockInitialAnimation": false,
                            "build": [Function],
                            "children": Set {},
                            "clearAllListeners": [Function],
                            "current": <div
                              class="chakra-offset-slide"
                              style="opacity: 0; transform: scale(0.7) translateZ(0);"
                            >
                              <div
                                class="css-0"
                              >
                                <h2
                                  class="chakra-heading css-0"
                                >
                                  Register
                                </h2>
                                <div
                                  class="css-0"
                                >
                                  <div
                                    class="chakra-form-control css-0"
                                    role="group"
                                  >
                                    <form>
                                      <div
                                        class="chakra-stack css-0"
                                      >
                                        <input />
                                      </div>
                                    </form>
                                  </div>
                                </div>
                              </div>
                            </div>,
                            "depth": 0,
                            "forEachValue": [Function],
                            "getBaseTarget": [Function],
                            "getClosestVariantNode": [Function],
                            "getDefaultTransition": [Function],
                            "getInstance": [Function],
                            "getLatestValues": [Function],
                            "getLayoutId": [Function],
                            "getProps": [Function],
                            "getStaticValue": [Function],
                            "getTransformPagePoint": [Function],
                            "getValue": [Function],
                            "getVariant": [Function],
                            "getVariantContext": [Function],
                            "hasValue": [Function],
                            "isMounted": [Function],
                            "isPresent": true,
                            "isVisible": undefined,
                            "makeTargetAnimatable": [Function],
                            "manuallyAnimateOnMount": false,
                            "measureViewportBox": [Function],
                            "mount": [Function],
                            "notifyAnimationComplete": [Function],
                            "notifyAnimationStart": [Function],
                            "notifyBeforeLayoutMeasure": [Function],
                            "notifyLayoutAnimationComplete": [Function],
                            "notifyLayoutAnimationStart": [Function],
                            "notifyLayoutMeasure": [Function],
                            "notifyLayoutUpdate": [Function],
                            "notifyRender": [Function],
                            "notifySetAxisTarget": [Function],
                            "notifyUnmount": [Function],
                            "notifyUpdate": [Function],
                            "notifyViewportBoxUpdate": [Function],
                            "onAnimationComplete": [Function],
                            "onAnimationStart": [Function],
                            "onBeforeLayoutMeasure": [Function],
                            "onLayoutAnimationComplete": [Function],
                            "onLayoutAnimationStart": [Function],
                            "onLayoutMeasure": [Function],
                            "onLayoutUpdate": [Function],
                            "onRender": [Function],
                            "onSetAxisTarget": [Function],
                            "onUnmount": [Function],
                            "onUpdate": [Function],
                            "onViewportBoxUpdate": [Function],
                            "parent": undefined,
                            "presenceId": 0,
                            "projection": [Circular],
                            "readValue": [Function],
                            "removeValue": [Function],
                            "scheduleRender": [Function],
                            "setBaseTarget": [Function],
                            "setProps": [Function],
                            "setStaticValue": [Function],
                            "setVisibility": [Function],
                            "shouldReduceMotion": false,
                            "sortNodePosition": [Function],
                            "syncRender": [Function],
                            "treeType": "dom",
                            "unmount": [Function],
                            "updatePropListeners": [Function],
                            "variantChildren": Set {},
                          },
                        },
                        "parent": [Circular],
                        "path": Array [
                          [Circular],
                        ],
                        "potentialNodes": Map {},
                        "root": [Circular],
                        "sharedNodes": Map {},
                        "shouldResetTransform": false,
                        "treeScale": Object {
                          "x": 1,
                          "y": 1,
                        },
                        "updateBlockedByResize": false,
                        "updateManuallyBlocked": false,
                        "updateProjection": [Function],
                      },
                      ProjectionNode {
                        "animationProgress": 0,
                        "checkUpdateFailed": [Function],
                        "children": Set {},
                        "depth": 1,
                        "eventHandlers": Map {},
                        "hasProjected": false,
                        "id": undefined,
                        "instance": <div
                          class="chakra-offset-slide"
                          style="opacity: 0; transform: scale(0.7) translateZ(0);"
                        >
                          <div
                            class="css-0"
                          >
                            <h2
                              class="chakra-heading css-0"
                            >
                              Login
                            </h2>
                            <div
                              class="css-0"
                            >
                              <div
                                class="chakra-form-control css-0"
                                role="group"
                              >
                                <form>
                                  <div
                                    class="chakra-stack css-0"
                                  >
                                    <input />
                                  </div>
                                </form>
                              </div>
                            </div>
                          </div>
                        </div>,
                        "isAnimationBlocked": false,
                        "isLayoutDirty": false,
                        "isSVG": false,
                        "isTreeAnimating": false,
                        "isUpdating": false,
                        "isVisible": true,
                        "latestValues": Object {
                          "opacity": 0,
                          "scale": 0.7,
                        },
                        "needsReset": false,
                        "options": Object {
                          "alwaysMeasureLayout": undefined,
                          "animationType": "both",
                          "crossfade": true,
                          "initialPromotionConfig": Object {},
                          "layout": undefined,
                          "layoutId": undefined,
                          "layoutScroll": undefined,
                          "scheduleRender": [Function],
                          "visualElement": Object {
                            "addValue": [Function],
                            "addVariantChild": [Function],
                            "animationState": Object {
                              "animateChanges": [Function],
                              "getState": [Function],
                              "isAnimated": [Function],
                              "setActive": [Function],
                              "setAnimateFunction": [Function],
                            },
                            "blockInitialAnimation": false,
                            "build": [Function],
                            "children": Set {},
                            "clearAllListeners": [Function],
                            "current": <div
                              class="chakra-offset-slide"
                              style="opacity: 0; transform: scale(0.7) translateZ(0);"
                            >
                              <div
                                class="css-0"
                              >
                                <h2
                                  class="chakra-heading css-0"
                                >
                                  Login
                                </h2>
                                <div
                                  class="css-0"
                                >
                                  <div
                                    class="chakra-form-control css-0"
                                    role="group"
                                  >
                                    <form>
                                      <div
                                        class="chakra-stack css-0"
                                      >
                                        <input />
                                      </div>
                                    </form>
                                  </div>
                                </div>
                              </div>
                            </div>,
                            "depth": 0,
                            "forEachValue": [Function],
                            "getBaseTarget": [Function],
                            "getClosestVariantNode": [Function],
                            "getDefaultTransition": [Function],
                            "getInstance": [Function],
                            "getLatestValues": [Function],
                            "getLayoutId": [Function],
                            "getProps": [Function],
                            "getStaticValue": [Function],
                            "getTransformPagePoint": [Function],
                            "getValue": [Function],
                            "getVariant": [Function],
                            "getVariantContext": [Function],
                            "hasValue": [Function],
                            "isMounted": [Function],
                            "isPresent": true,
                            "isVisible": undefined,
                            "makeTargetAnimatable": [Function],
                            "manuallyAnimateOnMount": false,
                            "measureViewportBox": [Function],
                            "mount": [Function],
                            "notifyAnimationComplete": [Function],
                            "notifyAnimationStart": [Function],
                            "notifyBeforeLayoutMeasure": [Function],
                            "notifyLayoutAnimationComplete": [Function],
                            "notifyLayoutAnimationStart": [Function],
                            "notifyLayoutMeasure": [Function],
                            "notifyLayoutUpdate": [Function],
                            "notifyRender": [Function],
                            "notifySetAxisTarget": [Function],
                            "notifyUnmount": [Function],
                            "notifyUpdate": [Function],
                            "notifyViewportBoxUpdate": [Function],
                            "onAnimationComplete": [Function],
                            "onAnimationStart": [Function],
                            "onBeforeLayoutMeasure": [Function],
                            "onLayoutAnimationComplete": [Function],
                            "onLayoutAnimationStart": [Function],
                            "onLayoutMeasure": [Function],
                            "onLayoutUpdate": [Function],
                            "onRender": [Function],
                            "onSetAxisTarget": [Function],
                            "onUnmount": [Function],
                            "onUpdate": [Function],
                            "onViewportBoxUpdate": [Function],
                            "parent": undefined,
                            "presenceId": 2,
                            "projection": [Circular],
                            "readValue": [Function],
                            "removeValue": [Function],
                            "scheduleRender": [Function],
                            "setBaseTarget": [Function],
                            "setProps": [Function],
                            "setStaticValue": [Function],
                            "setVisibility": [Function],
                            "shouldReduceMotion": false,
                            "sortNodePosition": [Function],
                            "syncRender": [Function],
                            "treeType": "dom",
                            "unmount": [Function],
                            "updatePropListeners": [Function],
                            "variantChildren": Set {},
                          },
                        },
                        "parent": [Circular],
                        "path": Array [
                          [Circular],
                        ],
                        "potentialNodes": Map {},
                        "root": [Circular],
                        "sharedNodes": Map {},
                        "shouldResetTransform": false,
                        "treeScale": Object {
                          "x": 1,
                          "y": 1,
                        },
                        "updateBlockedByResize": false,
                        "updateManuallyBlocked": false,
                        "updateProjection": [Function],
                      },
                      [Circular],
                    },
                    "depth": 0,
                    "eventHandlers": Map {},
                    "hasProjected": false,
                    "id": 0,
                    "instance": [Window],
                    "isAnimationBlocked": false,
                    "isLayoutDirty": false,
                    "isSVG": false,
                    "isTreeAnimating": false,
                    "isUpdating": false,
                    "isVisible": true,
                    "latestValues": Object {},
                    "needsReset": false,
                    "nodes": FlatTree {
                      "children": Array [
                        [Circular],
                        ProjectionNode {
                          "animationProgress": 0,
                          "checkUpdateFailed": [Function],
                          "children": Set {},
                          "depth": 1,
                          "eventHandlers": Map {},
                          "hasProjected": false,
                          "id": undefined,
                          "instance": <div
                            class="chakra-offset-slide"
                            style="opacity: 0; transform: scale(0.7) translateZ(0);"
                          >
                            <div
                              class="css-0"
                            >
                              <h2
                                class="chakra-heading css-0"
                              >
                                Register
                              </h2>
                              <div
                                class="css-0"
                              >
                                <div
                                  class="chakra-form-control css-0"
                                  role="group"
                                >
                                  <form>
                                    <div
                                      class="chakra-stack css-0"
                                    >
                                      <input />
                                    </div>
                                  </form>
                                </div>
                              </div>
                            </div>
                          </div>,
                          "isAnimationBlocked": false,
                          "isLayoutDirty": false,
                          "isSVG": false,
                          "isTreeAnimating": false,
                          "isUpdating": false,
                          "isVisible": true,
                          "latestValues": Object {
                            "opacity": 0,
                            "scale": 0.7,
                          },
                          "needsReset": false,
                          "options": Object {
                            "alwaysMeasureLayout": undefined,
                            "animationType": "both",
                            "crossfade": true,
                            "initialPromotionConfig": Object {},
                            "layout": undefined,
                            "layoutId": undefined,
                            "layoutScroll": undefined,
                            "scheduleRender": [Function],
                            "visualElement": Object {
                              "addValue": [Function],
                              "addVariantChild": [Function],
                              "animationState": Object {
                                "animateChanges": [Function],
                                "getState": [Function],
                                "isAnimated": [Function],
                                "setActive": [Function],
                                "setAnimateFunction": [Function],
                              },
                              "blockInitialAnimation": false,
                              "build": [Function],
                              "children": Set {},
                              "clearAllListeners": [Function],
                              "current": <div
                                class="chakra-offset-slide"
                                style="opacity: 0; transform: scale(0.7) translateZ(0);"
                              >
                                <div
                                  class="css-0"
                                >
                                  <h2
                                    class="chakra-heading css-0"
                                  >
                                    Register
                                  </h2>
                                  <div
                                    class="css-0"
                                  >
                                    <div
                                      class="chakra-form-control css-0"
                                      role="group"
                                    >
                                      <form>
                                        <div
                                          class="chakra-stack css-0"
                                        >
                                          <input />
                                        </div>
                                      </form>
                                    </div>
                                  </div>
                                </div>
                              </div>,
                              "depth": 0,
                              "forEachValue": [Function],
                              "getBaseTarget": [Function],
                              "getClosestVariantNode": [Function],
                              "getDefaultTransition": [Function],
                              "getInstance": [Function],
                              "getLatestValues": [Function],
                              "getLayoutId": [Function],
                              "getProps": [Function],
                              "getStaticValue": [Function],
                              "getTransformPagePoint": [Function],
                              "getValue": [Function],
                              "getVariant": [Function],
                              "getVariantContext": [Function],
                              "hasValue": [Function],
                              "isMounted": [Function],
                              "isPresent": true,
                              "isVisible": undefined,
                              "makeTargetAnimatable": [Function],
                              "manuallyAnimateOnMount": false,
                              "measureViewportBox": [Function],
                              "mount": [Function],
                              "notifyAnimationComplete": [Function],
                              "notifyAnimationStart": [Function],
                              "notifyBeforeLayoutMeasure": [Function],
                              "notifyLayoutAnimationComplete": [Function],
                              "notifyLayoutAnimationStart": [Function],
                              "notifyLayoutMeasure": [Function],
                              "notifyLayoutUpdate": [Function],
                              "notifyRender": [Function],
                              "notifySetAxisTarget": [Function],
                              "notifyUnmount": [Function],
                              "notifyUpdate": [Function],
                              "notifyViewportBoxUpdate": [Function],
                              "onAnimationComplete": [Function],
                              "onAnimationStart": [Function],
                              "onBeforeLayoutMeasure": [Function],
                              "onLayoutAnimationComplete": [Function],
                              "onLayoutAnimationStart": [Function],
                              "onLayoutMeasure": [Function],
                              "onLayoutUpdate": [Function],
                              "onRender": [Function],
                              "onSetAxisTarget": [Function],
                              "onUnmount": [Function],
                              "onUpdate": [Function],
                              "onViewportBoxUpdate": [Function],
                              "parent": undefined,
                              "presenceId": 0,
                              "projection": [Circular],
                              "readValue": [Function],
                              "removeValue": [Function],
                              "scheduleRender": [Function],
                              "setBaseTarget": [Function],
                              "setProps": [Function],
                              "setStaticValue": [Function],
                              "setVisibility": [Function],
                              "shouldReduceMotion": false,
                              "sortNodePosition": [Function],
                              "syncRender": [Function],
                              "treeType": "dom",
                              "unmount": [Function],
                              "updatePropListeners": [Function],
                              "variantChildren": Set {},
                            },
                          },
                          "parent": [Circular],
                          "path": Array [
                            [Circular],
                          ],
                          "potentialNodes": Map {},
                          "root": [Circular],
                          "sharedNodes": Map {},
                          "shouldResetTransform": false,
                          "treeScale": Object {
                            "x": 1,
                            "y": 1,
                          },
                          "updateBlockedByResize": false,
                          "updateManuallyBlocked": false,
                          "updateProjection": [Function],
                        },
                        ProjectionNode {
                          "animationProgress": 0,
                          "checkUpdateFailed": [Function],
                          "children": Set {},
                          "depth": 1,
                          "eventHandlers": Map {},
                          "hasProjected": false,
                          "id": undefined,
                          "instance": <div
                            class="chakra-offset-slide"
                            style="opacity: 0; transform: scale(0.7) translateZ(0);"
                          >
                            <div
                              class="css-0"
                            >
                              <h2
                                class="chakra-heading css-0"
                              >
                                Login
                              </h2>
                              <div
                                class="css-0"
                              >
                                <div
                                  class="chakra-form-control css-0"
                                  role="group"
                                >
                                  <form>
                                    <div
                                      class="chakra-stack css-0"
                                    >
                                      <input />
                                    </div>
                                  </form>
                                </div>
                              </div>
                            </div>
                          </div>,
                          "isAnimationBlocked": false,
                          "isLayoutDirty": false,
                          "isSVG": false,
                          "isTreeAnimating": false,
                          "isUpdating": false,
                          "isVisible": true,
                          "latestValues": Object {
                            "opacity": 0,
                            "scale": 0.7,
                          },
                          "needsReset": false,
                          "options": Object {
                            "alwaysMeasureLayout": undefined,
                            "animationType": "both",
                            "crossfade": true,
                            "initialPromotionConfig": Object {},
                            "layout": undefined,
                            "layoutId": undefined,
                            "layoutScroll": undefined,
                            "scheduleRender": [Function],
                            "visualElement": Object {
                              "addValue": [Function],
                              "addVariantChild": [Function],
                              "animationState": Object {
                                "animateChanges": [Function],
                                "getState": [Function],
                                "isAnimated": [Function],
                                "setActive": [Function],
                                "setAnimateFunction": [Function],
                              },
                              "blockInitialAnimation": false,
                              "build": [Function],
                              "children": Set {},
                              "clearAllListeners": [Function],
                              "current": <div
                                class="chakra-offset-slide"
                                style="opacity: 0; transform: scale(0.7) translateZ(0);"
                              >
                                <div
                                  class="css-0"
                                >
                                  <h2
                                    class="chakra-heading css-0"
                                  >
                                    Login
                                  </h2>
                                  <div
                                    class="css-0"
                                  >
                                    <div
                                      class="chakra-form-control css-0"
                                      role="group"
                                    >
                                      <form>
                                        <div
                                          class="chakra-stack css-0"
                                        >
                                          <input />
                                        </div>
                                      </form>
                                    </div>
                                  </div>
                                </div>
                              </div>,
                              "depth": 0,
                              "forEachValue": [Function],
                              "getBaseTarget": [Function],
                              "getClosestVariantNode": [Function],
                              "getDefaultTransition": [Function],
                              "getInstance": [Function],
                              "getLatestValues": [Function],
                              "getLayoutId": [Function],
                              "getProps": [Function],
                              "getStaticValue": [Function],
                              "getTransformPagePoint": [Function],
                              "getValue": [Function],
                              "getVariant": [Function],
                              "getVariantContext": [Function],
                              "hasValue": [Function],
                              "isMounted": [Function],
                              "isPresent": true,
                              "isVisible": undefined,
                              "makeTargetAnimatable": [Function],
                              "manuallyAnimateOnMount": false,
                              "measureViewportBox": [Function],
                              "mount": [Function],
                              "notifyAnimationComplete": [Function],
                              "notifyAnimationStart": [Function],
                              "notifyBeforeLayoutMeasure": [Function],
                              "notifyLayoutAnimationComplete": [Function],
                              "notifyLayoutAnimationStart": [Function],
                              "notifyLayoutMeasure": [Function],
                              "notifyLayoutUpdate": [Function],
                              "notifyRender": [Function],
                              "notifySetAxisTarget": [Function],
                              "notifyUnmount": [Function],
                              "notifyUpdate": [Function],
                              "notifyViewportBoxUpdate": [Function],
                              "onAnimationComplete": [Function],
                              "onAnimationStart": [Function],
                              "onBeforeLayoutMeasure": [Function],
                              "onLayoutAnimationComplete": [Function],
                              "onLayoutAnimationStart": [Function],
                              "onLayoutMeasure": [Function],
                              "onLayoutUpdate": [Function],
                              "onRender": [Function],
                              "onSetAxisTarget": [Function],
                              "onUnmount": [Function],
                              "onUpdate": [Function],
                              "onViewportBoxUpdate": [Function],
                              "parent": undefined,
                              "presenceId": 2,
                              "projection": [Circular],
                              "readValue": [Function],
                              "removeValue": [Function],
                              "scheduleRender": [Function],
                              "setBaseTarget": [Function],
                              "setProps": [Function],
                              "setStaticValue": [Function],
                              "setVisibility": [Function],
                              "shouldReduceMotion": false,
                              "sortNodePosition": [Function],
                              "syncRender": [Function],
                              "treeType": "dom",
                              "unmount": [Function],
                              "updatePropListeners": [Function],
                              "variantChildren": Set {},
                            },
                          },
                          "parent": [Circular],
                          "path": Array [
                            [Circular],
                          ],
                          "potentialNodes": Map {},
                          "root": [Circular],
                          "sharedNodes": Map {},
                          "shouldResetTransform": false,
                          "treeScale": Object {
                            "x": 1,
                            "y": 1,
                          },
                          "updateBlockedByResize": false,
                          "updateManuallyBlocked": false,
                          "updateProjection": [Function],
                        },
                        [Circular],
                      ],
                      "isDirty": true,
                    },
                    "options": Object {
                      "crossfade": true,
                      "layoutScroll": true,
                    },
                    "parent": undefined,
                    "path": Array [],
                    "potentialNodes": Map {},
                    "root": [Circular],
                    "sharedNodes": Map {},
                    "shouldResetTransform": true,
                    "treeScale": Object {
                      "x": 1,
                      "y": 1,
                    },
                    "updateBlockedByResize": false,
                    "updateManuallyBlocked": false,
                    "updateProjection": [Function],
                  },
                  "path": Array [
                    ProjectionNode {
                      "animationProgress": 0,
                      "checkUpdateFailed": [Function],
                      "children": Set {
                        ProjectionNode {
                          "animationProgress": 0,
                          "checkUpdateFailed": [Function],
                          "children": Set {},
                          "depth": 1,
                          "eventHandlers": Map {},
                          "hasProjected": false,
                          "id": undefined,
                          "instance": <div
                            class="chakra-offset-slide"
                            style="opacity: 0; transform: scale(0.7) translateZ(0);"
                          >
                            <div
                              class="css-0"
                            >
                              <h2
                                class="chakra-heading css-0"
                              >
                                Register
                              </h2>
                              <div
                                class="css-0"
                              >
                                <div
                                  class="chakra-form-control css-0"
                                  role="group"
                                >
                                  <form>
                                    <div
                                      class="chakra-stack css-0"
                                    >
                                      <input />
                                    </div>
                                  </form>
                                </div>
                              </div>
                            </div>
                          </div>,
                          "isAnimationBlocked": false,
                          "isLayoutDirty": false,
                          "isSVG": false,
                          "isTreeAnimating": false,
                          "isUpdating": false,
                          "isVisible": true,
                          "latestValues": Object {
                            "opacity": 0,
                            "scale": 0.7,
                          },
                          "needsReset": false,
                          "options": Object {
                            "alwaysMeasureLayout": undefined,
                            "animationType": "both",
                            "crossfade": true,
                            "initialPromotionConfig": Object {},
                            "layout": undefined,
                            "layoutId": undefined,
                            "layoutScroll": undefined,
                            "scheduleRender": [Function],
                            "visualElement": Object {
                              "addValue": [Function],
                              "addVariantChild": [Function],
                              "animationState": Object {
                                "animateChanges": [Function],
                                "getState": [Function],
                                "isAnimated": [Function],
                                "setActive": [Function],
                                "setAnimateFunction": [Function],
                              },
                              "blockInitialAnimation": false,
                              "build": [Function],
                              "children": Set {},
                              "clearAllListeners": [Function],
                              "current": <div
                                class="chakra-offset-slide"
                                style="opacity: 0; transform: scale(0.7) translateZ(0);"
                              >
                                <div
                                  class="css-0"
                                >
                                  <h2
                                    class="chakra-heading css-0"
                                  >
                                    Register
                                  </h2>
                                  <div
                                    class="css-0"
                                  >
                                    <div
                                      class="chakra-form-control css-0"
                                      role="group"
                                    >
                                      <form>
                                        <div
                                          class="chakra-stack css-0"
                                        >
                                          <input />
                                        </div>
                                      </form>
                                    </div>
                                  </div>
                                </div>
                              </div>,
                              "depth": 0,
                              "forEachValue": [Function],
                              "getBaseTarget": [Function],
                              "getClosestVariantNode": [Function],
                              "getDefaultTransition": [Function],
                              "getInstance": [Function],
                              "getLatestValues": [Function],
                              "getLayoutId": [Function],
                              "getProps": [Function],
                              "getStaticValue": [Function],
                              "getTransformPagePoint": [Function],
                              "getValue": [Function],
                              "getVariant": [Function],
                              "getVariantContext": [Function],
                              "hasValue": [Function],
                              "isMounted": [Function],
                              "isPresent": true,
                              "isVisible": undefined,
                              "makeTargetAnimatable": [Function],
                              "manuallyAnimateOnMount": false,
                              "measureViewportBox": [Function],
                              "mount": [Function],
                              "notifyAnimationComplete": [Function],
                              "notifyAnimationStart": [Function],
                              "notifyBeforeLayoutMeasure": [Function],
                              "notifyLayoutAnimationComplete": [Function],
                              "notifyLayoutAnimationStart": [Function],
                              "notifyLayoutMeasure": [Function],
                              "notifyLayoutUpdate": [Function],
                              "notifyRender": [Function],
                              "notifySetAxisTarget": [Function],
                              "notifyUnmount": [Function],
                              "notifyUpdate": [Function],
                              "notifyViewportBoxUpdate": [Function],
                              "onAnimationComplete": [Function],
                              "onAnimationStart": [Function],
                              "onBeforeLayoutMeasure": [Function],
                              "onLayoutAnimationComplete": [Function],
                              "onLayoutAnimationStart": [Function],
                              "onLayoutMeasure": [Function],
                              "onLayoutUpdate": [Function],
                              "onRender": [Function],
                              "onSetAxisTarget": [Function],
                              "onUnmount": [Function],
                              "onUpdate": [Function],
                              "onViewportBoxUpdate": [Function],
                              "parent": undefined,
                              "presenceId": 0,
                              "projection": [Circular],
                              "readValue": [Function],
                              "removeValue": [Function],
                              "scheduleRender": [Function],
                              "setBaseTarget": [Function],
                              "setProps": [Function],
                              "setStaticValue": [Function],
                              "setVisibility": [Function],
                              "shouldReduceMotion": false,
                              "sortNodePosition": [Function],
                              "syncRender": [Function],
                              "treeType": "dom",
                              "unmount": [Function],
                              "updatePropListeners": [Function],
                              "variantChildren": Set {},
                            },
                          },
                          "parent": [Circular],
                          "path": Array [
                            [Circular],
                          ],
                          "potentialNodes": Map {},
                          "root": [Circular],
                          "sharedNodes": Map {},
                          "shouldResetTransform": false,
                          "treeScale": Object {
                            "x": 1,
                            "y": 1,
                          },
                          "updateBlockedByResize": false,
                          "updateManuallyBlocked": false,
                          "updateProjection": [Function],
                        },
                        ProjectionNode {
                          "animationProgress": 0,
                          "checkUpdateFailed": [Function],
                          "children": Set {},
                          "depth": 1,
                          "eventHandlers": Map {},
                          "hasProjected": false,
                          "id": undefined,
                          "instance": <div
                            class="chakra-offset-slide"
                            style="opacity: 0; transform: scale(0.7) translateZ(0);"
                          >
                            <div
                              class="css-0"
                            >
                              <h2
                                class="chakra-heading css-0"
                              >
                                Login
                              </h2>
                              <div
                                class="css-0"
                              >
                                <div
                                  class="chakra-form-control css-0"
                                  role="group"
                                >
                                  <form>
                                    <div
                                      class="chakra-stack css-0"
                                    >
                                      <input />
                                    </div>
                                  </form>
                                </div>
                              </div>
                            </div>
                          </div>,
                          "isAnimationBlocked": false,
                          "isLayoutDirty": false,
                          "isSVG": false,
                          "isTreeAnimating": false,
                          "isUpdating": false,
                          "isVisible": true,
                          "latestValues": Object {
                            "opacity": 0,
                            "scale": 0.7,
                          },
                          "needsReset": false,
                          "options": Object {
                            "alwaysMeasureLayout": undefined,
                            "animationType": "both",
                            "crossfade": true,
                            "initialPromotionConfig": Object {},
                            "layout": undefined,
                            "layoutId": undefined,
                            "layoutScroll": undefined,
                            "scheduleRender": [Function],
                            "visualElement": Object {
                              "addValue": [Function],
                              "addVariantChild": [Function],
                              "animationState": Object {
                                "animateChanges": [Function],
                                "getState": [Function],
                                "isAnimated": [Function],
                                "setActive": [Function],
                                "setAnimateFunction": [Function],
                              },
                              "blockInitialAnimation": false,
                              "build": [Function],
                              "children": Set {},
                              "clearAllListeners": [Function],
                              "current": <div
                                class="chakra-offset-slide"
                                style="opacity: 0; transform: scale(0.7) translateZ(0);"
                              >
                                <div
                                  class="css-0"
                                >
                                  <h2
                                    class="chakra-heading css-0"
                                  >
                                    Login
                                  </h2>
                                  <div
                                    class="css-0"
                                  >
                                    <div
                                      class="chakra-form-control css-0"
                                      role="group"
                                    >
                                      <form>
                                        <div
                                          class="chakra-stack css-0"
                                        >
                                          <input />
                                        </div>
                                      </form>
                                    </div>
                                  </div>
                                </div>
                              </div>,
                              "depth": 0,
                              "forEachValue": [Function],
                              "getBaseTarget": [Function],
                              "getClosestVariantNode": [Function],
                              "getDefaultTransition": [Function],
                              "getInstance": [Function],
                              "getLatestValues": [Function],
                              "getLayoutId": [Function],
                              "getProps": [Function],
                              "getStaticValue": [Function],
                              "getTransformPagePoint": [Function],
                              "getValue": [Function],
                              "getVariant": [Function],
                              "getVariantContext": [Function],
                              "hasValue": [Function],
                              "isMounted": [Function],
                              "isPresent": true,
                              "isVisible": undefined,
                              "makeTargetAnimatable": [Function],
                              "manuallyAnimateOnMount": false,
                              "measureViewportBox": [Function],
                              "mount": [Function],
                              "notifyAnimationComplete": [Function],
                              "notifyAnimationStart": [Function],
                              "notifyBeforeLayoutMeasure": [Function],
                              "notifyLayoutAnimationComplete": [Function],
                              "notifyLayoutAnimationStart": [Function],
                              "notifyLayoutMeasure": [Function],
                              "notifyLayoutUpdate": [Function],
                              "notifyRender": [Function],
                              "notifySetAxisTarget": [Function],
                              "notifyUnmount": [Function],
                              "notifyUpdate": [Function],
                              "notifyViewportBoxUpdate": [Function],
                              "onAnimationComplete": [Function],
                              "onAnimationStart": [Function],
                              "onBeforeLayoutMeasure": [Function],
                              "onLayoutAnimationComplete": [Function],
                              "onLayoutAnimationStart": [Function],
                              "onLayoutMeasure": [Function],
                              "onLayoutUpdate": [Function],
                              "onRender": [Function],
                              "onSetAxisTarget": [Function],
                              "onUnmount": [Function],
                              "onUpdate": [Function],
                              "onViewportBoxUpdate": [Function],
                              "parent": undefined,
                              "presenceId": 2,
                              "projection": [Circular],
                              "readValue": [Function],
                              "removeValue": [Function],
                              "scheduleRender": [Function],
                              "setBaseTarget": [Function],
                              "setProps": [Function],
                              "setStaticValue": [Function],
                              "setVisibility": [Function],
                              "shouldReduceMotion": false,
                              "sortNodePosition": [Function],
                              "syncRender": [Function],
                              "treeType": "dom",
                              "unmount": [Function],
                              "updatePropListeners": [Function],
                              "variantChildren": Set {},
                            },
                          },
                          "parent": [Circular],
                          "path": Array [
                            [Circular],
                          ],
                          "potentialNodes": Map {},
                          "root": [Circular],
                          "sharedNodes": Map {},
                          "shouldResetTransform": false,
                          "treeScale": Object {
                            "x": 1,
                            "y": 1,
                          },
                          "updateBlockedByResize": false,
                          "updateManuallyBlocked": false,
                          "updateProjection": [Function],
                        },
                        [Circular],
                      },
                      "depth": 0,
                      "eventHandlers": Map {},
                      "hasProjected": false,
                      "id": 0,
                      "instance": [Window],
                      "isAnimationBlocked": false,
                      "isLayoutDirty": false,
                      "isSVG": false,
                      "isTreeAnimating": false,
                      "isUpdating": false,
                      "isVisible": true,
                      "latestValues": Object {},
                      "needsReset": false,
                      "nodes": FlatTree {
                        "children": Array [
                          [Circular],
                          ProjectionNode {
                            "animationProgress": 0,
                            "checkUpdateFailed": [Function],
                            "children": Set {},
                            "depth": 1,
                            "eventHandlers": Map {},
                            "hasProjected": false,
                            "id": undefined,
                            "instance": <div
                              class="chakra-offset-slide"
                              style="opacity: 0; transform: scale(0.7) translateZ(0);"
                            >
                              <div
                                class="css-0"
                              >
                                <h2
                                  class="chakra-heading css-0"
                                >
                                  Register
                                </h2>
                                <div
                                  class="css-0"
                                >
                                  <div
                                    class="chakra-form-control css-0"
                                    role="group"
                                  >
                                    <form>
                                      <div
                                        class="chakra-stack css-0"
                                      >
                                        <input />
                                      </div>
                                    </form>
                                  </div>
                                </div>
                              </div>
                            </div>,
                            "isAnimationBlocked": false,
                            "isLayoutDirty": false,
                            "isSVG": false,
                            "isTreeAnimating": false,
                            "isUpdating": false,
                            "isVisible": true,
                            "latestValues": Object {
                              "opacity": 0,
                              "scale": 0.7,
                            },
                            "needsReset": false,
                            "options": Object {
                              "alwaysMeasureLayout": undefined,
                              "animationType": "both",
                              "crossfade": true,
                              "initialPromotionConfig": Object {},
                              "layout": undefined,
                              "layoutId": undefined,
                              "layoutScroll": undefined,
                              "scheduleRender": [Function],
                              "visualElement": Object {
                                "addValue": [Function],
                                "addVariantChild": [Function],
                                "animationState": Object {
                                  "animateChanges": [Function],
                                  "getState": [Function],
                                  "isAnimated": [Function],
                                  "setActive": [Function],
                                  "setAnimateFunction": [Function],
                                },
                                "blockInitialAnimation": false,
                                "build": [Function],
                                "children": Set {},
                                "clearAllListeners": [Function],
                                "current": <div
                                  class="chakra-offset-slide"
                                  style="opacity: 0; transform: scale(0.7) translateZ(0);"
                                >
                                  <div
                                    class="css-0"
                                  >
                                    <h2
                                      class="chakra-heading css-0"
                                    >
                                      Register
                                    </h2>
                                    <div
                                      class="css-0"
                                    >
                                      <div
                                        class="chakra-form-control css-0"
                                        role="group"
                                      >
                                        <form>
                                          <div
                                            class="chakra-stack css-0"
                                          >
                                            <input />
                                          </div>
                                        </form>
                                      </div>
                                    </div>
                                  </div>
                                </div>,
                                "depth": 0,
                                "forEachValue": [Function],
                                "getBaseTarget": [Function],
                                "getClosestVariantNode": [Function],
                                "getDefaultTransition": [Function],
                                "getInstance": [Function],
                                "getLatestValues": [Function],
                                "getLayoutId": [Function],
                                "getProps": [Function],
                                "getStaticValue": [Function],
                                "getTransformPagePoint": [Function],
                                "getValue": [Function],
                                "getVariant": [Function],
                                "getVariantContext": [Function],
                                "hasValue": [Function],
                                "isMounted": [Function],
                                "isPresent": true,
                                "isVisible": undefined,
                                "makeTargetAnimatable": [Function],
                                "manuallyAnimateOnMount": false,
                                "measureViewportBox": [Function],
                                "mount": [Function],
                                "notifyAnimationComplete": [Function],
                                "notifyAnimationStart": [Function],
                                "notifyBeforeLayoutMeasure": [Function],
                                "notifyLayoutAnimationComplete": [Function],
                                "notifyLayoutAnimationStart": [Function],
                                "notifyLayoutMeasure": [Function],
                                "notifyLayoutUpdate": [Function],
                                "notifyRender": [Function],
                                "notifySetAxisTarget": [Function],
                                "notifyUnmount": [Function],
                                "notifyUpdate": [Function],
                                "notifyViewportBoxUpdate": [Function],
                                "onAnimationComplete": [Function],
                                "onAnimationStart": [Function],
                                "onBeforeLayoutMeasure": [Function],
                                "onLayoutAnimationComplete": [Function],
                                "onLayoutAnimationStart": [Function],
                                "onLayoutMeasure": [Function],
                                "onLayoutUpdate": [Function],
                                "onRender": [Function],
                                "onSetAxisTarget": [Function],
                                "onUnmount": [Function],
                                "onUpdate": [Function],
                                "onViewportBoxUpdate": [Function],
                                "parent": undefined,
                                "presenceId": 0,
                                "projection": [Circular],
                                "readValue": [Function],
                                "removeValue": [Function],
                                "scheduleRender": [Function],
                                "setBaseTarget": [Function],
                                "setProps": [Function],
                                "setStaticValue": [Function],
                                "setVisibility": [Function],
                                "shouldReduceMotion": false,
                                "sortNodePosition": [Function],
                                "syncRender": [Function],
                                "treeType": "dom",
                                "unmount": [Function],
                                "updatePropListeners": [Function],
                                "variantChildren": Set {},
                              },
                            },
                            "parent": [Circular],
                            "path": Array [
                              [Circular],
                            ],
                            "potentialNodes": Map {},
                            "root": [Circular],
                            "sharedNodes": Map {},
                            "shouldResetTransform": false,
                            "treeScale": Object {
                              "x": 1,
                              "y": 1,
                            },
                            "updateBlockedByResize": false,
                            "updateManuallyBlocked": false,
                            "updateProjection": [Function],
                          },
                          ProjectionNode {
                            "animationProgress": 0,
                            "checkUpdateFailed": [Function],
                            "children": Set {},
                            "depth": 1,
                            "eventHandlers": Map {},
                            "hasProjected": false,
                            "id": undefined,
                            "instance": <div
                              class="chakra-offset-slide"
                              style="opacity: 0; transform: scale(0.7) translateZ(0);"
                            >
                              <div
                                class="css-0"
                              >
                                <h2
                                  class="chakra-heading css-0"
                                >
                                  Login
                                </h2>
                                <div
                                  class="css-0"
                                >
                                  <div
                                    class="chakra-form-control css-0"
                                    role="group"
                                  >
                                    <form>
                                      <div
                                        class="chakra-stack css-0"
                                      >
                                        <input />
                                      </div>
                                    </form>
                                  </div>
                                </div>
                              </div>
                            </div>,
                            "isAnimationBlocked": false,
                            "isLayoutDirty": false,
                            "isSVG": false,
                            "isTreeAnimating": false,
                            "isUpdating": false,
                            "isVisible": true,
                            "latestValues": Object {
                              "opacity": 0,
                              "scale": 0.7,
                            },
                            "needsReset": false,
                            "options": Object {
                              "alwaysMeasureLayout": undefined,
                              "animationType": "both",
                              "crossfade": true,
                              "initialPromotionConfig": Object {},
                              "layout": undefined,
                              "layoutId": undefined,
                              "layoutScroll": undefined,
                              "scheduleRender": [Function],
                              "visualElement": Object {
                                "addValue": [Function],
                                "addVariantChild": [Function],
                                "animationState": Object {
                                  "animateChanges": [Function],
                                  "getState": [Function],
                                  "isAnimated": [Function],
                                  "setActive": [Function],
                                  "setAnimateFunction": [Function],
                                },
                                "blockInitialAnimation": false,
                                "build": [Function],
                                "children": Set {},
                                "clearAllListeners": [Function],
                                "current": <div
                                  class="chakra-offset-slide"
                                  style="opacity: 0; transform: scale(0.7) translateZ(0);"
                                >
                                  <div
                                    class="css-0"
                                  >
                                    <h2
                                      class="chakra-heading css-0"
                                    >
                                      Login
                                    </h2>
                                    <div
                                      class="css-0"
                                    >
                                      <div
                                        class="chakra-form-control css-0"
                                        role="group"
                                      >
                                        <form>
                                          <div
                                            class="chakra-stack css-0"
                                          >
                                            <input />
                                          </div>
                                        </form>
                                      </div>
                                    </div>
                                  </div>
                                </div>,
                                "depth": 0,
                                "forEachValue": [Function],
                                "getBaseTarget": [Function],
                                "getClosestVariantNode": [Function],
                                "getDefaultTransition": [Function],
                                "getInstance": [Function],
                                "getLatestValues": [Function],
                                "getLayoutId": [Function],
                                "getProps": [Function],
                                "getStaticValue": [Function],
                                "getTransformPagePoint": [Function],
                                "getValue": [Function],
                                "getVariant": [Function],
                                "getVariantContext": [Function],
                                "hasValue": [Function],
                                "isMounted": [Function],
                                "isPresent": true,
                                "isVisible": undefined,
                                "makeTargetAnimatable": [Function],
                                "manuallyAnimateOnMount": false,
                                "measureViewportBox": [Function],
                                "mount": [Function],
                                "notifyAnimationComplete": [Function],
                                "notifyAnimationStart": [Function],
                                "notifyBeforeLayoutMeasure": [Function],
                                "notifyLayoutAnimationComplete": [Function],
                                "notifyLayoutAnimationStart": [Function],
                                "notifyLayoutMeasure": [Function],
                                "notifyLayoutUpdate": [Function],
                                "notifyRender": [Function],
                                "notifySetAxisTarget": [Function],
                                "notifyUnmount": [Function],
                                "notifyUpdate": [Function],
                                "notifyViewportBoxUpdate": [Function],
                                "onAnimationComplete": [Function],
                                "onAnimationStart": [Function],
                                "onBeforeLayoutMeasure": [Function],
                                "onLayoutAnimationComplete": [Function],
                                "onLayoutAnimationStart": [Function],
                                "onLayoutMeasure": [Function],
                                "onLayoutUpdate": [Function],
                                "onRender": [Function],
                                "onSetAxisTarget": [Function],
                                "onUnmount": [Function],
                                "onUpdate": [Function],
                                "onViewportBoxUpdate": [Function],
                                "parent": undefined,
                                "presenceId": 2,
                                "projection": [Circular],
                                "readValue": [Function],
                                "removeValue": [Function],
                                "scheduleRender": [Function],
                                "setBaseTarget": [Function],
                                "setProps": [Function],
                                "setStaticValue": [Function],
                                "setVisibility": [Function],
                                "shouldReduceMotion": false,
                                "sortNodePosition": [Function],
                                "syncRender": [Function],
                                "treeType": "dom",
                                "unmount": [Function],
                                "updatePropListeners": [Function],
                                "variantChildren": Set {},
                              },
                            },
                            "parent": [Circular],
                            "path": Array [
                              [Circular],
                            ],
                            "potentialNodes": Map {},
                            "root": [Circular],
                            "sharedNodes": Map {},
                            "shouldResetTransform": false,
                            "treeScale": Object {
                              "x": 1,
                              "y": 1,
                            },
                            "updateBlockedByResize": false,
                            "updateManuallyBlocked": false,
                            "updateProjection": [Function],
                          },
                          [Circular],
                        ],
                        "isDirty": true,
                      },
                      "options": Object {
                        "crossfade": true,
                        "layoutScroll": true,
                      },
                      "parent": undefined,
                      "path": Array [],
                      "potentialNodes": Map {},
                      "root": [Circular],
                      "sharedNodes": Map {},
                      "shouldResetTransform": true,
                      "treeScale": Object {
                        "x": 1,
                        "y": 1,
                      },
                      "updateBlockedByResize": false,
                      "updateManuallyBlocked": false,
                      "updateProjection": [Function],
                    },
                  ],
                  "potentialNodes": Map {},
                  "root": ProjectionNode {
                    "animationProgress": 0,
                    "checkUpdateFailed": [Function],
                    "children": Set {
                      ProjectionNode {
                        "animationProgress": 0,
                        "checkUpdateFailed": [Function],
                        "children": Set {},
                        "depth": 1,
                        "eventHandlers": Map {},
                        "hasProjected": false,
                        "id": undefined,
                        "instance": <div
                          class="chakra-offset-slide"
                          style="opacity: 0; transform: scale(0.7) translateZ(0);"
                        >
                          <div
                            class="css-0"
                          >
                            <h2
                              class="chakra-heading css-0"
                            >
                              Register
                            </h2>
                            <div
                              class="css-0"
                            >
                              <div
                                class="chakra-form-control css-0"
                                role="group"
                              >
                                <form>
                                  <div
                                    class="chakra-stack css-0"
                                  >
                                    <input />
                                  </div>
                                </form>
                              </div>
                            </div>
                          </div>
                        </div>,
                        "isAnimationBlocked": false,
                        "isLayoutDirty": false,
                        "isSVG": false,
                        "isTreeAnimating": false,
                        "isUpdating": false,
                        "isVisible": true,
                        "latestValues": Object {
                          "opacity": 0,
                          "scale": 0.7,
                        },
                        "needsReset": false,
                        "options": Object {
                          "alwaysMeasureLayout": undefined,
                          "animationType": "both",
                          "crossfade": true,
                          "initialPromotionConfig": Object {},
                          "layout": undefined,
                          "layoutId": undefined,
                          "layoutScroll": undefined,
                          "scheduleRender": [Function],
                          "visualElement": Object {
                            "addValue": [Function],
                            "addVariantChild": [Function],
                            "animationState": Object {
                              "animateChanges": [Function],
                              "getState": [Function],
                              "isAnimated": [Function],
                              "setActive": [Function],
                              "setAnimateFunction": [Function],
                            },
                            "blockInitialAnimation": false,
                            "build": [Function],
                            "children": Set {},
                            "clearAllListeners": [Function],
                            "current": <div
                              class="chakra-offset-slide"
                              style="opacity: 0; transform: scale(0.7) translateZ(0);"
                            >
                              <div
                                class="css-0"
                              >
                                <h2
                                  class="chakra-heading css-0"
                                >
                                  Register
                                </h2>
                                <div
                                  class="css-0"
                                >
                                  <div
                                    class="chakra-form-control css-0"
                                    role="group"
                                  >
                                    <form>
                                      <div
                                        class="chakra-stack css-0"
                                      >
                                        <input />
                                      </div>
                                    </form>
                                  </div>
                                </div>
                              </div>
                            </div>,
                            "depth": 0,
                            "forEachValue": [Function],
                            "getBaseTarget": [Function],
                            "getClosestVariantNode": [Function],
                            "getDefaultTransition": [Function],
                            "getInstance": [Function],
                            "getLatestValues": [Function],
                            "getLayoutId": [Function],
                            "getProps": [Function],
                            "getStaticValue": [Function],
                            "getTransformPagePoint": [Function],
                            "getValue": [Function],
                            "getVariant": [Function],
                            "getVariantContext": [Function],
                            "hasValue": [Function],
                            "isMounted": [Function],
                            "isPresent": true,
                            "isVisible": undefined,
                            "makeTargetAnimatable": [Function],
                            "manuallyAnimateOnMount": false,
                            "measureViewportBox": [Function],
                            "mount": [Function],
                            "notifyAnimationComplete": [Function],
                            "notifyAnimationStart": [Function],
                            "notifyBeforeLayoutMeasure": [Function],
                            "notifyLayoutAnimationComplete": [Function],
                            "notifyLayoutAnimationStart": [Function],
                            "notifyLayoutMeasure": [Function],
                            "notifyLayoutUpdate": [Function],
                            "notifyRender": [Function],
                            "notifySetAxisTarget": [Function],
                            "notifyUnmount": [Function],
                            "notifyUpdate": [Function],
                            "notifyViewportBoxUpdate": [Function],
                            "onAnimationComplete": [Function],
                            "onAnimationStart": [Function],
                            "onBeforeLayoutMeasure": [Function],
                            "onLayoutAnimationComplete": [Function],
                            "onLayoutAnimationStart": [Function],
                            "onLayoutMeasure": [Function],
                            "onLayoutUpdate": [Function],
                            "onRender": [Function],
                            "onSetAxisTarget": [Function],
                            "onUnmount": [Function],
                            "onUpdate": [Function],
                            "onViewportBoxUpdate": [Function],
                            "parent": undefined,
                            "presenceId": 0,
                            "projection": [Circular],
                            "readValue": [Function],
                            "removeValue": [Function],
                            "scheduleRender": [Function],
                            "setBaseTarget": [Function],
                            "setProps": [Function],
                            "setStaticValue": [Function],
                            "setVisibility": [Function],
                            "shouldReduceMotion": false,
                            "sortNodePosition": [Function],
                            "syncRender": [Function],
                            "treeType": "dom",
                            "unmount": [Function],
                            "updatePropListeners": [Function],
                            "variantChildren": Set {},
                          },
                        },
                        "parent": [Circular],
                        "path": Array [
                          [Circular],
                        ],
                        "potentialNodes": Map {},
                        "root": [Circular],
                        "sharedNodes": Map {},
                        "shouldResetTransform": false,
                        "treeScale": Object {
                          "x": 1,
                          "y": 1,
                        },
                        "updateBlockedByResize": false,
                        "updateManuallyBlocked": false,
                        "updateProjection": [Function],
                      },
                      ProjectionNode {
                        "animationProgress": 0,
                        "checkUpdateFailed": [Function],
                        "children": Set {},
                        "depth": 1,
                        "eventHandlers": Map {},
                        "hasProjected": false,
                        "id": undefined,
                        "instance": <div
                          class="chakra-offset-slide"
                          style="opacity: 0; transform: scale(0.7) translateZ(0);"
                        >
                          <div
                            class="css-0"
                          >
                            <h2
                              class="chakra-heading css-0"
                            >
                              Login
                            </h2>
                            <div
                              class="css-0"
                            >
                              <div
                                class="chakra-form-control css-0"
                                role="group"
                              >
                                <form>
                                  <div
                                    class="chakra-stack css-0"
                                  >
                                    <input />
                                  </div>
                                </form>
                              </div>
                            </div>
                          </div>
                        </div>,
                        "isAnimationBlocked": false,
                        "isLayoutDirty": false,
                        "isSVG": false,
                        "isTreeAnimating": false,
                        "isUpdating": false,
                        "isVisible": true,
                        "latestValues": Object {
                          "opacity": 0,
                          "scale": 0.7,
                        },
                        "needsReset": false,
                        "options": Object {
                          "alwaysMeasureLayout": undefined,
                          "animationType": "both",
                          "crossfade": true,
                          "initialPromotionConfig": Object {},
                          "layout": undefined,
                          "layoutId": undefined,
                          "layoutScroll": undefined,
                          "scheduleRender": [Function],
                          "visualElement": Object {
                            "addValue": [Function],
                            "addVariantChild": [Function],
                            "animationState": Object {
                              "animateChanges": [Function],
                              "getState": [Function],
                              "isAnimated": [Function],
                              "setActive": [Function],
                              "setAnimateFunction": [Function],
                            },
                            "blockInitialAnimation": false,
                            "build": [Function],
                            "children": Set {},
                            "clearAllListeners": [Function],
                            "current": <div
                              class="chakra-offset-slide"
                              style="opacity: 0; transform: scale(0.7) translateZ(0);"
                            >
                              <div
                                class="css-0"
                              >
                                <h2
                                  class="chakra-heading css-0"
                                >
                                  Login
                                </h2>
                                <div
                                  class="css-0"
                                >
                                  <div
                                    class="chakra-form-control css-0"
                                    role="group"
                                  >
                                    <form>
                                      <div
                                        class="chakra-stack css-0"
                                      >
                                        <input />
                                      </div>
                                    </form>
                                  </div>
                                </div>
                              </div>
                            </div>,
                            "depth": 0,
                            "forEachValue": [Function],
                            "getBaseTarget": [Function],
                            "getClosestVariantNode": [Function],
                            "getDefaultTransition": [Function],
                            "getInstance": [Function],
                            "getLatestValues": [Function],
                            "getLayoutId": [Function],
                            "getProps": [Function],
                            "getStaticValue": [Function],
                            "getTransformPagePoint": [Function],
                            "getValue": [Function],
                            "getVariant": [Function],
                            "getVariantContext": [Function],
                            "hasValue": [Function],
                            "isMounted": [Function],
                            "isPresent": true,
                            "isVisible": undefined,
                            "makeTargetAnimatable": [Function],
                            "manuallyAnimateOnMount": false,
                            "measureViewportBox": [Function],
                            "mount": [Function],
                            "notifyAnimationComplete": [Function],
                            "notifyAnimationStart": [Function],
                            "notifyBeforeLayoutMeasure": [Function],
                            "notifyLayoutAnimationComplete": [Function],
                            "notifyLayoutAnimationStart": [Function],
                            "notifyLayoutMeasure": [Function],
                            "notifyLayoutUpdate": [Function],
                            "notifyRender": [Function],
                            "notifySetAxisTarget": [Function],
                            "notifyUnmount": [Function],
                            "notifyUpdate": [Function],
                            "notifyViewportBoxUpdate": [Function],
                            "onAnimationComplete": [Function],
                            "onAnimationStart": [Function],
                            "onBeforeLayoutMeasure": [Function],
                            "onLayoutAnimationComplete": [Function],
                            "onLayoutAnimationStart": [Function],
                            "onLayoutMeasure": [Function],
                            "onLayoutUpdate": [Function],
                            "onRender": [Function],
                            "onSetAxisTarget": [Function],
                            "onUnmount": [Function],
                            "onUpdate": [Function],
                            "onViewportBoxUpdate": [Function],
                            "parent": undefined,
                            "presenceId": 2,
                            "projection": [Circular],
                            "readValue": [Function],
                            "removeValue": [Function],
                            "scheduleRender": [Function],
                            "setBaseTarget": [Function],
                            "setProps": [Function],
                            "setStaticValue": [Function],
                            "setVisibility": [Function],
                            "shouldReduceMotion": false,
                            "sortNodePosition": [Function],
                            "syncRender": [Function],
                            "treeType": "dom",
                            "unmount": [Function],
                            "updatePropListeners": [Function],
                            "variantChildren": Set {},
                          },
                        },
                        "parent": [Circular],
                        "path": Array [
                          [Circular],
                        ],
                        "potentialNodes": Map {},
                        "root": [Circular],
                        "sharedNodes": Map {},
                        "shouldResetTransform": false,
                        "treeScale": Object {
                          "x": 1,
                          "y": 1,
                        },
                        "updateBlockedByResize": false,
                        "updateManuallyBlocked": false,
                        "updateProjection": [Function],
                      },
                      [Circular],
                    },
                    "depth": 0,
                    "eventHandlers": Map {},
                    "hasProjected": false,
                    "id": 0,
                    "instance": [Window],
                    "isAnimationBlocked": false,
                    "isLayoutDirty": false,
                    "isSVG": false,
                    "isTreeAnimating": false,
                    "isUpdating": false,
                    "isVisible": true,
                    "latestValues": Object {},
                    "needsReset": false,
                    "nodes": FlatTree {
                      "children": Array [
                        [Circular],
                        ProjectionNode {
                          "animationProgress": 0,
                          "checkUpdateFailed": [Function],
                          "children": Set {},
                          "depth": 1,
                          "eventHandlers": Map {},
                          "hasProjected": false,
                          "id": undefined,
                          "instance": <div
                            class="chakra-offset-slide"
                            style="opacity: 0; transform: scale(0.7) translateZ(0);"
                          >
                            <div
                              class="css-0"
                            >
                              <h2
                                class="chakra-heading css-0"
                              >
                                Register
                              </h2>
                              <div
                                class="css-0"
                              >
                                <div
                                  class="chakra-form-control css-0"
                                  role="group"
                                >
                                  <form>
                                    <div
                                      class="chakra-stack css-0"
                                    >
                                      <input />
                                    </div>
                                  </form>
                                </div>
                              </div>
                            </div>
                          </div>,
                          "isAnimationBlocked": false,
                          "isLayoutDirty": false,
                          "isSVG": false,
                          "isTreeAnimating": false,
                          "isUpdating": false,
                          "isVisible": true,
                          "latestValues": Object {
                            "opacity": 0,
                            "scale": 0.7,
                          },
                          "needsReset": false,
                          "options": Object {
                            "alwaysMeasureLayout": undefined,
                            "animationType": "both",
                            "crossfade": true,
                            "initialPromotionConfig": Object {},
                            "layout": undefined,
                            "layoutId": undefined,
                            "layoutScroll": undefined,
                            "scheduleRender": [Function],
                            "visualElement": Object {
                              "addValue": [Function],
                              "addVariantChild": [Function],
                              "animationState": Object {
                                "animateChanges": [Function],
                                "getState": [Function],
                                "isAnimated": [Function],
                                "setActive": [Function],
                                "setAnimateFunction": [Function],
                              },
                              "blockInitialAnimation": false,
                              "build": [Function],
                              "children": Set {},
                              "clearAllListeners": [Function],
                              "current": <div
                                class="chakra-offset-slide"
                                style="opacity: 0; transform: scale(0.7) translateZ(0);"
                              >
                                <div
                                  class="css-0"
                                >
                                  <h2
                                    class="chakra-heading css-0"
                                  >
                                    Register
                                  </h2>
                                  <div
                                    class="css-0"
                                  >
                                    <div
                                      class="chakra-form-control css-0"
                                      role="group"
                                    >
                                      <form>
                                        <div
                                          class="chakra-stack css-0"
                                        >
                                          <input />
                                        </div>
                                      </form>
                                    </div>
                                  </div>
                                </div>
                              </div>,
                              "depth": 0,
                              "forEachValue": [Function],
                              "getBaseTarget": [Function],
                              "getClosestVariantNode": [Function],
                              "getDefaultTransition": [Function],
                              "getInstance": [Function],
                              "getLatestValues": [Function],
                              "getLayoutId": [Function],
                              "getProps": [Function],
                              "getStaticValue": [Function],
                              "getTransformPagePoint": [Function],
                              "getValue": [Function],
                              "getVariant": [Function],
                              "getVariantContext": [Function],
                              "hasValue": [Function],
                              "isMounted": [Function],
                              "isPresent": true,
                              "isVisible": undefined,
                              "makeTargetAnimatable": [Function],
                              "manuallyAnimateOnMount": false,
                              "measureViewportBox": [Function],
                              "mount": [Function],
                              "notifyAnimationComplete": [Function],
                              "notifyAnimationStart": [Function],
                              "notifyBeforeLayoutMeasure": [Function],
                              "notifyLayoutAnimationComplete": [Function],
                              "notifyLayoutAnimationStart": [Function],
                              "notifyLayoutMeasure": [Function],
                              "notifyLayoutUpdate": [Function],
                              "notifyRender": [Function],
                              "notifySetAxisTarget": [Function],
                              "notifyUnmount": [Function],
                              "notifyUpdate": [Function],
                              "notifyViewportBoxUpdate": [Function],
                              "onAnimationComplete": [Function],
                              "onAnimationStart": [Function],
                              "onBeforeLayoutMeasure": [Function],
                              "onLayoutAnimationComplete": [Function],
                              "onLayoutAnimationStart": [Function],
                              "onLayoutMeasure": [Function],
                              "onLayoutUpdate": [Function],
                              "onRender": [Function],
                              "onSetAxisTarget": [Function],
                              "onUnmount": [Function],
                              "onUpdate": [Function],
                              "onViewportBoxUpdate": [Function],
                              "parent": undefined,
                              "presenceId": 0,
                              "projection": [Circular],
                              "readValue": [Function],
                              "removeValue": [Function],
                              "scheduleRender": [Function],
                              "setBaseTarget": [Function],
                              "setProps": [Function],
                              "setStaticValue": [Function],
                              "setVisibility": [Function],
                              "shouldReduceMotion": false,
                              "sortNodePosition": [Function],
                              "syncRender": [Function],
                              "treeType": "dom",
                              "unmount": [Function],
                              "updatePropListeners": [Function],
                              "variantChildren": Set {},
                            },
                          },
                          "parent": [Circular],
                          "path": Array [
                            [Circular],
                          ],
                          "potentialNodes": Map {},
                          "root": [Circular],
                          "sharedNodes": Map {},
                          "shouldResetTransform": false,
                          "treeScale": Object {
                            "x": 1,
                            "y": 1,
                          },
                          "updateBlockedByResize": false,
                          "updateManuallyBlocked": false,
                          "updateProjection": [Function],
                        },
                        ProjectionNode {
                          "animationProgress": 0,
                          "checkUpdateFailed": [Function],
                          "children": Set {},
                          "depth": 1,
                          "eventHandlers": Map {},
                          "hasProjected": false,
                          "id": undefined,
                          "instance": <div
                            class="chakra-offset-slide"
                            style="opacity: 0; transform: scale(0.7) translateZ(0);"
                          >
                            <div
                              class="css-0"
                            >
                              <h2
                                class="chakra-heading css-0"
                              >
                                Login
                              </h2>
                              <div
                                class="css-0"
                              >
                                <div
                                  class="chakra-form-control css-0"
                                  role="group"
                                >
                                  <form>
                                    <div
                                      class="chakra-stack css-0"
                                    >
                                      <input />
                                    </div>
                                  </form>
                                </div>
                              </div>
                            </div>
                          </div>,
                          "isAnimationBlocked": false,
                          "isLayoutDirty": false,
                          "isSVG": false,
                          "isTreeAnimating": false,
                          "isUpdating": false,
                          "isVisible": true,
                          "latestValues": Object {
                            "opacity": 0,
                            "scale": 0.7,
                          },
                          "needsReset": false,
                          "options": Object {
                            "alwaysMeasureLayout": undefined,
                            "animationType": "both",
                            "crossfade": true,
                            "initialPromotionConfig": Object {},
                            "layout": undefined,
                            "layoutId": undefined,
                            "layoutScroll": undefined,
                            "scheduleRender": [Function],
                            "visualElement": Object {
                              "addValue": [Function],
                              "addVariantChild": [Function],
                              "animationState": Object {
                                "animateChanges": [Function],
                                "getState": [Function],
                                "isAnimated": [Function],
                                "setActive": [Function],
                                "setAnimateFunction": [Function],
                              },
                              "blockInitialAnimation": false,
                              "build": [Function],
                              "children": Set {},
                              "clearAllListeners": [Function],
                              "current": <div
                                class="chakra-offset-slide"
                                style="opacity: 0; transform: scale(0.7) translateZ(0);"
                              >
                                <div
                                  class="css-0"
                                >
                                  <h2
                                    class="chakra-heading css-0"
                                  >
                                    Login
                                  </h2>
                                  <div
                                    class="css-0"
                                  >
                                    <div
                                      class="chakra-form-control css-0"
                                      role="group"
                                    >
                                      <form>
                                        <div
                                          class="chakra-stack css-0"
                                        >
                                          <input />
                                        </div>
                                      </form>
                                    </div>
                                  </div>
                                </div>
                              </div>,
                              "depth": 0,
                              "forEachValue": [Function],
                              "getBaseTarget": [Function],
                              "getClosestVariantNode": [Function],
                              "getDefaultTransition": [Function],
                              "getInstance": [Function],
                              "getLatestValues": [Function],
                              "getLayoutId": [Function],
                              "getProps": [Function],
                              "getStaticValue": [Function],
                              "getTransformPagePoint": [Function],
                              "getValue": [Function],
                              "getVariant": [Function],
                              "getVariantContext": [Function],
                              "hasValue": [Function],
                              "isMounted": [Function],
                              "isPresent": true,
                              "isVisible": undefined,
                              "makeTargetAnimatable": [Function],
                              "manuallyAnimateOnMount": false,
                              "measureViewportBox": [Function],
                              "mount": [Function],
                              "notifyAnimationComplete": [Function],
                              "notifyAnimationStart": [Function],
                              "notifyBeforeLayoutMeasure": [Function],
                              "notifyLayoutAnimationComplete": [Function],
                              "notifyLayoutAnimationStart": [Function],
                              "notifyLayoutMeasure": [Function],
                              "notifyLayoutUpdate": [Function],
                              "notifyRender": [Function],
                              "notifySetAxisTarget": [Function],
                              "notifyUnmount": [Function],
                              "notifyUpdate": [Function],
                              "notifyViewportBoxUpdate": [Function],
                              "onAnimationComplete": [Function],
                              "onAnimationStart": [Function],
                              "onBeforeLayoutMeasure": [Function],
                              "onLayoutAnimationComplete": [Function],
                              "onLayoutAnimationStart": [Function],
                              "onLayoutMeasure": [Function],
                              "onLayoutUpdate": [Function],
                              "onRender": [Function],
                              "onSetAxisTarget": [Function],
                              "onUnmount": [Function],
                              "onUpdate": [Function],
                              "onViewportBoxUpdate": [Function],
                              "parent": undefined,
                              "presenceId": 2,
                              "projection": [Circular],
                              "readValue": [Function],
                              "removeValue": [Function],
                              "scheduleRender": [Function],
                              "setBaseTarget": [Function],
                              "setProps": [Function],
                              "setStaticValue": [Function],
                              "setVisibility": [Function],
                              "shouldReduceMotion": false,
                              "sortNodePosition": [Function],
                              "syncRender": [Function],
                              "treeType": "dom",
                              "unmount": [Function],
                              "updatePropListeners": [Function],
                              "variantChildren": Set {},
                            },
                          },
                          "parent": [Circular],
                          "path": Array [
                            [Circular],
                          ],
                          "potentialNodes": Map {},
                          "root": [Circular],
                          "sharedNodes": Map {},
                          "shouldResetTransform": false,
                          "treeScale": Object {
                            "x": 1,
                            "y": 1,
                          },
                          "updateBlockedByResize": false,
                          "updateManuallyBlocked": false,
                          "updateProjection": [Function],
                        },
                        [Circular],
                      ],
                      "isDirty": true,
                    },
                    "options": Object {
                      "crossfade": true,
                      "layoutScroll": true,
                    },
                    "parent": undefined,
                    "path": Array [],
                    "potentialNodes": Map {},
                    "root": [Circular],
                    "sharedNodes": Map {},
                    "shouldResetTransform": true,
                    "treeScale": Object {
                      "x": 1,
                      "y": 1,
                    },
                    "updateBlockedByResize": false,
                    "updateManuallyBlocked": false,
                    "updateProjection": [Function],
                  },
                  "sharedNodes": Map {},
                  "shouldResetTransform": false,
                  "treeScale": Object {
                    "x": 1,
                    "y": 1,
                  },
                  "updateBlockedByResize": false,
                  "updateManuallyBlocked": false,
                  "updateProjection": [Function],
                },
                "readValue": [Function],
                "removeValue": [Function],
                "scheduleRender": [Function],
                "setBaseTarget": [Function],
                "setProps": [Function],
                "setStaticValue": [Function],
                "setVisibility": [Function],
                "shouldReduceMotion": false,
                "sortNodePosition": [Function],
                "syncRender": [Function],
                "treeType": "dom",
                "unmount": [Function],
                "updatePropListeners": [Function],
                "variantChildren": Set {},
              }
            }
          >
            <Component
              animate="enter"
              className="chakra-offset-slide"
              custom={
                Object {
                  "delay": undefined,
                  "initialScale": 0.7,
                  "reverse": true,
                  "transition": undefined,
                  "transitionEnd": undefined,
                }
              }
              exit="exit"
              initial="exit"
              key="animation"
              variants={
                Object {
                  "enter": [Function],
                  "exit": [Function],
                }
              }
              visualElement={
                Object {
                  "addValue": [Function],
                  "addVariantChild": [Function],
                  "animationState": Object {
                    "animateChanges": [Function],
                    "getState": [Function],
                    "isAnimated": [Function],
                    "setActive": [Function],
                    "setAnimateFunction": [Function],
                  },
                  "blockInitialAnimation": false,
                  "build": [Function],
                  "children": Set {},
                  "clearAllListeners": [Function],
                  "current": <div
                    class="chakra-offset-slide"
                    style="opacity: 0; transform: scale(0.7) translateZ(0);"
                  >
                    <div
                      class="css-0"
                    >
                      <h2
                        class="chakra-heading css-0"
                      >
                        Register
                      </h2>
                      <div
                        class="css-0"
                      >
                        <div
                          class="chakra-form-control css-0"
                          role="group"
                        >
                          <form>
                            <div
                              class="chakra-stack css-0"
                            >
                              <input />
                            </div>
                          </form>
                        </div>
                      </div>
                    </div>
                  </div>,
                  "depth": 0,
                  "forEachValue": [Function],
                  "getBaseTarget": [Function],
                  "getClosestVariantNode": [Function],
                  "getDefaultTransition": [Function],
                  "getInstance": [Function],
                  "getLatestValues": [Function],
                  "getLayoutId": [Function],
                  "getProps": [Function],
                  "getStaticValue": [Function],
                  "getTransformPagePoint": [Function],
                  "getValue": [Function],
                  "getVariant": [Function],
                  "getVariantContext": [Function],
                  "hasValue": [Function],
                  "isMounted": [Function],
                  "isPresent": true,
                  "isVisible": undefined,
                  "makeTargetAnimatable": [Function],
                  "manuallyAnimateOnMount": false,
                  "measureViewportBox": [Function],
                  "mount": [Function],
                  "notifyAnimationComplete": [Function],
                  "notifyAnimationStart": [Function],
                  "notifyBeforeLayoutMeasure": [Function],
                  "notifyLayoutAnimationComplete": [Function],
                  "notifyLayoutAnimationStart": [Function],
                  "notifyLayoutMeasure": [Function],
                  "notifyLayoutUpdate": [Function],
                  "notifyRender": [Function],
                  "notifySetAxisTarget": [Function],
                  "notifyUnmount": [Function],
                  "notifyUpdate": [Function],
                  "notifyViewportBoxUpdate": [Function],
                  "onAnimationComplete": [Function],
                  "onAnimationStart": [Function],
                  "onBeforeLayoutMeasure": [Function],
                  "onLayoutAnimationComplete": [Function],
                  "onLayoutAnimationStart": [Function],
                  "onLayoutMeasure": [Function],
                  "onLayoutUpdate": [Function],
                  "onRender": [Function],
                  "onSetAxisTarget": [Function],
                  "onUnmount": [Function],
                  "onUpdate": [Function],
                  "onViewportBoxUpdate": [Function],
                  "parent": undefined,
                  "presenceId": 4,
                  "projection": ProjectionNode {
                    "animationProgress": 0,
                    "checkUpdateFailed": [Function],
                    "children": Set {},
                    "depth": 1,
                    "eventHandlers": Map {},
                    "hasProjected": false,
                    "id": undefined,
                    "instance": <div
                      class="chakra-offset-slide"
                      style="opacity: 0; transform: scale(0.7) translateZ(0);"
                    >
                      <div
                        class="css-0"
                      >
                        <h2
                          class="chakra-heading css-0"
                        >
                          Register
                        </h2>
                        <div
                          class="css-0"
                        >
                          <div
                            class="chakra-form-control css-0"
                            role="group"
                          >
                            <form>
                              <div
                                class="chakra-stack css-0"
                              >
                                <input />
                              </div>
                            </form>
                          </div>
                        </div>
                      </div>
                    </div>,
                    "isAnimationBlocked": false,
                    "isLayoutDirty": false,
                    "isSVG": false,
                    "isTreeAnimating": false,
                    "isUpdating": false,
                    "isVisible": true,
                    "latestValues": Object {
                      "opacity": 0,
                      "scale": 0.7,
                    },
                    "needsReset": false,
                    "options": Object {
                      "alwaysMeasureLayout": undefined,
                      "animationType": "both",
                      "crossfade": true,
                      "initialPromotionConfig": Object {},
                      "layout": undefined,
                      "layoutId": undefined,
                      "layoutScroll": undefined,
                      "scheduleRender": [Function],
                      "visualElement": [Circular],
                    },
                    "parent": ProjectionNode {
                      "animationProgress": 0,
                      "checkUpdateFailed": [Function],
                      "children": Set {
                        ProjectionNode {
                          "animationProgress": 0,
                          "checkUpdateFailed": [Function],
                          "children": Set {},
                          "depth": 1,
                          "eventHandlers": Map {},
                          "hasProjected": false,
                          "id": undefined,
                          "instance": <div
                            class="chakra-offset-slide"
                            style="opacity: 0; transform: scale(0.7) translateZ(0);"
                          >
                            <div
                              class="css-0"
                            >
                              <h2
                                class="chakra-heading css-0"
                              >
                                Register
                              </h2>
                              <div
                                class="css-0"
                              >
                                <div
                                  class="chakra-form-control css-0"
                                  role="group"
                                >
                                  <form>
                                    <div
                                      class="chakra-stack css-0"
                                    >
                                      <input />
                                    </div>
                                  </form>
                                </div>
                              </div>
                            </div>
                          </div>,
                          "isAnimationBlocked": false,
                          "isLayoutDirty": false,
                          "isSVG": false,
                          "isTreeAnimating": false,
                          "isUpdating": false,
                          "isVisible": true,
                          "latestValues": Object {
                            "opacity": 0,
                            "scale": 0.7,
                          },
                          "needsReset": false,
                          "options": Object {
                            "alwaysMeasureLayout": undefined,
                            "animationType": "both",
                            "crossfade": true,
                            "initialPromotionConfig": Object {},
                            "layout": undefined,
                            "layoutId": undefined,
                            "layoutScroll": undefined,
                            "scheduleRender": [Function],
                            "visualElement": Object {
                              "addValue": [Function],
                              "addVariantChild": [Function],
                              "animationState": Object {
                                "animateChanges": [Function],
                                "getState": [Function],
                                "isAnimated": [Function],
                                "setActive": [Function],
                                "setAnimateFunction": [Function],
                              },
                              "blockInitialAnimation": false,
                              "build": [Function],
                              "children": Set {},
                              "clearAllListeners": [Function],
                              "current": <div
                                class="chakra-offset-slide"
                                style="opacity: 0; transform: scale(0.7) translateZ(0);"
                              >
                                <div
                                  class="css-0"
                                >
                                  <h2
                                    class="chakra-heading css-0"
                                  >
                                    Register
                                  </h2>
                                  <div
                                    class="css-0"
                                  >
                                    <div
                                      class="chakra-form-control css-0"
                                      role="group"
                                    >
                                      <form>
                                        <div
                                          class="chakra-stack css-0"
                                        >
                                          <input />
                                        </div>
                                      </form>
                                    </div>
                                  </div>
                                </div>
                              </div>,
                              "depth": 0,
                              "forEachValue": [Function],
                              "getBaseTarget": [Function],
                              "getClosestVariantNode": [Function],
                              "getDefaultTransition": [Function],
                              "getInstance": [Function],
                              "getLatestValues": [Function],
                              "getLayoutId": [Function],
                              "getProps": [Function],
                              "getStaticValue": [Function],
                              "getTransformPagePoint": [Function],
                              "getValue": [Function],
                              "getVariant": [Function],
                              "getVariantContext": [Function],
                              "hasValue": [Function],
                              "isMounted": [Function],
                              "isPresent": true,
                              "isVisible": undefined,
                              "makeTargetAnimatable": [Function],
                              "manuallyAnimateOnMount": false,
                              "measureViewportBox": [Function],
                              "mount": [Function],
                              "notifyAnimationComplete": [Function],
                              "notifyAnimationStart": [Function],
                              "notifyBeforeLayoutMeasure": [Function],
                              "notifyLayoutAnimationComplete": [Function],
                              "notifyLayoutAnimationStart": [Function],
                              "notifyLayoutMeasure": [Function],
                              "notifyLayoutUpdate": [Function],
                              "notifyRender": [Function],
                              "notifySetAxisTarget": [Function],
                              "notifyUnmount": [Function],
                              "notifyUpdate": [Function],
                              "notifyViewportBoxUpdate": [Function],
                              "onAnimationComplete": [Function],
                              "onAnimationStart": [Function],
                              "onBeforeLayoutMeasure": [Function],
                              "onLayoutAnimationComplete": [Function],
                              "onLayoutAnimationStart": [Function],
                              "onLayoutMeasure": [Function],
                              "onLayoutUpdate": [Function],
                              "onRender": [Function],
                              "onSetAxisTarget": [Function],
                              "onUnmount": [Function],
                              "onUpdate": [Function],
                              "onViewportBoxUpdate": [Function],
                              "parent": undefined,
                              "presenceId": 0,
                              "projection": [Circular],
                              "readValue": [Function],
                              "removeValue": [Function],
                              "scheduleRender": [Function],
                              "setBaseTarget": [Function],
                              "setProps": [Function],
                              "setStaticValue": [Function],
                              "setVisibility": [Function],
                              "shouldReduceMotion": false,
                              "sortNodePosition": [Function],
                              "syncRender": [Function],
                              "treeType": "dom",
                              "unmount": [Function],
                              "updatePropListeners": [Function],
                              "variantChildren": Set {},
                            },
                          },
                          "parent": [Circular],
                          "path": Array [
                            [Circular],
                          ],
                          "potentialNodes": Map {},
                          "root": [Circular],
                          "sharedNodes": Map {},
                          "shouldResetTransform": false,
                          "treeScale": Object {
                            "x": 1,
                            "y": 1,
                          },
                          "updateBlockedByResize": false,
                          "updateManuallyBlocked": false,
                          "updateProjection": [Function],
                        },
                        ProjectionNode {
                          "animationProgress": 0,
                          "checkUpdateFailed": [Function],
                          "children": Set {},
                          "depth": 1,
                          "eventHandlers": Map {},
                          "hasProjected": false,
                          "id": undefined,
                          "instance": <div
                            class="chakra-offset-slide"
                            style="opacity: 0; transform: scale(0.7) translateZ(0);"
                          >
                            <div
                              class="css-0"
                            >
                              <h2
                                class="chakra-heading css-0"
                              >
                                Login
                              </h2>
                              <div
                                class="css-0"
                              >
                                <div
                                  class="chakra-form-control css-0"
                                  role="group"
                                >
                                  <form>
                                    <div
                                      class="chakra-stack css-0"
                                    >
                                      <input />
                                    </div>
                                  </form>
                                </div>
                              </div>
                            </div>
                          </div>,
                          "isAnimationBlocked": false,
                          "isLayoutDirty": false,
                          "isSVG": false,
                          "isTreeAnimating": false,
                          "isUpdating": false,
                          "isVisible": true,
                          "latestValues": Object {
                            "opacity": 0,
                            "scale": 0.7,
                          },
                          "needsReset": false,
                          "options": Object {
                            "alwaysMeasureLayout": undefined,
                            "animationType": "both",
                            "crossfade": true,
                            "initialPromotionConfig": Object {},
                            "layout": undefined,
                            "layoutId": undefined,
                            "layoutScroll": undefined,
                            "scheduleRender": [Function],
                            "visualElement": Object {
                              "addValue": [Function],
                              "addVariantChild": [Function],
                              "animationState": Object {
                                "animateChanges": [Function],
                                "getState": [Function],
                                "isAnimated": [Function],
                                "setActive": [Function],
                                "setAnimateFunction": [Function],
                              },
                              "blockInitialAnimation": false,
                              "build": [Function],
                              "children": Set {},
                              "clearAllListeners": [Function],
                              "current": <div
                                class="chakra-offset-slide"
                                style="opacity: 0; transform: scale(0.7) translateZ(0);"
                              >
                                <div
                                  class="css-0"
                                >
                                  <h2
                                    class="chakra-heading css-0"
                                  >
                                    Login
                                  </h2>
                                  <div
                                    class="css-0"
                                  >
                                    <div
                                      class="chakra-form-control css-0"
                                      role="group"
                                    >
                                      <form>
                                        <div
                                          class="chakra-stack css-0"
                                        >
                                          <input />
                                        </div>
                                      </form>
                                    </div>
                                  </div>
                                </div>
                              </div>,
                              "depth": 0,
                              "forEachValue": [Function],
                              "getBaseTarget": [Function],
                              "getClosestVariantNode": [Function],
                              "getDefaultTransition": [Function],
                              "getInstance": [Function],
                              "getLatestValues": [Function],
                              "getLayoutId": [Function],
                              "getProps": [Function],
                              "getStaticValue": [Function],
                              "getTransformPagePoint": [Function],
                              "getValue": [Function],
                              "getVariant": [Function],
                              "getVariantContext": [Function],
                              "hasValue": [Function],
                              "isMounted": [Function],
                              "isPresent": true,
                              "isVisible": undefined,
                              "makeTargetAnimatable": [Function],
                              "manuallyAnimateOnMount": false,
                              "measureViewportBox": [Function],
                              "mount": [Function],
                              "notifyAnimationComplete": [Function],
                              "notifyAnimationStart": [Function],
                              "notifyBeforeLayoutMeasure": [Function],
                              "notifyLayoutAnimationComplete": [Function],
                              "notifyLayoutAnimationStart": [Function],
                              "notifyLayoutMeasure": [Function],
                              "notifyLayoutUpdate": [Function],
                              "notifyRender": [Function],
                              "notifySetAxisTarget": [Function],
                              "notifyUnmount": [Function],
                              "notifyUpdate": [Function],
                              "notifyViewportBoxUpdate": [Function],
                              "onAnimationComplete": [Function],
                              "onAnimationStart": [Function],
                              "onBeforeLayoutMeasure": [Function],
                              "onLayoutAnimationComplete": [Function],
                              "onLayoutAnimationStart": [Function],
                              "onLayoutMeasure": [Function],
                              "onLayoutUpdate": [Function],
                              "onRender": [Function],
                              "onSetAxisTarget": [Function],
                              "onUnmount": [Function],
                              "onUpdate": [Function],
                              "onViewportBoxUpdate": [Function],
                              "parent": undefined,
                              "presenceId": 2,
                              "projection": [Circular],
                              "readValue": [Function],
                              "removeValue": [Function],
                              "scheduleRender": [Function],
                              "setBaseTarget": [Function],
                              "setProps": [Function],
                              "setStaticValue": [Function],
                              "setVisibility": [Function],
                              "shouldReduceMotion": false,
                              "sortNodePosition": [Function],
                              "syncRender": [Function],
                              "treeType": "dom",
                              "unmount": [Function],
                              "updatePropListeners": [Function],
                              "variantChildren": Set {},
                            },
                          },
                          "parent": [Circular],
                          "path": Array [
                            [Circular],
                          ],
                          "potentialNodes": Map {},
                          "root": [Circular],
                          "sharedNodes": Map {},
                          "shouldResetTransform": false,
                          "treeScale": Object {
                            "x": 1,
                            "y": 1,
                          },
                          "updateBlockedByResize": false,
                          "updateManuallyBlocked": false,
                          "updateProjection": [Function],
                        },
                        [Circular],
                      },
                      "depth": 0,
                      "eventHandlers": Map {},
                      "hasProjected": false,
                      "id": 0,
                      "instance": [Window],
                      "isAnimationBlocked": false,
                      "isLayoutDirty": false,
                      "isSVG": false,
                      "isTreeAnimating": false,
                      "isUpdating": false,
                      "isVisible": true,
                      "latestValues": Object {},
                      "needsReset": false,
                      "nodes": FlatTree {
                        "children": Array [
                          [Circular],
                          ProjectionNode {
                            "animationProgress": 0,
                            "checkUpdateFailed": [Function],
                            "children": Set {},
                            "depth": 1,
                            "eventHandlers": Map {},
                            "hasProjected": false,
                            "id": undefined,
                            "instance": <div
                              class="chakra-offset-slide"
                              style="opacity: 0; transform: scale(0.7) translateZ(0);"
                            >
                              <div
                                class="css-0"
                              >
                                <h2
                                  class="chakra-heading css-0"
                                >
                                  Register
                                </h2>
                                <div
                                  class="css-0"
                                >
                                  <div
                                    class="chakra-form-control css-0"
                                    role="group"
                                  >
                                    <form>
                                      <div
                                        class="chakra-stack css-0"
                                      >
                                        <input />
                                      </div>
                                    </form>
                                  </div>
                                </div>
                              </div>
                            </div>,
                            "isAnimationBlocked": false,
                            "isLayoutDirty": false,
                            "isSVG": false,
                            "isTreeAnimating": false,
                            "isUpdating": false,
                            "isVisible": true,
                            "latestValues": Object {
                              "opacity": 0,
                              "scale": 0.7,
                            },
                            "needsReset": false,
                            "options": Object {
                              "alwaysMeasureLayout": undefined,
                              "animationType": "both",
                              "crossfade": true,
                              "initialPromotionConfig": Object {},
                              "layout": undefined,
                              "layoutId": undefined,
                              "layoutScroll": undefined,
                              "scheduleRender": [Function],
                              "visualElement": Object {
                                "addValue": [Function],
                                "addVariantChild": [Function],
                                "animationState": Object {
                                  "animateChanges": [Function],
                                  "getState": [Function],
                                  "isAnimated": [Function],
                                  "setActive": [Function],
                                  "setAnimateFunction": [Function],
                                },
                                "blockInitialAnimation": false,
                                "build": [Function],
                                "children": Set {},
                                "clearAllListeners": [Function],
                                "current": <div
                                  class="chakra-offset-slide"
                                  style="opacity: 0; transform: scale(0.7) translateZ(0);"
                                >
                                  <div
                                    class="css-0"
                                  >
                                    <h2
                                      class="chakra-heading css-0"
                                    >
                                      Register
                                    </h2>
                                    <div
                                      class="css-0"
                                    >
                                      <div
                                        class="chakra-form-control css-0"
                                        role="group"
                                      >
                                        <form>
                                          <div
                                            class="chakra-stack css-0"
                                          >
                                            <input />
                                          </div>
                                        </form>
                                      </div>
                                    </div>
                                  </div>
                                </div>,
                                "depth": 0,
                                "forEachValue": [Function],
                                "getBaseTarget": [Function],
                                "getClosestVariantNode": [Function],
                                "getDefaultTransition": [Function],
                                "getInstance": [Function],
                                "getLatestValues": [Function],
                                "getLayoutId": [Function],
                                "getProps": [Function],
                                "getStaticValue": [Function],
                                "getTransformPagePoint": [Function],
                                "getValue": [Function],
                                "getVariant": [Function],
                                "getVariantContext": [Function],
                                "hasValue": [Function],
                                "isMounted": [Function],
                                "isPresent": true,
                                "isVisible": undefined,
                                "makeTargetAnimatable": [Function],
                                "manuallyAnimateOnMount": false,
                                "measureViewportBox": [Function],
                                "mount": [Function],
                                "notifyAnimationComplete": [Function],
                                "notifyAnimationStart": [Function],
                                "notifyBeforeLayoutMeasure": [Function],
                                "notifyLayoutAnimationComplete": [Function],
                                "notifyLayoutAnimationStart": [Function],
                                "notifyLayoutMeasure": [Function],
                                "notifyLayoutUpdate": [Function],
                                "notifyRender": [Function],
                                "notifySetAxisTarget": [Function],
                                "notifyUnmount": [Function],
                                "notifyUpdate": [Function],
                                "notifyViewportBoxUpdate": [Function],
                                "onAnimationComplete": [Function],
                                "onAnimationStart": [Function],
                                "onBeforeLayoutMeasure": [Function],
                                "onLayoutAnimationComplete": [Function],
                                "onLayoutAnimationStart": [Function],
                                "onLayoutMeasure": [Function],
                                "onLayoutUpdate": [Function],
                                "onRender": [Function],
                                "onSetAxisTarget": [Function],
                                "onUnmount": [Function],
                                "onUpdate": [Function],
                                "onViewportBoxUpdate": [Function],
                                "parent": undefined,
                                "presenceId": 0,
                                "projection": [Circular],
                                "readValue": [Function],
                                "removeValue": [Function],
                                "scheduleRender": [Function],
                                "setBaseTarget": [Function],
                                "setProps": [Function],
                                "setStaticValue": [Function],
                                "setVisibility": [Function],
                                "shouldReduceMotion": false,
                                "sortNodePosition": [Function],
                                "syncRender": [Function],
                                "treeType": "dom",
                                "unmount": [Function],
                                "updatePropListeners": [Function],
                                "variantChildren": Set {},
                              },
                            },
                            "parent": [Circular],
                            "path": Array [
                              [Circular],
                            ],
                            "potentialNodes": Map {},
                            "root": [Circular],
                            "sharedNodes": Map {},
                            "shouldResetTransform": false,
                            "treeScale": Object {
                              "x": 1,
                              "y": 1,
                            },
                            "updateBlockedByResize": false,
                            "updateManuallyBlocked": false,
                            "updateProjection": [Function],
                          },
                          ProjectionNode {
                            "animationProgress": 0,
                            "checkUpdateFailed": [Function],
                            "children": Set {},
                            "depth": 1,
                            "eventHandlers": Map {},
                            "hasProjected": false,
                            "id": undefined,
                            "instance": <div
                              class="chakra-offset-slide"
                              style="opacity: 0; transform: scale(0.7) translateZ(0);"
                            >
                              <div
                                class="css-0"
                              >
                                <h2
                                  class="chakra-heading css-0"
                                >
                                  Login
                                </h2>
                                <div
                                  class="css-0"
                                >
                                  <div
                                    class="chakra-form-control css-0"
                                    role="group"
                                  >
                                    <form>
                                      <div
                                        class="chakra-stack css-0"
                                      >
                                        <input />
                                      </div>
                                    </form>
                                  </div>
                                </div>
                              </div>
                            </div>,
                            "isAnimationBlocked": false,
                            "isLayoutDirty": false,
                            "isSVG": false,
                            "isTreeAnimating": false,
                            "isUpdating": false,
                            "isVisible": true,
                            "latestValues": Object {
                              "opacity": 0,
                              "scale": 0.7,
                            },
                            "needsReset": false,
                            "options": Object {
                              "alwaysMeasureLayout": undefined,
                              "animationType": "both",
                              "crossfade": true,
                              "initialPromotionConfig": Object {},
                              "layout": undefined,
                              "layoutId": undefined,
                              "layoutScroll": undefined,
                              "scheduleRender": [Function],
                              "visualElement": Object {
                                "addValue": [Function],
                                "addVariantChild": [Function],
                                "animationState": Object {
                                  "animateChanges": [Function],
                                  "getState": [Function],
                                  "isAnimated": [Function],
                                  "setActive": [Function],
                                  "setAnimateFunction": [Function],
                                },
                                "blockInitialAnimation": false,
                                "build": [Function],
                                "children": Set {},
                                "clearAllListeners": [Function],
                                "current": <div
                                  class="chakra-offset-slide"
                                  style="opacity: 0; transform: scale(0.7) translateZ(0);"
                                >
                                  <div
                                    class="css-0"
                                  >
                                    <h2
                                      class="chakra-heading css-0"
                                    >
                                      Login
                                    </h2>
                                    <div
                                      class="css-0"
                                    >
                                      <div
                                        class="chakra-form-control css-0"
                                        role="group"
                                      >
                                        <form>
                                          <div
                                            class="chakra-stack css-0"
                                          >
                                            <input />
                                          </div>
                                        </form>
                                      </div>
                                    </div>
                                  </div>
                                </div>,
                                "depth": 0,
                                "forEachValue": [Function],
                                "getBaseTarget": [Function],
                                "getClosestVariantNode": [Function],
                                "getDefaultTransition": [Function],
                                "getInstance": [Function],
                                "getLatestValues": [Function],
                                "getLayoutId": [Function],
                                "getProps": [Function],
                                "getStaticValue": [Function],
                                "getTransformPagePoint": [Function],
                                "getValue": [Function],
                                "getVariant": [Function],
                                "getVariantContext": [Function],
                                "hasValue": [Function],
                                "isMounted": [Function],
                                "isPresent": true,
                                "isVisible": undefined,
                                "makeTargetAnimatable": [Function],
                                "manuallyAnimateOnMount": false,
                                "measureViewportBox": [Function],
                                "mount": [Function],
                                "notifyAnimationComplete": [Function],
                                "notifyAnimationStart": [Function],
                                "notifyBeforeLayoutMeasure": [Function],
                                "notifyLayoutAnimationComplete": [Function],
                                "notifyLayoutAnimationStart": [Function],
                                "notifyLayoutMeasure": [Function],
                                "notifyLayoutUpdate": [Function],
                                "notifyRender": [Function],
                                "notifySetAxisTarget": [Function],
                                "notifyUnmount": [Function],
                                "notifyUpdate": [Function],
                                "notifyViewportBoxUpdate": [Function],
                                "onAnimationComplete": [Function],
                                "onAnimationStart": [Function],
                                "onBeforeLayoutMeasure": [Function],
                                "onLayoutAnimationComplete": [Function],
                                "onLayoutAnimationStart": [Function],
                                "onLayoutMeasure": [Function],
                                "onLayoutUpdate": [Function],
                                "onRender": [Function],
                                "onSetAxisTarget": [Function],
                                "onUnmount": [Function],
                                "onUpdate": [Function],
                                "onViewportBoxUpdate": [Function],
                                "parent": undefined,
                                "presenceId": 2,
                                "projection": [Circular],
                                "readValue": [Function],
                                "removeValue": [Function],
                                "scheduleRender": [Function],
                                "setBaseTarget": [Function],
                                "setProps": [Function],
                                "setStaticValue": [Function],
                                "setVisibility": [Function],
                                "shouldReduceMotion": false,
                                "sortNodePosition": [Function],
                                "syncRender": [Function],
                                "treeType": "dom",
                                "unmount": [Function],
                                "updatePropListeners": [Function],
                                "variantChildren": Set {},
                              },
                            },
                            "parent": [Circular],
                            "path": Array [
                              [Circular],
                            ],
                            "potentialNodes": Map {},
                            "root": [Circular],
                            "sharedNodes": Map {},
                            "shouldResetTransform": false,
                            "treeScale": Object {
                              "x": 1,
                              "y": 1,
                            },
                            "updateBlockedByResize": false,
                            "updateManuallyBlocked": false,
                            "updateProjection": [Function],
                          },
                          [Circular],
                        ],
                        "isDirty": true,
                      },
                      "options": Object {
                        "crossfade": true,
                        "layoutScroll": true,
                      },
                      "parent": undefined,
                      "path": Array [],
                      "potentialNodes": Map {},
                      "root": [Circular],
                      "sharedNodes": Map {},
                      "shouldResetTransform": true,
                      "treeScale": Object {
                        "x": 1,
                        "y": 1,
                      },
                      "updateBlockedByResize": false,
                      "updateManuallyBlocked": false,
                      "updateProjection": [Function],
                    },
                    "path": Array [
                      ProjectionNode {
                        "animationProgress": 0,
                        "checkUpdateFailed": [Function],
                        "children": Set {
                          ProjectionNode {
                            "animationProgress": 0,
                            "checkUpdateFailed": [Function],
                            "children": Set {},
                            "depth": 1,
                            "eventHandlers": Map {},
                            "hasProjected": false,
                            "id": undefined,
                            "instance": <div
                              class="chakra-offset-slide"
                              style="opacity: 0; transform: scale(0.7) translateZ(0);"
                            >
                              <div
                                class="css-0"
                              >
                                <h2
                                  class="chakra-heading css-0"
                                >
                                  Register
                                </h2>
                                <div
                                  class="css-0"
                                >
                                  <div
                                    class="chakra-form-control css-0"
                                    role="group"
                                  >
                                    <form>
                                      <div
                                        class="chakra-stack css-0"
                                      >
                                        <input />
                                      </div>
                                    </form>
                                  </div>
                                </div>
                              </div>
                            </div>,
                            "isAnimationBlocked": false,
                            "isLayoutDirty": false,
                            "isSVG": false,
                            "isTreeAnimating": false,
                            "isUpdating": false,
                            "isVisible": true,
                            "latestValues": Object {
                              "opacity": 0,
                              "scale": 0.7,
                            },
                            "needsReset": false,
                            "options": Object {
                              "alwaysMeasureLayout": undefined,
                              "animationType": "both",
                              "crossfade": true,
                              "initialPromotionConfig": Object {},
                              "layout": undefined,
                              "layoutId": undefined,
                              "layoutScroll": undefined,
                              "scheduleRender": [Function],
                              "visualElement": Object {
                                "addValue": [Function],
                                "addVariantChild": [Function],
                                "animationState": Object {
                                  "animateChanges": [Function],
                                  "getState": [Function],
                                  "isAnimated": [Function],
                                  "setActive": [Function],
                                  "setAnimateFunction": [Function],
                                },
                                "blockInitialAnimation": false,
                                "build": [Function],
                                "children": Set {},
                                "clearAllListeners": [Function],
                                "current": <div
                                  class="chakra-offset-slide"
                                  style="opacity: 0; transform: scale(0.7) translateZ(0);"
                                >
                                  <div
                                    class="css-0"
                                  >
                                    <h2
                                      class="chakra-heading css-0"
                                    >
                                      Register
                                    </h2>
                                    <div
                                      class="css-0"
                                    >
                                      <div
                                        class="chakra-form-control css-0"
                                        role="group"
                                      >
                                        <form>
                                          <div
                                            class="chakra-stack css-0"
                                          >
                                            <input />
                                          </div>
                                        </form>
                                      </div>
                                    </div>
                                  </div>
                                </div>,
                                "depth": 0,
                                "forEachValue": [Function],
                                "getBaseTarget": [Function],
                                "getClosestVariantNode": [Function],
                                "getDefaultTransition": [Function],
                                "getInstance": [Function],
                                "getLatestValues": [Function],
                                "getLayoutId": [Function],
                                "getProps": [Function],
                                "getStaticValue": [Function],
                                "getTransformPagePoint": [Function],
                                "getValue": [Function],
                                "getVariant": [Function],
                                "getVariantContext": [Function],
                                "hasValue": [Function],
                                "isMounted": [Function],
                                "isPresent": true,
                                "isVisible": undefined,
                                "makeTargetAnimatable": [Function],
                                "manuallyAnimateOnMount": false,
                                "measureViewportBox": [Function],
                                "mount": [Function],
                                "notifyAnimationComplete": [Function],
                                "notifyAnimationStart": [Function],
                                "notifyBeforeLayoutMeasure": [Function],
                                "notifyLayoutAnimationComplete": [Function],
                                "notifyLayoutAnimationStart": [Function],
                                "notifyLayoutMeasure": [Function],
                                "notifyLayoutUpdate": [Function],
                                "notifyRender": [Function],
                                "notifySetAxisTarget": [Function],
                                "notifyUnmount": [Function],
                                "notifyUpdate": [Function],
                                "notifyViewportBoxUpdate": [Function],
                                "onAnimationComplete": [Function],
                                "onAnimationStart": [Function],
                                "onBeforeLayoutMeasure": [Function],
                                "onLayoutAnimationComplete": [Function],
                                "onLayoutAnimationStart": [Function],
                                "onLayoutMeasure": [Function],
                                "onLayoutUpdate": [Function],
                                "onRender": [Function],
                                "onSetAxisTarget": [Function],
                                "onUnmount": [Function],
                                "onUpdate": [Function],
                                "onViewportBoxUpdate": [Function],
                                "parent": undefined,
                                "presenceId": 0,
                                "projection": [Circular],
                                "readValue": [Function],
                                "removeValue": [Function],
                                "scheduleRender": [Function],
                                "setBaseTarget": [Function],
                                "setProps": [Function],
                                "setStaticValue": [Function],
                                "setVisibility": [Function],
                                "shouldReduceMotion": false,
                                "sortNodePosition": [Function],
                                "syncRender": [Function],
                                "treeType": "dom",
                                "unmount": [Function],
                                "updatePropListeners": [Function],
                                "variantChildren": Set {},
                              },
                            },
                            "parent": [Circular],
                            "path": Array [
                              [Circular],
                            ],
                            "potentialNodes": Map {},
                            "root": [Circular],
                            "sharedNodes": Map {},
                            "shouldResetTransform": false,
                            "treeScale": Object {
                              "x": 1,
                              "y": 1,
                            },
                            "updateBlockedByResize": false,
                            "updateManuallyBlocked": false,
                            "updateProjection": [Function],
                          },
                          ProjectionNode {
                            "animationProgress": 0,
                            "checkUpdateFailed": [Function],
                            "children": Set {},
                            "depth": 1,
                            "eventHandlers": Map {},
                            "hasProjected": false,
                            "id": undefined,
                            "instance": <div
                              class="chakra-offset-slide"
                              style="opacity: 0; transform: scale(0.7) translateZ(0);"
                            >
                              <div
                                class="css-0"
                              >
                                <h2
                                  class="chakra-heading css-0"
                                >
                                  Login
                                </h2>
                                <div
                                  class="css-0"
                                >
                                  <div
                                    class="chakra-form-control css-0"
                                    role="group"
                                  >
                                    <form>
                                      <div
                                        class="chakra-stack css-0"
                                      >
                                        <input />
                                      </div>
                                    </form>
                                  </div>
                                </div>
                              </div>
                            </div>,
                            "isAnimationBlocked": false,
                            "isLayoutDirty": false,
                            "isSVG": false,
                            "isTreeAnimating": false,
                            "isUpdating": false,
                            "isVisible": true,
                            "latestValues": Object {
                              "opacity": 0,
                              "scale": 0.7,
                            },
                            "needsReset": false,
                            "options": Object {
                              "alwaysMeasureLayout": undefined,
                              "animationType": "both",
                              "crossfade": true,
                              "initialPromotionConfig": Object {},
                              "layout": undefined,
                              "layoutId": undefined,
                              "layoutScroll": undefined,
                              "scheduleRender": [Function],
                              "visualElement": Object {
                                "addValue": [Function],
                                "addVariantChild": [Function],
                                "animationState": Object {
                                  "animateChanges": [Function],
                                  "getState": [Function],
                                  "isAnimated": [Function],
                                  "setActive": [Function],
                                  "setAnimateFunction": [Function],
                                },
                                "blockInitialAnimation": false,
                                "build": [Function],
                                "children": Set {},
                                "clearAllListeners": [Function],
                                "current": <div
                                  class="chakra-offset-slide"
                                  style="opacity: 0; transform: scale(0.7) translateZ(0);"
                                >
                                  <div
                                    class="css-0"
                                  >
                                    <h2
                                      class="chakra-heading css-0"
                                    >
                                      Login
                                    </h2>
                                    <div
                                      class="css-0"
                                    >
                                      <div
                                        class="chakra-form-control css-0"
                                        role="group"
                                      >
                                        <form>
                                          <div
                                            class="chakra-stack css-0"
                                          >
                                            <input />
                                          </div>
                                        </form>
                                      </div>
                                    </div>
                                  </div>
                                </div>,
                                "depth": 0,
                                "forEachValue": [Function],
                                "getBaseTarget": [Function],
                                "getClosestVariantNode": [Function],
                                "getDefaultTransition": [Function],
                                "getInstance": [Function],
                                "getLatestValues": [Function],
                                "getLayoutId": [Function],
                                "getProps": [Function],
                                "getStaticValue": [Function],
                                "getTransformPagePoint": [Function],
                                "getValue": [Function],
                                "getVariant": [Function],
                                "getVariantContext": [Function],
                                "hasValue": [Function],
                                "isMounted": [Function],
                                "isPresent": true,
                                "isVisible": undefined,
                                "makeTargetAnimatable": [Function],
                                "manuallyAnimateOnMount": false,
                                "measureViewportBox": [Function],
                                "mount": [Function],
                                "notifyAnimationComplete": [Function],
                                "notifyAnimationStart": [Function],
                                "notifyBeforeLayoutMeasure": [Function],
                                "notifyLayoutAnimationComplete": [Function],
                                "notifyLayoutAnimationStart": [Function],
                                "notifyLayoutMeasure": [Function],
                                "notifyLayoutUpdate": [Function],
                                "notifyRender": [Function],
                                "notifySetAxisTarget": [Function],
                                "notifyUnmount": [Function],
                                "notifyUpdate": [Function],
                                "notifyViewportBoxUpdate": [Function],
                                "onAnimationComplete": [Function],
                                "onAnimationStart": [Function],
                                "onBeforeLayoutMeasure": [Function],
                                "onLayoutAnimationComplete": [Function],
                                "onLayoutAnimationStart": [Function],
                                "onLayoutMeasure": [Function],
                                "onLayoutUpdate": [Function],
                                "onRender": [Function],
                                "onSetAxisTarget": [Function],
                                "onUnmount": [Function],
                                "onUpdate": [Function],
                                "onViewportBoxUpdate": [Function],
                                "parent": undefined,
                                "presenceId": 2,
                                "projection": [Circular],
                                "readValue": [Function],
                                "removeValue": [Function],
                                "scheduleRender": [Function],
                                "setBaseTarget": [Function],
                                "setProps": [Function],
                                "setStaticValue": [Function],
                                "setVisibility": [Function],
                                "shouldReduceMotion": false,
                                "sortNodePosition": [Function],
                                "syncRender": [Function],
                                "treeType": "dom",
                                "unmount": [Function],
                                "updatePropListeners": [Function],
                                "variantChildren": Set {},
                              },
                            },
                            "parent": [Circular],
                            "path": Array [
                              [Circular],
                            ],
                            "potentialNodes": Map {},
                            "root": [Circular],
                            "sharedNodes": Map {},
                            "shouldResetTransform": false,
                            "treeScale": Object {
                              "x": 1,
                              "y": 1,
                            },
                            "updateBlockedByResize": false,
                            "updateManuallyBlocked": false,
                            "updateProjection": [Function],
                          },
                          [Circular],
                        },
                        "depth": 0,
                        "eventHandlers": Map {},
                        "hasProjected": false,
                        "id": 0,
                        "instance": [Window],
                        "isAnimationBlocked": false,
                        "isLayoutDirty": false,
                        "isSVG": false,
                        "isTreeAnimating": false,
                        "isUpdating": false,
                        "isVisible": true,
                        "latestValues": Object {},
                        "needsReset": false,
                        "nodes": FlatTree {
                          "children": Array [
                            [Circular],
                            ProjectionNode {
                              "animationProgress": 0,
                              "checkUpdateFailed": [Function],
                              "children": Set {},
                              "depth": 1,
                              "eventHandlers": Map {},
                              "hasProjected": false,
                              "id": undefined,
                              "instance": <div
                                class="chakra-offset-slide"
                                style="opacity: 0; transform: scale(0.7) translateZ(0);"
                              >
                                <div
                                  class="css-0"
                                >
                                  <h2
                                    class="chakra-heading css-0"
                                  >
                                    Register
                                  </h2>
                                  <div
                                    class="css-0"
                                  >
                                    <div
                                      class="chakra-form-control css-0"
                                      role="group"
                                    >
                                      <form>
                                        <div
                                          class="chakra-stack css-0"
                                        >
                                          <input />
                                        </div>
                                      </form>
                                    </div>
                                  </div>
                                </div>
                              </div>,
                              "isAnimationBlocked": false,
                              "isLayoutDirty": false,
                              "isSVG": false,
                              "isTreeAnimating": false,
                              "isUpdating": false,
                              "isVisible": true,
                              "latestValues": Object {
                                "opacity": 0,
                                "scale": 0.7,
                              },
                              "needsReset": false,
                              "options": Object {
                                "alwaysMeasureLayout": undefined,
                                "animationType": "both",
                                "crossfade": true,
                                "initialPromotionConfig": Object {},
                                "layout": undefined,
                                "layoutId": undefined,
                                "layoutScroll": undefined,
                                "scheduleRender": [Function],
                                "visualElement": Object {
                                  "addValue": [Function],
                                  "addVariantChild": [Function],
                                  "animationState": Object {
                                    "animateChanges": [Function],
                                    "getState": [Function],
                                    "isAnimated": [Function],
                                    "setActive": [Function],
                                    "setAnimateFunction": [Function],
                                  },
                                  "blockInitialAnimation": false,
                                  "build": [Function],
                                  "children": Set {},
                                  "clearAllListeners": [Function],
                                  "current": <div
                                    class="chakra-offset-slide"
                                    style="opacity: 0; transform: scale(0.7) translateZ(0);"
                                  >
                                    <div
                                      class="css-0"
                                    >
                                      <h2
                                        class="chakra-heading css-0"
                                      >
                                        Register
                                      </h2>
                                      <div
                                        class="css-0"
                                      >
                                        <div
                                          class="chakra-form-control css-0"
                                          role="group"
                                        >
                                          <form>
                                            <div
                                              class="chakra-stack css-0"
                                            >
                                              <input />
                                            </div>
                                          </form>
                                        </div>
                                      </div>
                                    </div>
                                  </div>,
                                  "depth": 0,
                                  "forEachValue": [Function],
                                  "getBaseTarget": [Function],
                                  "getClosestVariantNode": [Function],
                                  "getDefaultTransition": [Function],
                                  "getInstance": [Function],
                                  "getLatestValues": [Function],
                                  "getLayoutId": [Function],
                                  "getProps": [Function],
                                  "getStaticValue": [Function],
                                  "getTransformPagePoint": [Function],
                                  "getValue": [Function],
                                  "getVariant": [Function],
                                  "getVariantContext": [Function],
                                  "hasValue": [Function],
                                  "isMounted": [Function],
                                  "isPresent": true,
                                  "isVisible": undefined,
                                  "makeTargetAnimatable": [Function],
                                  "manuallyAnimateOnMount": false,
                                  "measureViewportBox": [Function],
                                  "mount": [Function],
                                  "notifyAnimationComplete": [Function],
                                  "notifyAnimationStart": [Function],
                                  "notifyBeforeLayoutMeasure": [Function],
                                  "notifyLayoutAnimationComplete": [Function],
                                  "notifyLayoutAnimationStart": [Function],
                                  "notifyLayoutMeasure": [Function],
                                  "notifyLayoutUpdate": [Function],
                                  "notifyRender": [Function],
                                  "notifySetAxisTarget": [Function],
                                  "notifyUnmount": [Function],
                                  "notifyUpdate": [Function],
                                  "notifyViewportBoxUpdate": [Function],
                                  "onAnimationComplete": [Function],
                                  "onAnimationStart": [Function],
                                  "onBeforeLayoutMeasure": [Function],
                                  "onLayoutAnimationComplete": [Function],
                                  "onLayoutAnimationStart": [Function],
                                  "onLayoutMeasure": [Function],
                                  "onLayoutUpdate": [Function],
                                  "onRender": [Function],
                                  "onSetAxisTarget": [Function],
                                  "onUnmount": [Function],
                                  "onUpdate": [Function],
                                  "onViewportBoxUpdate": [Function],
                                  "parent": undefined,
                                  "presenceId": 0,
                                  "projection": [Circular],
                                  "readValue": [Function],
                                  "removeValue": [Function],
                                  "scheduleRender": [Function],
                                  "setBaseTarget": [Function],
                                  "setProps": [Function],
                                  "setStaticValue": [Function],
                                  "setVisibility": [Function],
                                  "shouldReduceMotion": false,
                                  "sortNodePosition": [Function],
                                  "syncRender": [Function],
                                  "treeType": "dom",
                                  "unmount": [Function],
                                  "updatePropListeners": [Function],
                                  "variantChildren": Set {},
                                },
                              },
                              "parent": [Circular],
                              "path": Array [
                                [Circular],
                              ],
                              "potentialNodes": Map {},
                              "root": [Circular],
                              "sharedNodes": Map {},
                              "shouldResetTransform": false,
                              "treeScale": Object {
                                "x": 1,
                                "y": 1,
                              },
                              "updateBlockedByResize": false,
                              "updateManuallyBlocked": false,
                              "updateProjection": [Function],
                            },
                            ProjectionNode {
                              "animationProgress": 0,
                              "checkUpdateFailed": [Function],
                              "children": Set {},
                              "depth": 1,
                              "eventHandlers": Map {},
                              "hasProjected": false,
                              "id": undefined,
                              "instance": <div
                                class="chakra-offset-slide"
                                style="opacity: 0; transform: scale(0.7) translateZ(0);"
                              >
                                <div
                                  class="css-0"
                                >
                                  <h2
                                    class="chakra-heading css-0"
                                  >
                                    Login
                                  </h2>
                                  <div
                                    class="css-0"
                                  >
                                    <div
                                      class="chakra-form-control css-0"
                                      role="group"
                                    >
                                      <form>
                                        <div
                                          class="chakra-stack css-0"
                                        >
                                          <input />
                                        </div>
                                      </form>
                                    </div>
                                  </div>
                                </div>
                              </div>,
                              "isAnimationBlocked": false,
                              "isLayoutDirty": false,
                              "isSVG": false,
                              "isTreeAnimating": false,
                              "isUpdating": false,
                              "isVisible": true,
                              "latestValues": Object {
                                "opacity": 0,
                                "scale": 0.7,
                              },
                              "needsReset": false,
                              "options": Object {
                                "alwaysMeasureLayout": undefined,
                                "animationType": "both",
                                "crossfade": true,
                                "initialPromotionConfig": Object {},
                                "layout": undefined,
                                "layoutId": undefined,
                                "layoutScroll": undefined,
                                "scheduleRender": [Function],
                                "visualElement": Object {
                                  "addValue": [Function],
                                  "addVariantChild": [Function],
                                  "animationState": Object {
                                    "animateChanges": [Function],
                                    "getState": [Function],
                                    "isAnimated": [Function],
                                    "setActive": [Function],
                                    "setAnimateFunction": [Function],
                                  },
                                  "blockInitialAnimation": false,
                                  "build": [Function],
                                  "children": Set {},
                                  "clearAllListeners": [Function],
                                  "current": <div
                                    class="chakra-offset-slide"
                                    style="opacity: 0; transform: scale(0.7) translateZ(0);"
                                  >
                                    <div
                                      class="css-0"
                                    >
                                      <h2
                                        class="chakra-heading css-0"
                                      >
                                        Login
                                      </h2>
                                      <div
                                        class="css-0"
                                      >
                                        <div
                                          class="chakra-form-control css-0"
                                          role="group"
                                        >
                                          <form>
                                            <div
                                              class="chakra-stack css-0"
                                            >
                                              <input />
                                            </div>
                                          </form>
                                        </div>
                                      </div>
                                    </div>
                                  </div>,
                                  "depth": 0,
                                  "forEachValue": [Function],
                                  "getBaseTarget": [Function],
                                  "getClosestVariantNode": [Function],
                                  "getDefaultTransition": [Function],
                                  "getInstance": [Function],
                                  "getLatestValues": [Function],
                                  "getLayoutId": [Function],
                                  "getProps": [Function],
                                  "getStaticValue": [Function],
                                  "getTransformPagePoint": [Function],
                                  "getValue": [Function],
                                  "getVariant": [Function],
                                  "getVariantContext": [Function],
                                  "hasValue": [Function],
                                  "isMounted": [Function],
                                  "isPresent": true,
                                  "isVisible": undefined,
                                  "makeTargetAnimatable": [Function],
                                  "manuallyAnimateOnMount": false,
                                  "measureViewportBox": [Function],
                                  "mount": [Function],
                                  "notifyAnimationComplete": [Function],
                                  "notifyAnimationStart": [Function],
                                  "notifyBeforeLayoutMeasure": [Function],
                                  "notifyLayoutAnimationComplete": [Function],
                                  "notifyLayoutAnimationStart": [Function],
                                  "notifyLayoutMeasure": [Function],
                                  "notifyLayoutUpdate": [Function],
                                  "notifyRender": [Function],
                                  "notifySetAxisTarget": [Function],
                                  "notifyUnmount": [Function],
                                  "notifyUpdate": [Function],
                                  "notifyViewportBoxUpdate": [Function],
                                  "onAnimationComplete": [Function],
                                  "onAnimationStart": [Function],
                                  "onBeforeLayoutMeasure": [Function],
                                  "onLayoutAnimationComplete": [Function],
                                  "onLayoutAnimationStart": [Function],
                                  "onLayoutMeasure": [Function],
                                  "onLayoutUpdate": [Function],
                                  "onRender": [Function],
                                  "onSetAxisTarget": [Function],
                                  "onUnmount": [Function],
                                  "onUpdate": [Function],
                                  "onViewportBoxUpdate": [Function],
                                  "parent": undefined,
                                  "presenceId": 2,
                                  "projection": [Circular],
                                  "readValue": [Function],
                                  "removeValue": [Function],
                                  "scheduleRender": [Function],
                                  "setBaseTarget": [Function],
                                  "setProps": [Function],
                                  "setStaticValue": [Function],
                                  "setVisibility": [Function],
                                  "shouldReduceMotion": false,
                                  "sortNodePosition": [Function],
                                  "syncRender": [Function],
                                  "treeType": "dom",
                                  "unmount": [Function],
                                  "updatePropListeners": [Function],
                                  "variantChildren": Set {},
                                },
                              },
                              "parent": [Circular],
                              "path": Array [
                                [Circular],
                              ],
                              "potentialNodes": Map {},
                              "root": [Circular],
                              "sharedNodes": Map {},
                              "shouldResetTransform": false,
                              "treeScale": Object {
                                "x": 1,
                                "y": 1,
                              },
                              "updateBlockedByResize": false,
                              "updateManuallyBlocked": false,
                              "updateProjection": [Function],
                            },
                            [Circular],
                          ],
                          "isDirty": true,
                        },
                        "options": Object {
                          "crossfade": true,
                          "layoutScroll": true,
                        },
                        "parent": undefined,
                        "path": Array [],
                        "potentialNodes": Map {},
                        "root": [Circular],
                        "sharedNodes": Map {},
                        "shouldResetTransform": true,
                        "treeScale": Object {
                          "x": 1,
                          "y": 1,
                        },
                        "updateBlockedByResize": false,
                        "updateManuallyBlocked": false,
                        "updateProjection": [Function],
                      },
                    ],
                    "potentialNodes": Map {},
                    "root": ProjectionNode {
                      "animationProgress": 0,
                      "checkUpdateFailed": [Function],
                      "children": Set {
                        ProjectionNode {
                          "animationProgress": 0,
                          "checkUpdateFailed": [Function],
                          "children": Set {},
                          "depth": 1,
                          "eventHandlers": Map {},
                          "hasProjected": false,
                          "id": undefined,
                          "instance": <div
                            class="chakra-offset-slide"
                            style="opacity: 0; transform: scale(0.7) translateZ(0);"
                          >
                            <div
                              class="css-0"
                            >
                              <h2
                                class="chakra-heading css-0"
                              >
                                Register
                              </h2>
                              <div
                                class="css-0"
                              >
                                <div
                                  class="chakra-form-control css-0"
                                  role="group"
                                >
                                  <form>
                                    <div
                                      class="chakra-stack css-0"
                                    >
                                      <input />
                                    </div>
                                  </form>
                                </div>
                              </div>
                            </div>
                          </div>,
                          "isAnimationBlocked": false,
                          "isLayoutDirty": false,
                          "isSVG": false,
                          "isTreeAnimating": false,
                          "isUpdating": false,
                          "isVisible": true,
                          "latestValues": Object {
                            "opacity": 0,
                            "scale": 0.7,
                          },
                          "needsReset": false,
                          "options": Object {
                            "alwaysMeasureLayout": undefined,
                            "animationType": "both",
                            "crossfade": true,
                            "initialPromotionConfig": Object {},
                            "layout": undefined,
                            "layoutId": undefined,
                            "layoutScroll": undefined,
                            "scheduleRender": [Function],
                            "visualElement": Object {
                              "addValue": [Function],
                              "addVariantChild": [Function],
                              "animationState": Object {
                                "animateChanges": [Function],
                                "getState": [Function],
                                "isAnimated": [Function],
                                "setActive": [Function],
                                "setAnimateFunction": [Function],
                              },
                              "blockInitialAnimation": false,
                              "build": [Function],
                              "children": Set {},
                              "clearAllListeners": [Function],
                              "current": <div
                                class="chakra-offset-slide"
                                style="opacity: 0; transform: scale(0.7) translateZ(0);"
                              >
                                <div
                                  class="css-0"
                                >
                                  <h2
                                    class="chakra-heading css-0"
                                  >
                                    Register
                                  </h2>
                                  <div
                                    class="css-0"
                                  >
                                    <div
                                      class="chakra-form-control css-0"
                                      role="group"
                                    >
                                      <form>
                                        <div
                                          class="chakra-stack css-0"
                                        >
                                          <input />
                                        </div>
                                      </form>
                                    </div>
                                  </div>
                                </div>
                              </div>,
                              "depth": 0,
                              "forEachValue": [Function],
                              "getBaseTarget": [Function],
                              "getClosestVariantNode": [Function],
                              "getDefaultTransition": [Function],
                              "getInstance": [Function],
                              "getLatestValues": [Function],
                              "getLayoutId": [Function],
                              "getProps": [Function],
                              "getStaticValue": [Function],
                              "getTransformPagePoint": [Function],
                              "getValue": [Function],
                              "getVariant": [Function],
                              "getVariantContext": [Function],
                              "hasValue": [Function],
                              "isMounted": [Function],
                              "isPresent": true,
                              "isVisible": undefined,
                              "makeTargetAnimatable": [Function],
                              "manuallyAnimateOnMount": false,
                              "measureViewportBox": [Function],
                              "mount": [Function],
                              "notifyAnimationComplete": [Function],
                              "notifyAnimationStart": [Function],
                              "notifyBeforeLayoutMeasure": [Function],
                              "notifyLayoutAnimationComplete": [Function],
                              "notifyLayoutAnimationStart": [Function],
                              "notifyLayoutMeasure": [Function],
                              "notifyLayoutUpdate": [Function],
                              "notifyRender": [Function],
                              "notifySetAxisTarget": [Function],
                              "notifyUnmount": [Function],
                              "notifyUpdate": [Function],
                              "notifyViewportBoxUpdate": [Function],
                              "onAnimationComplete": [Function],
                              "onAnimationStart": [Function],
                              "onBeforeLayoutMeasure": [Function],
                              "onLayoutAnimationComplete": [Function],
                              "onLayoutAnimationStart": [Function],
                              "onLayoutMeasure": [Function],
                              "onLayoutUpdate": [Function],
                              "onRender": [Function],
                              "onSetAxisTarget": [Function],
                              "onUnmount": [Function],
                              "onUpdate": [Function],
                              "onViewportBoxUpdate": [Function],
                              "parent": undefined,
                              "presenceId": 0,
                              "projection": [Circular],
                              "readValue": [Function],
                              "removeValue": [Function],
                              "scheduleRender": [Function],
                              "setBaseTarget": [Function],
                              "setProps": [Function],
                              "setStaticValue": [Function],
                              "setVisibility": [Function],
                              "shouldReduceMotion": false,
                              "sortNodePosition": [Function],
                              "syncRender": [Function],
                              "treeType": "dom",
                              "unmount": [Function],
                              "updatePropListeners": [Function],
                              "variantChildren": Set {},
                            },
                          },
                          "parent": [Circular],
                          "path": Array [
                            [Circular],
                          ],
                          "potentialNodes": Map {},
                          "root": [Circular],
                          "sharedNodes": Map {},
                          "shouldResetTransform": false,
                          "treeScale": Object {
                            "x": 1,
                            "y": 1,
                          },
                          "updateBlockedByResize": false,
                          "updateManuallyBlocked": false,
                          "updateProjection": [Function],
                        },
                        ProjectionNode {
                          "animationProgress": 0,
                          "checkUpdateFailed": [Function],
                          "children": Set {},
                          "depth": 1,
                          "eventHandlers": Map {},
                          "hasProjected": false,
                          "id": undefined,
                          "instance": <div
                            class="chakra-offset-slide"
                            style="opacity: 0; transform: scale(0.7) translateZ(0);"
                          >
                            <div
                              class="css-0"
                            >
                              <h2
                                class="chakra-heading css-0"
                              >
                                Login
                              </h2>
                              <div
                                class="css-0"
                              >
                                <div
                                  class="chakra-form-control css-0"
                                  role="group"
                                >
                                  <form>
                                    <div
                                      class="chakra-stack css-0"
                                    >
                                      <input />
                                    </div>
                                  </form>
                                </div>
                              </div>
                            </div>
                          </div>,
                          "isAnimationBlocked": false,
                          "isLayoutDirty": false,
                          "isSVG": false,
                          "isTreeAnimating": false,
                          "isUpdating": false,
                          "isVisible": true,
                          "latestValues": Object {
                            "opacity": 0,
                            "scale": 0.7,
                          },
                          "needsReset": false,
                          "options": Object {
                            "alwaysMeasureLayout": undefined,
                            "animationType": "both",
                            "crossfade": true,
                            "initialPromotionConfig": Object {},
                            "layout": undefined,
                            "layoutId": undefined,
                            "layoutScroll": undefined,
                            "scheduleRender": [Function],
                            "visualElement": Object {
                              "addValue": [Function],
                              "addVariantChild": [Function],
                              "animationState": Object {
                                "animateChanges": [Function],
                                "getState": [Function],
                                "isAnimated": [Function],
                                "setActive": [Function],
                                "setAnimateFunction": [Function],
                              },
                              "blockInitialAnimation": false,
                              "build": [Function],
                              "children": Set {},
                              "clearAllListeners": [Function],
                              "current": <div
                                class="chakra-offset-slide"
                                style="opacity: 0; transform: scale(0.7) translateZ(0);"
                              >
                                <div
                                  class="css-0"
                                >
                                  <h2
                                    class="chakra-heading css-0"
                                  >
                                    Login
                                  </h2>
                                  <div
                                    class="css-0"
                                  >
                                    <div
                                      class="chakra-form-control css-0"
                                      role="group"
                                    >
                                      <form>
                                        <div
                                          class="chakra-stack css-0"
                                        >
                                          <input />
                                        </div>
                                      </form>
                                    </div>
                                  </div>
                                </div>
                              </div>,
                              "depth": 0,
                              "forEachValue": [Function],
                              "getBaseTarget": [Function],
                              "getClosestVariantNode": [Function],
                              "getDefaultTransition": [Function],
                              "getInstance": [Function],
                              "getLatestValues": [Function],
                              "getLayoutId": [Function],
                              "getProps": [Function],
                              "getStaticValue": [Function],
                              "getTransformPagePoint": [Function],
                              "getValue": [Function],
                              "getVariant": [Function],
                              "getVariantContext": [Function],
                              "hasValue": [Function],
                              "isMounted": [Function],
                              "isPresent": true,
                              "isVisible": undefined,
                              "makeTargetAnimatable": [Function],
                              "manuallyAnimateOnMount": false,
                              "measureViewportBox": [Function],
                              "mount": [Function],
                              "notifyAnimationComplete": [Function],
                              "notifyAnimationStart": [Function],
                              "notifyBeforeLayoutMeasure": [Function],
                              "notifyLayoutAnimationComplete": [Function],
                              "notifyLayoutAnimationStart": [Function],
                              "notifyLayoutMeasure": [Function],
                              "notifyLayoutUpdate": [Function],
                              "notifyRender": [Function],
                              "notifySetAxisTarget": [Function],
                              "notifyUnmount": [Function],
                              "notifyUpdate": [Function],
                              "notifyViewportBoxUpdate": [Function],
                              "onAnimationComplete": [Function],
                              "onAnimationStart": [Function],
                              "onBeforeLayoutMeasure": [Function],
                              "onLayoutAnimationComplete": [Function],
                              "onLayoutAnimationStart": [Function],
                              "onLayoutMeasure": [Function],
                              "onLayoutUpdate": [Function],
                              "onRender": [Function],
                              "onSetAxisTarget": [Function],
                              "onUnmount": [Function],
                              "onUpdate": [Function],
                              "onViewportBoxUpdate": [Function],
                              "parent": undefined,
                              "presenceId": 2,
                              "projection": [Circular],
                              "readValue": [Function],
                              "removeValue": [Function],
                              "scheduleRender": [Function],
                              "setBaseTarget": [Function],
                              "setProps": [Function],
                              "setStaticValue": [Function],
                              "setVisibility": [Function],
                              "shouldReduceMotion": false,
                              "sortNodePosition": [Function],
                              "syncRender": [Function],
                              "treeType": "dom",
                              "unmount": [Function],
                              "updatePropListeners": [Function],
                              "variantChildren": Set {},
                            },
                          },
                          "parent": [Circular],
                          "path": Array [
                            [Circular],
                          ],
                          "potentialNodes": Map {},
                          "root": [Circular],
                          "sharedNodes": Map {},
                          "shouldResetTransform": false,
                          "treeScale": Object {
                            "x": 1,
                            "y": 1,
                          },
                          "updateBlockedByResize": false,
                          "updateManuallyBlocked": false,
                          "updateProjection": [Function],
                        },
                        [Circular],
                      },
                      "depth": 0,
                      "eventHandlers": Map {},
                      "hasProjected": false,
                      "id": 0,
                      "instance": [Window],
                      "isAnimationBlocked": false,
                      "isLayoutDirty": false,
                      "isSVG": false,
                      "isTreeAnimating": false,
                      "isUpdating": false,
                      "isVisible": true,
                      "latestValues": Object {},
                      "needsReset": false,
                      "nodes": FlatTree {
                        "children": Array [
                          [Circular],
                          ProjectionNode {
                            "animationProgress": 0,
                            "checkUpdateFailed": [Function],
                            "children": Set {},
                            "depth": 1,
                            "eventHandlers": Map {},
                            "hasProjected": false,
                            "id": undefined,
                            "instance": <div
                              class="chakra-offset-slide"
                              style="opacity: 0; transform: scale(0.7) translateZ(0);"
                            >
                              <div
                                class="css-0"
                              >
                                <h2
                                  class="chakra-heading css-0"
                                >
                                  Register
                                </h2>
                                <div
                                  class="css-0"
                                >
                                  <div
                                    class="chakra-form-control css-0"
                                    role="group"
                                  >
                                    <form>
                                      <div
                                        class="chakra-stack css-0"
                                      >
                                        <input />
                                      </div>
                                    </form>
                                  </div>
                                </div>
                              </div>
                            </div>,
                            "isAnimationBlocked": false,
                            "isLayoutDirty": false,
                            "isSVG": false,
                            "isTreeAnimating": false,
                            "isUpdating": false,
                            "isVisible": true,
                            "latestValues": Object {
                              "opacity": 0,
                              "scale": 0.7,
                            },
                            "needsReset": false,
                            "options": Object {
                              "alwaysMeasureLayout": undefined,
                              "animationType": "both",
                              "crossfade": true,
                              "initialPromotionConfig": Object {},
                              "layout": undefined,
                              "layoutId": undefined,
                              "layoutScroll": undefined,
                              "scheduleRender": [Function],
                              "visualElement": Object {
                                "addValue": [Function],
                                "addVariantChild": [Function],
                                "animationState": Object {
                                  "animateChanges": [Function],
                                  "getState": [Function],
                                  "isAnimated": [Function],
                                  "setActive": [Function],
                                  "setAnimateFunction": [Function],
                                },
                                "blockInitialAnimation": false,
                                "build": [Function],
                                "children": Set {},
                                "clearAllListeners": [Function],
                                "current": <div
                                  class="chakra-offset-slide"
                                  style="opacity: 0; transform: scale(0.7) translateZ(0);"
                                >
                                  <div
                                    class="css-0"
                                  >
                                    <h2
                                      class="chakra-heading css-0"
                                    >
                                      Register
                                    </h2>
                                    <div
                                      class="css-0"
                                    >
                                      <div
                                        class="chakra-form-control css-0"
                                        role="group"
                                      >
                                        <form>
                                          <div
                                            class="chakra-stack css-0"
                                          >
                                            <input />
                                          </div>
                                        </form>
                                      </div>
                                    </div>
                                  </div>
                                </div>,
                                "depth": 0,
                                "forEachValue": [Function],
                                "getBaseTarget": [Function],
                                "getClosestVariantNode": [Function],
                                "getDefaultTransition": [Function],
                                "getInstance": [Function],
                                "getLatestValues": [Function],
                                "getLayoutId": [Function],
                                "getProps": [Function],
                                "getStaticValue": [Function],
                                "getTransformPagePoint": [Function],
                                "getValue": [Function],
                                "getVariant": [Function],
                                "getVariantContext": [Function],
                                "hasValue": [Function],
                                "isMounted": [Function],
                                "isPresent": true,
                                "isVisible": undefined,
                                "makeTargetAnimatable": [Function],
                                "manuallyAnimateOnMount": false,
                                "measureViewportBox": [Function],
                                "mount": [Function],
                                "notifyAnimationComplete": [Function],
                                "notifyAnimationStart": [Function],
                                "notifyBeforeLayoutMeasure": [Function],
                                "notifyLayoutAnimationComplete": [Function],
                                "notifyLayoutAnimationStart": [Function],
                                "notifyLayoutMeasure": [Function],
                                "notifyLayoutUpdate": [Function],
                                "notifyRender": [Function],
                                "notifySetAxisTarget": [Function],
                                "notifyUnmount": [Function],
                                "notifyUpdate": [Function],
                                "notifyViewportBoxUpdate": [Function],
                                "onAnimationComplete": [Function],
                                "onAnimationStart": [Function],
                                "onBeforeLayoutMeasure": [Function],
                                "onLayoutAnimationComplete": [Function],
                                "onLayoutAnimationStart": [Function],
                                "onLayoutMeasure": [Function],
                                "onLayoutUpdate": [Function],
                                "onRender": [Function],
                                "onSetAxisTarget": [Function],
                                "onUnmount": [Function],
                                "onUpdate": [Function],
                                "onViewportBoxUpdate": [Function],
                                "parent": undefined,
                                "presenceId": 0,
                                "projection": [Circular],
                                "readValue": [Function],
                                "removeValue": [Function],
                                "scheduleRender": [Function],
                                "setBaseTarget": [Function],
                                "setProps": [Function],
                                "setStaticValue": [Function],
                                "setVisibility": [Function],
                                "shouldReduceMotion": false,
                                "sortNodePosition": [Function],
                                "syncRender": [Function],
                                "treeType": "dom",
                                "unmount": [Function],
                                "updatePropListeners": [Function],
                                "variantChildren": Set {},
                              },
                            },
                            "parent": [Circular],
                            "path": Array [
                              [Circular],
                            ],
                            "potentialNodes": Map {},
                            "root": [Circular],
                            "sharedNodes": Map {},
                            "shouldResetTransform": false,
                            "treeScale": Object {
                              "x": 1,
                              "y": 1,
                            },
                            "updateBlockedByResize": false,
                            "updateManuallyBlocked": false,
                            "updateProjection": [Function],
                          },
                          ProjectionNode {
                            "animationProgress": 0,
                            "checkUpdateFailed": [Function],
                            "children": Set {},
                            "depth": 1,
                            "eventHandlers": Map {},
                            "hasProjected": false,
                            "id": undefined,
                            "instance": <div
                              class="chakra-offset-slide"
                              style="opacity: 0; transform: scale(0.7) translateZ(0);"
                            >
                              <div
                                class="css-0"
                              >
                                <h2
                                  class="chakra-heading css-0"
                                >
                                  Login
                                </h2>
                                <div
                                  class="css-0"
                                >
                                  <div
                                    class="chakra-form-control css-0"
                                    role="group"
                                  >
                                    <form>
                                      <div
                                        class="chakra-stack css-0"
                                      >
                                        <input />
                                      </div>
                                    </form>
                                  </div>
                                </div>
                              </div>
                            </div>,
                            "isAnimationBlocked": false,
                            "isLayoutDirty": false,
                            "isSVG": false,
                            "isTreeAnimating": false,
                            "isUpdating": false,
                            "isVisible": true,
                            "latestValues": Object {
                              "opacity": 0,
                              "scale": 0.7,
                            },
                            "needsReset": false,
                            "options": Object {
                              "alwaysMeasureLayout": undefined,
                              "animationType": "both",
                              "crossfade": true,
                              "initialPromotionConfig": Object {},
                              "layout": undefined,
                              "layoutId": undefined,
                              "layoutScroll": undefined,
                              "scheduleRender": [Function],
                              "visualElement": Object {
                                "addValue": [Function],
                                "addVariantChild": [Function],
                                "animationState": Object {
                                  "animateChanges": [Function],
                                  "getState": [Function],
                                  "isAnimated": [Function],
                                  "setActive": [Function],
                                  "setAnimateFunction": [Function],
                                },
                                "blockInitialAnimation": false,
                                "build": [Function],
                                "children": Set {},
                                "clearAllListeners": [Function],
                                "current": <div
                                  class="chakra-offset-slide"
                                  style="opacity: 0; transform: scale(0.7) translateZ(0);"
                                >
                                  <div
                                    class="css-0"
                                  >
                                    <h2
                                      class="chakra-heading css-0"
                                    >
                                      Login
                                    </h2>
                                    <div
                                      class="css-0"
                                    >
                                      <div
                                        class="chakra-form-control css-0"
                                        role="group"
                                      >
                                        <form>
                                          <div
                                            class="chakra-stack css-0"
                                          >
                                            <input />
                                          </div>
                                        </form>
                                      </div>
                                    </div>
                                  </div>
                                </div>,
                                "depth": 0,
                                "forEachValue": [Function],
                                "getBaseTarget": [Function],
                                "getClosestVariantNode": [Function],
                                "getDefaultTransition": [Function],
                                "getInstance": [Function],
                                "getLatestValues": [Function],
                                "getLayoutId": [Function],
                                "getProps": [Function],
                                "getStaticValue": [Function],
                                "getTransformPagePoint": [Function],
                                "getValue": [Function],
                                "getVariant": [Function],
                                "getVariantContext": [Function],
                                "hasValue": [Function],
                                "isMounted": [Function],
                                "isPresent": true,
                                "isVisible": undefined,
                                "makeTargetAnimatable": [Function],
                                "manuallyAnimateOnMount": false,
                                "measureViewportBox": [Function],
                                "mount": [Function],
                                "notifyAnimationComplete": [Function],
                                "notifyAnimationStart": [Function],
                                "notifyBeforeLayoutMeasure": [Function],
                                "notifyLayoutAnimationComplete": [Function],
                                "notifyLayoutAnimationStart": [Function],
                                "notifyLayoutMeasure": [Function],
                                "notifyLayoutUpdate": [Function],
                                "notifyRender": [Function],
                                "notifySetAxisTarget": [Function],
                                "notifyUnmount": [Function],
                                "notifyUpdate": [Function],
                                "notifyViewportBoxUpdate": [Function],
                                "onAnimationComplete": [Function],
                                "onAnimationStart": [Function],
                                "onBeforeLayoutMeasure": [Function],
                                "onLayoutAnimationComplete": [Function],
                                "onLayoutAnimationStart": [Function],
                                "onLayoutMeasure": [Function],
                                "onLayoutUpdate": [Function],
                                "onRender": [Function],
                                "onSetAxisTarget": [Function],
                                "onUnmount": [Function],
                                "onUpdate": [Function],
                                "onViewportBoxUpdate": [Function],
                                "parent": undefined,
                                "presenceId": 2,
                                "projection": [Circular],
                                "readValue": [Function],
                                "removeValue": [Function],
                                "scheduleRender": [Function],
                                "setBaseTarget": [Function],
                                "setProps": [Function],
                                "setStaticValue": [Function],
                                "setVisibility": [Function],
                                "shouldReduceMotion": false,
                                "sortNodePosition": [Function],
                                "syncRender": [Function],
                                "treeType": "dom",
                                "unmount": [Function],
                                "updatePropListeners": [Function],
                                "variantChildren": Set {},
                              },
                            },
                            "parent": [Circular],
                            "path": Array [
                              [Circular],
                            ],
                            "potentialNodes": Map {},
                            "root": [Circular],
                            "sharedNodes": Map {},
                            "shouldResetTransform": false,
                            "treeScale": Object {
                              "x": 1,
                              "y": 1,
                            },
                            "updateBlockedByResize": false,
                            "updateManuallyBlocked": false,
                            "updateProjection": [Function],
                          },
                          [Circular],
                        ],
                        "isDirty": true,
                      },
                      "options": Object {
                        "crossfade": true,
                        "layoutScroll": true,
                      },
                      "parent": undefined,
                      "path": Array [],
                      "potentialNodes": Map {},
                      "root": [Circular],
                      "sharedNodes": Map {},
                      "shouldResetTransform": true,
                      "treeScale": Object {
                        "x": 1,
                        "y": 1,
                      },
                      "updateBlockedByResize": false,
                      "updateManuallyBlocked": false,
                      "updateProjection": [Function],
                    },
                    "sharedNodes": Map {},
                    "shouldResetTransform": false,
                    "treeScale": Object {
                      "x": 1,
                      "y": 1,
                    },
                    "updateBlockedByResize": false,
                    "updateManuallyBlocked": false,
                    "updateProjection": [Function],
                  },
                  "readValue": [Function],
                  "removeValue": [Function],
                  "scheduleRender": [Function],
                  "setBaseTarget": [Function],
                  "setProps": [Function],
                  "setStaticValue": [Function],
                  "setVisibility": [Function],
                  "shouldReduceMotion": false,
                  "sortNodePosition": [Function],
                  "syncRender": [Function],
                  "treeType": "dom",
                  "unmount": [Function],
                  "updatePropListeners": [Function],
                  "variantChildren": Set {},
                }
              }
            />
            <Component
              animate="enter"
              className="chakra-offset-slide"
              custom={
                Object {
                  "delay": undefined,
                  "initialScale": 0.7,
                  "reverse": true,
                  "transition": undefined,
                  "transitionEnd": undefined,
                }
              }
              exit="exit"
              initial="exit"
              key="exit"
              variants={
                Object {
                  "enter": [Function],
                  "exit": [Function],
                }
              }
              visualElement={
                Object {
                  "addValue": [Function],
                  "addVariantChild": [Function],
                  "animationState": Object {
                    "animateChanges": [Function],
                    "getState": [Function],
                    "isAnimated": [Function],
                    "setActive": [Function],
                    "setAnimateFunction": [Function],
                  },
                  "blockInitialAnimation": false,
                  "build": [Function],
                  "children": Set {},
                  "clearAllListeners": [Function],
                  "current": <div
                    class="chakra-offset-slide"
                    style="opacity: 0; transform: scale(0.7) translateZ(0);"
                  >
                    <div
                      class="css-0"
                    >
                      <h2
                        class="chakra-heading css-0"
                      >
                        Register
                      </h2>
                      <div
                        class="css-0"
                      >
                        <div
                          class="chakra-form-control css-0"
                          role="group"
                        >
                          <form>
                            <div
                              class="chakra-stack css-0"
                            >
                              <input />
                            </div>
                          </form>
                        </div>
                      </div>
                    </div>
                  </div>,
                  "depth": 0,
                  "forEachValue": [Function],
                  "getBaseTarget": [Function],
                  "getClosestVariantNode": [Function],
                  "getDefaultTransition": [Function],
                  "getInstance": [Function],
                  "getLatestValues": [Function],
                  "getLayoutId": [Function],
                  "getProps": [Function],
                  "getStaticValue": [Function],
                  "getTransformPagePoint": [Function],
                  "getValue": [Function],
                  "getVariant": [Function],
                  "getVariantContext": [Function],
                  "hasValue": [Function],
                  "isMounted": [Function],
                  "isPresent": true,
                  "isVisible": undefined,
                  "makeTargetAnimatable": [Function],
                  "manuallyAnimateOnMount": false,
                  "measureViewportBox": [Function],
                  "mount": [Function],
                  "notifyAnimationComplete": [Function],
                  "notifyAnimationStart": [Function],
                  "notifyBeforeLayoutMeasure": [Function],
                  "notifyLayoutAnimationComplete": [Function],
                  "notifyLayoutAnimationStart": [Function],
                  "notifyLayoutMeasure": [Function],
                  "notifyLayoutUpdate": [Function],
                  "notifyRender": [Function],
                  "notifySetAxisTarget": [Function],
                  "notifyUnmount": [Function],
                  "notifyUpdate": [Function],
                  "notifyViewportBoxUpdate": [Function],
                  "onAnimationComplete": [Function],
                  "onAnimationStart": [Function],
                  "onBeforeLayoutMeasure": [Function],
                  "onLayoutAnimationComplete": [Function],
                  "onLayoutAnimationStart": [Function],
                  "onLayoutMeasure": [Function],
                  "onLayoutUpdate": [Function],
                  "onRender": [Function],
                  "onSetAxisTarget": [Function],
                  "onUnmount": [Function],
                  "onUpdate": [Function],
                  "onViewportBoxUpdate": [Function],
                  "parent": undefined,
                  "presenceId": 4,
                  "projection": ProjectionNode {
                    "animationProgress": 0,
                    "checkUpdateFailed": [Function],
                    "children": Set {},
                    "depth": 1,
                    "eventHandlers": Map {},
                    "hasProjected": false,
                    "id": undefined,
                    "instance": <div
                      class="chakra-offset-slide"
                      style="opacity: 0; transform: scale(0.7) translateZ(0);"
                    >
                      <div
                        class="css-0"
                      >
                        <h2
                          class="chakra-heading css-0"
                        >
                          Register
                        </h2>
                        <div
                          class="css-0"
                        >
                          <div
                            class="chakra-form-control css-0"
                            role="group"
                          >
                            <form>
                              <div
                                class="chakra-stack css-0"
                              >
                                <input />
                              </div>
                            </form>
                          </div>
                        </div>
                      </div>
                    </div>,
                    "isAnimationBlocked": false,
                    "isLayoutDirty": false,
                    "isSVG": false,
                    "isTreeAnimating": false,
                    "isUpdating": false,
                    "isVisible": true,
                    "latestValues": Object {
                      "opacity": 0,
                      "scale": 0.7,
                    },
                    "needsReset": false,
                    "options": Object {
                      "alwaysMeasureLayout": undefined,
                      "animationType": "both",
                      "crossfade": true,
                      "initialPromotionConfig": Object {},
                      "layout": undefined,
                      "layoutId": undefined,
                      "layoutScroll": undefined,
                      "scheduleRender": [Function],
                      "visualElement": [Circular],
                    },
                    "parent": ProjectionNode {
                      "animationProgress": 0,
                      "checkUpdateFailed": [Function],
                      "children": Set {
                        ProjectionNode {
                          "animationProgress": 0,
                          "checkUpdateFailed": [Function],
                          "children": Set {},
                          "depth": 1,
                          "eventHandlers": Map {},
                          "hasProjected": false,
                          "id": undefined,
                          "instance": <div
                            class="chakra-offset-slide"
                            style="opacity: 0; transform: scale(0.7) translateZ(0);"
                          >
                            <div
                              class="css-0"
                            >
                              <h2
                                class="chakra-heading css-0"
                              >
                                Register
                              </h2>
                              <div
                                class="css-0"
                              >
                                <div
                                  class="chakra-form-control css-0"
                                  role="group"
                                >
                                  <form>
                                    <div
                                      class="chakra-stack css-0"
                                    >
                                      <input />
                                    </div>
                                  </form>
                                </div>
                              </div>
                            </div>
                          </div>,
                          "isAnimationBlocked": false,
                          "isLayoutDirty": false,
                          "isSVG": false,
                          "isTreeAnimating": false,
                          "isUpdating": false,
                          "isVisible": true,
                          "latestValues": Object {
                            "opacity": 0,
                            "scale": 0.7,
                          },
                          "needsReset": false,
                          "options": Object {
                            "alwaysMeasureLayout": undefined,
                            "animationType": "both",
                            "crossfade": true,
                            "initialPromotionConfig": Object {},
                            "layout": undefined,
                            "layoutId": undefined,
                            "layoutScroll": undefined,
                            "scheduleRender": [Function],
                            "visualElement": Object {
                              "addValue": [Function],
                              "addVariantChild": [Function],
                              "animationState": Object {
                                "animateChanges": [Function],
                                "getState": [Function],
                                "isAnimated": [Function],
                                "setActive": [Function],
                                "setAnimateFunction": [Function],
                              },
                              "blockInitialAnimation": false,
                              "build": [Function],
                              "children": Set {},
                              "clearAllListeners": [Function],
                              "current": <div
                                class="chakra-offset-slide"
                                style="opacity: 0; transform: scale(0.7) translateZ(0);"
                              >
                                <div
                                  class="css-0"
                                >
                                  <h2
                                    class="chakra-heading css-0"
                                  >
                                    Register
                                  </h2>
                                  <div
                                    class="css-0"
                                  >
                                    <div
                                      class="chakra-form-control css-0"
                                      role="group"
                                    >
                                      <form>
                                        <div
                                          class="chakra-stack css-0"
                                        >
                                          <input />
                                        </div>
                                      </form>
                                    </div>
                                  </div>
                                </div>
                              </div>,
                              "depth": 0,
                              "forEachValue": [Function],
                              "getBaseTarget": [Function],
                              "getClosestVariantNode": [Function],
                              "getDefaultTransition": [Function],
                              "getInstance": [Function],
                              "getLatestValues": [Function],
                              "getLayoutId": [Function],
                              "getProps": [Function],
                              "getStaticValue": [Function],
                              "getTransformPagePoint": [Function],
                              "getValue": [Function],
                              "getVariant": [Function],
                              "getVariantContext": [Function],
                              "hasValue": [Function],
                              "isMounted": [Function],
                              "isPresent": true,
                              "isVisible": undefined,
                              "makeTargetAnimatable": [Function],
                              "manuallyAnimateOnMount": false,
                              "measureViewportBox": [Function],
                              "mount": [Function],
                              "notifyAnimationComplete": [Function],
                              "notifyAnimationStart": [Function],
                              "notifyBeforeLayoutMeasure": [Function],
                              "notifyLayoutAnimationComplete": [Function],
                              "notifyLayoutAnimationStart": [Function],
                              "notifyLayoutMeasure": [Function],
                              "notifyLayoutUpdate": [Function],
                              "notifyRender": [Function],
                              "notifySetAxisTarget": [Function],
                              "notifyUnmount": [Function],
                              "notifyUpdate": [Function],
                              "notifyViewportBoxUpdate": [Function],
                              "onAnimationComplete": [Function],
                              "onAnimationStart": [Function],
                              "onBeforeLayoutMeasure": [Function],
                              "onLayoutAnimationComplete": [Function],
                              "onLayoutAnimationStart": [Function],
                              "onLayoutMeasure": [Function],
                              "onLayoutUpdate": [Function],
                              "onRender": [Function],
                              "onSetAxisTarget": [Function],
                              "onUnmount": [Function],
                              "onUpdate": [Function],
                              "onViewportBoxUpdate": [Function],
                              "parent": undefined,
                              "presenceId": 0,
                              "projection": [Circular],
                              "readValue": [Function],
                              "removeValue": [Function],
                              "scheduleRender": [Function],
                              "setBaseTarget": [Function],
                              "setProps": [Function],
                              "setStaticValue": [Function],
                              "setVisibility": [Function],
                              "shouldReduceMotion": false,
                              "sortNodePosition": [Function],
                              "syncRender": [Function],
                              "treeType": "dom",
                              "unmount": [Function],
                              "updatePropListeners": [Function],
                              "variantChildren": Set {},
                            },
                          },
                          "parent": [Circular],
                          "path": Array [
                            [Circular],
                          ],
                          "potentialNodes": Map {},
                          "root": [Circular],
                          "sharedNodes": Map {},
                          "shouldResetTransform": false,
                          "treeScale": Object {
                            "x": 1,
                            "y": 1,
                          },
                          "updateBlockedByResize": false,
                          "updateManuallyBlocked": false,
                          "updateProjection": [Function],
                        },
                        ProjectionNode {
                          "animationProgress": 0,
                          "checkUpdateFailed": [Function],
                          "children": Set {},
                          "depth": 1,
                          "eventHandlers": Map {},
                          "hasProjected": false,
                          "id": undefined,
                          "instance": <div
                            class="chakra-offset-slide"
                            style="opacity: 0; transform: scale(0.7) translateZ(0);"
                          >
                            <div
                              class="css-0"
                            >
                              <h2
                                class="chakra-heading css-0"
                              >
                                Login
                              </h2>
                              <div
                                class="css-0"
                              >
                                <div
                                  class="chakra-form-control css-0"
                                  role="group"
                                >
                                  <form>
                                    <div
                                      class="chakra-stack css-0"
                                    >
                                      <input />
                                    </div>
                                  </form>
                                </div>
                              </div>
                            </div>
                          </div>,
                          "isAnimationBlocked": false,
                          "isLayoutDirty": false,
                          "isSVG": false,
                          "isTreeAnimating": false,
                          "isUpdating": false,
                          "isVisible": true,
                          "latestValues": Object {
                            "opacity": 0,
                            "scale": 0.7,
                          },
                          "needsReset": false,
                          "options": Object {
                            "alwaysMeasureLayout": undefined,
                            "animationType": "both",
                            "crossfade": true,
                            "initialPromotionConfig": Object {},
                            "layout": undefined,
                            "layoutId": undefined,
                            "layoutScroll": undefined,
                            "scheduleRender": [Function],
                            "visualElement": Object {
                              "addValue": [Function],
                              "addVariantChild": [Function],
                              "animationState": Object {
                                "animateChanges": [Function],
                                "getState": [Function],
                                "isAnimated": [Function],
                                "setActive": [Function],
                                "setAnimateFunction": [Function],
                              },
                              "blockInitialAnimation": false,
                              "build": [Function],
                              "children": Set {},
                              "clearAllListeners": [Function],
                              "current": <div
                                class="chakra-offset-slide"
                                style="opacity: 0; transform: scale(0.7) translateZ(0);"
                              >
                                <div
                                  class="css-0"
                                >
                                  <h2
                                    class="chakra-heading css-0"
                                  >
                                    Login
                                  </h2>
                                  <div
                                    class="css-0"
                                  >
                                    <div
                                      class="chakra-form-control css-0"
                                      role="group"
                                    >
                                      <form>
                                        <div
                                          class="chakra-stack css-0"
                                        >
                                          <input />
                                        </div>
                                      </form>
                                    </div>
                                  </div>
                                </div>
                              </div>,
                              "depth": 0,
                              "forEachValue": [Function],
                              "getBaseTarget": [Function],
                              "getClosestVariantNode": [Function],
                              "getDefaultTransition": [Function],
                              "getInstance": [Function],
                              "getLatestValues": [Function],
                              "getLayoutId": [Function],
                              "getProps": [Function],
                              "getStaticValue": [Function],
                              "getTransformPagePoint": [Function],
                              "getValue": [Function],
                              "getVariant": [Function],
                              "getVariantContext": [Function],
                              "hasValue": [Function],
                              "isMounted": [Function],
                              "isPresent": true,
                              "isVisible": undefined,
                              "makeTargetAnimatable": [Function],
                              "manuallyAnimateOnMount": false,
                              "measureViewportBox": [Function],
                              "mount": [Function],
                              "notifyAnimationComplete": [Function],
                              "notifyAnimationStart": [Function],
                              "notifyBeforeLayoutMeasure": [Function],
                              "notifyLayoutAnimationComplete": [Function],
                              "notifyLayoutAnimationStart": [Function],
                              "notifyLayoutMeasure": [Function],
                              "notifyLayoutUpdate": [Function],
                              "notifyRender": [Function],
                              "notifySetAxisTarget": [Function],
                              "notifyUnmount": [Function],
                              "notifyUpdate": [Function],
                              "notifyViewportBoxUpdate": [Function],
                              "onAnimationComplete": [Function],
                              "onAnimationStart": [Function],
                              "onBeforeLayoutMeasure": [Function],
                              "onLayoutAnimationComplete": [Function],
                              "onLayoutAnimationStart": [Function],
                              "onLayoutMeasure": [Function],
                              "onLayoutUpdate": [Function],
                              "onRender": [Function],
                              "onSetAxisTarget": [Function],
                              "onUnmount": [Function],
                              "onUpdate": [Function],
                              "onViewportBoxUpdate": [Function],
                              "parent": undefined,
                              "presenceId": 2,
                              "projection": [Circular],
                              "readValue": [Function],
                              "removeValue": [Function],
                              "scheduleRender": [Function],
                              "setBaseTarget": [Function],
                              "setProps": [Function],
                              "setStaticValue": [Function],
                              "setVisibility": [Function],
                              "shouldReduceMotion": false,
                              "sortNodePosition": [Function],
                              "syncRender": [Function],
                              "treeType": "dom",
                              "unmount": [Function],
                              "updatePropListeners": [Function],
                              "variantChildren": Set {},
                            },
                          },
                          "parent": [Circular],
                          "path": Array [
                            [Circular],
                          ],
                          "potentialNodes": Map {},
                          "root": [Circular],
                          "sharedNodes": Map {},
                          "shouldResetTransform": false,
                          "treeScale": Object {
                            "x": 1,
                            "y": 1,
                          },
                          "updateBlockedByResize": false,
                          "updateManuallyBlocked": false,
                          "updateProjection": [Function],
                        },
                        [Circular],
                      },
                      "depth": 0,
                      "eventHandlers": Map {},
                      "hasProjected": false,
                      "id": 0,
                      "instance": [Window],
                      "isAnimationBlocked": false,
                      "isLayoutDirty": false,
                      "isSVG": false,
                      "isTreeAnimating": false,
                      "isUpdating": false,
                      "isVisible": true,
                      "latestValues": Object {},
                      "needsReset": false,
                      "nodes": FlatTree {
                        "children": Array [
                          [Circular],
                          ProjectionNode {
                            "animationProgress": 0,
                            "checkUpdateFailed": [Function],
                            "children": Set {},
                            "depth": 1,
                            "eventHandlers": Map {},
                            "hasProjected": false,
                            "id": undefined,
                            "instance": <div
                              class="chakra-offset-slide"
                              style="opacity: 0; transform: scale(0.7) translateZ(0);"
                            >
                              <div
                                class="css-0"
                              >
                                <h2
                                  class="chakra-heading css-0"
                                >
                                  Register
                                </h2>
                                <div
                                  class="css-0"
                                >
                                  <div
                                    class="chakra-form-control css-0"
                                    role="group"
                                  >
                                    <form>
                                      <div
                                        class="chakra-stack css-0"
                                      >
                                        <input />
                                      </div>
                                    </form>
                                  </div>
                                </div>
                              </div>
                            </div>,
                            "isAnimationBlocked": false,
                            "isLayoutDirty": false,
                            "isSVG": false,
                            "isTreeAnimating": false,
                            "isUpdating": false,
                            "isVisible": true,
                            "latestValues": Object {
                              "opacity": 0,
                              "scale": 0.7,
                            },
                            "needsReset": false,
                            "options": Object {
                              "alwaysMeasureLayout": undefined,
                              "animationType": "both",
                              "crossfade": true,
                              "initialPromotionConfig": Object {},
                              "layout": undefined,
                              "layoutId": undefined,
                              "layoutScroll": undefined,
                              "scheduleRender": [Function],
                              "visualElement": Object {
                                "addValue": [Function],
                                "addVariantChild": [Function],
                                "animationState": Object {
                                  "animateChanges": [Function],
                                  "getState": [Function],
                                  "isAnimated": [Function],
                                  "setActive": [Function],
                                  "setAnimateFunction": [Function],
                                },
                                "blockInitialAnimation": false,
                                "build": [Function],
                                "children": Set {},
                                "clearAllListeners": [Function],
                                "current": <div
                                  class="chakra-offset-slide"
                                  style="opacity: 0; transform: scale(0.7) translateZ(0);"
                                >
                                  <div
                                    class="css-0"
                                  >
                                    <h2
                                      class="chakra-heading css-0"
                                    >
                                      Register
                                    </h2>
                                    <div
                                      class="css-0"
                                    >
                                      <div
                                        class="chakra-form-control css-0"
                                        role="group"
                                      >
                                        <form>
                                          <div
                                            class="chakra-stack css-0"
                                          >
                                            <input />
                                          </div>
                                        </form>
                                      </div>
                                    </div>
                                  </div>
                                </div>,
                                "depth": 0,
                                "forEachValue": [Function],
                                "getBaseTarget": [Function],
                                "getClosestVariantNode": [Function],
                                "getDefaultTransition": [Function],
                                "getInstance": [Function],
                                "getLatestValues": [Function],
                                "getLayoutId": [Function],
                                "getProps": [Function],
                                "getStaticValue": [Function],
                                "getTransformPagePoint": [Function],
                                "getValue": [Function],
                                "getVariant": [Function],
                                "getVariantContext": [Function],
                                "hasValue": [Function],
                                "isMounted": [Function],
                                "isPresent": true,
                                "isVisible": undefined,
                                "makeTargetAnimatable": [Function],
                                "manuallyAnimateOnMount": false,
                                "measureViewportBox": [Function],
                                "mount": [Function],
                                "notifyAnimationComplete": [Function],
                                "notifyAnimationStart": [Function],
                                "notifyBeforeLayoutMeasure": [Function],
                                "notifyLayoutAnimationComplete": [Function],
                                "notifyLayoutAnimationStart": [Function],
                                "notifyLayoutMeasure": [Function],
                                "notifyLayoutUpdate": [Function],
                                "notifyRender": [Function],
                                "notifySetAxisTarget": [Function],
                                "notifyUnmount": [Function],
                                "notifyUpdate": [Function],
                                "notifyViewportBoxUpdate": [Function],
                                "onAnimationComplete": [Function],
                                "onAnimationStart": [Function],
                                "onBeforeLayoutMeasure": [Function],
                                "onLayoutAnimationComplete": [Function],
                                "onLayoutAnimationStart": [Function],
                                "onLayoutMeasure": [Function],
                                "onLayoutUpdate": [Function],
                                "onRender": [Function],
                                "onSetAxisTarget": [Function],
                                "onUnmount": [Function],
                                "onUpdate": [Function],
                                "onViewportBoxUpdate": [Function],
                                "parent": undefined,
                                "presenceId": 0,
                                "projection": [Circular],
                                "readValue": [Function],
                                "removeValue": [Function],
                                "scheduleRender": [Function],
                                "setBaseTarget": [Function],
                                "setProps": [Function],
                                "setStaticValue": [Function],
                                "setVisibility": [Function],
                                "shouldReduceMotion": false,
                                "sortNodePosition": [Function],
                                "syncRender": [Function],
                                "treeType": "dom",
                                "unmount": [Function],
                                "updatePropListeners": [Function],
                                "variantChildren": Set {},
                              },
                            },
                            "parent": [Circular],
                            "path": Array [
                              [Circular],
                            ],
                            "potentialNodes": Map {},
                            "root": [Circular],
                            "sharedNodes": Map {},
                            "shouldResetTransform": false,
                            "treeScale": Object {
                              "x": 1,
                              "y": 1,
                            },
                            "updateBlockedByResize": false,
                            "updateManuallyBlocked": false,
                            "updateProjection": [Function],
                          },
                          ProjectionNode {
                            "animationProgress": 0,
                            "checkUpdateFailed": [Function],
                            "children": Set {},
                            "depth": 1,
                            "eventHandlers": Map {},
                            "hasProjected": false,
                            "id": undefined,
                            "instance": <div
                              class="chakra-offset-slide"
                              style="opacity: 0; transform: scale(0.7) translateZ(0);"
                            >
                              <div
                                class="css-0"
                              >
                                <h2
                                  class="chakra-heading css-0"
                                >
                                  Login
                                </h2>
                                <div
                                  class="css-0"
                                >
                                  <div
                                    class="chakra-form-control css-0"
                                    role="group"
                                  >
                                    <form>
                                      <div
                                        class="chakra-stack css-0"
                                      >
                                        <input />
                                      </div>
                                    </form>
                                  </div>
                                </div>
                              </div>
                            </div>,
                            "isAnimationBlocked": false,
                            "isLayoutDirty": false,
                            "isSVG": false,
                            "isTreeAnimating": false,
                            "isUpdating": false,
                            "isVisible": true,
                            "latestValues": Object {
                              "opacity": 0,
                              "scale": 0.7,
                            },
                            "needsReset": false,
                            "options": Object {
                              "alwaysMeasureLayout": undefined,
                              "animationType": "both",
                              "crossfade": true,
                              "initialPromotionConfig": Object {},
                              "layout": undefined,
                              "layoutId": undefined,
                              "layoutScroll": undefined,
                              "scheduleRender": [Function],
                              "visualElement": Object {
                                "addValue": [Function],
                                "addVariantChild": [Function],
                                "animationState": Object {
                                  "animateChanges": [Function],
                                  "getState": [Function],
                                  "isAnimated": [Function],
                                  "setActive": [Function],
                                  "setAnimateFunction": [Function],
                                },
                                "blockInitialAnimation": false,
                                "build": [Function],
                                "children": Set {},
                                "clearAllListeners": [Function],
                                "current": <div
                                  class="chakra-offset-slide"
                                  style="opacity: 0; transform: scale(0.7) translateZ(0);"
                                >
                                  <div
                                    class="css-0"
                                  >
                                    <h2
                                      class="chakra-heading css-0"
                                    >
                                      Login
                                    </h2>
                                    <div
                                      class="css-0"
                                    >
                                      <div
                                        class="chakra-form-control css-0"
                                        role="group"
                                      >
                                        <form>
                                          <div
                                            class="chakra-stack css-0"
                                          >
                                            <input />
                                          </div>
                                        </form>
                                      </div>
                                    </div>
                                  </div>
                                </div>,
                                "depth": 0,
                                "forEachValue": [Function],
                                "getBaseTarget": [Function],
                                "getClosestVariantNode": [Function],
                                "getDefaultTransition": [Function],
                                "getInstance": [Function],
                                "getLatestValues": [Function],
                                "getLayoutId": [Function],
                                "getProps": [Function],
                                "getStaticValue": [Function],
                                "getTransformPagePoint": [Function],
                                "getValue": [Function],
                                "getVariant": [Function],
                                "getVariantContext": [Function],
                                "hasValue": [Function],
                                "isMounted": [Function],
                                "isPresent": true,
                                "isVisible": undefined,
                                "makeTargetAnimatable": [Function],
                                "manuallyAnimateOnMount": false,
                                "measureViewportBox": [Function],
                                "mount": [Function],
                                "notifyAnimationComplete": [Function],
                                "notifyAnimationStart": [Function],
                                "notifyBeforeLayoutMeasure": [Function],
                                "notifyLayoutAnimationComplete": [Function],
                                "notifyLayoutAnimationStart": [Function],
                                "notifyLayoutMeasure": [Function],
                                "notifyLayoutUpdate": [Function],
                                "notifyRender": [Function],
                                "notifySetAxisTarget": [Function],
                                "notifyUnmount": [Function],
                                "notifyUpdate": [Function],
                                "notifyViewportBoxUpdate": [Function],
                                "onAnimationComplete": [Function],
                                "onAnimationStart": [Function],
                                "onBeforeLayoutMeasure": [Function],
                                "onLayoutAnimationComplete": [Function],
                                "onLayoutAnimationStart": [Function],
                                "onLayoutMeasure": [Function],
                                "onLayoutUpdate": [Function],
                                "onRender": [Function],
                                "onSetAxisTarget": [Function],
                                "onUnmount": [Function],
                                "onUpdate": [Function],
                                "onViewportBoxUpdate": [Function],
                                "parent": undefined,
                                "presenceId": 2,
                                "projection": [Circular],
                                "readValue": [Function],
                                "removeValue": [Function],
                                "scheduleRender": [Function],
                                "setBaseTarget": [Function],
                                "setProps": [Function],
                                "setStaticValue": [Function],
                                "setVisibility": [Function],
                                "shouldReduceMotion": false,
                                "sortNodePosition": [Function],
                                "syncRender": [Function],
                                "treeType": "dom",
                                "unmount": [Function],
                                "updatePropListeners": [Function],
                                "variantChildren": Set {},
                              },
                            },
                            "parent": [Circular],
                            "path": Array [
                              [Circular],
                            ],
                            "potentialNodes": Map {},
                            "root": [Circular],
                            "sharedNodes": Map {},
                            "shouldResetTransform": false,
                            "treeScale": Object {
                              "x": 1,
                              "y": 1,
                            },
                            "updateBlockedByResize": false,
                            "updateManuallyBlocked": false,
                            "updateProjection": [Function],
                          },
                          [Circular],
                        ],
                        "isDirty": true,
                      },
                      "options": Object {
                        "crossfade": true,
                        "layoutScroll": true,
                      },
                      "parent": undefined,
                      "path": Array [],
                      "potentialNodes": Map {},
                      "root": [Circular],
                      "sharedNodes": Map {},
                      "shouldResetTransform": true,
                      "treeScale": Object {
                        "x": 1,
                        "y": 1,
                      },
                      "updateBlockedByResize": false,
                      "updateManuallyBlocked": false,
                      "updateProjection": [Function],
                    },
                    "path": Array [
                      ProjectionNode {
                        "animationProgress": 0,
                        "checkUpdateFailed": [Function],
                        "children": Set {
                          ProjectionNode {
                            "animationProgress": 0,
                            "checkUpdateFailed": [Function],
                            "children": Set {},
                            "depth": 1,
                            "eventHandlers": Map {},
                            "hasProjected": false,
                            "id": undefined,
                            "instance": <div
                              class="chakra-offset-slide"
                              style="opacity: 0; transform: scale(0.7) translateZ(0);"
                            >
                              <div
                                class="css-0"
                              >
                                <h2
                                  class="chakra-heading css-0"
                                >
                                  Register
                                </h2>
                                <div
                                  class="css-0"
                                >
                                  <div
                                    class="chakra-form-control css-0"
                                    role="group"
                                  >
                                    <form>
                                      <div
                                        class="chakra-stack css-0"
                                      >
                                        <input />
                                      </div>
                                    </form>
                                  </div>
                                </div>
                              </div>
                            </div>,
                            "isAnimationBlocked": false,
                            "isLayoutDirty": false,
                            "isSVG": false,
                            "isTreeAnimating": false,
                            "isUpdating": false,
                            "isVisible": true,
                            "latestValues": Object {
                              "opacity": 0,
                              "scale": 0.7,
                            },
                            "needsReset": false,
                            "options": Object {
                              "alwaysMeasureLayout": undefined,
                              "animationType": "both",
                              "crossfade": true,
                              "initialPromotionConfig": Object {},
                              "layout": undefined,
                              "layoutId": undefined,
                              "layoutScroll": undefined,
                              "scheduleRender": [Function],
                              "visualElement": Object {
                                "addValue": [Function],
                                "addVariantChild": [Function],
                                "animationState": Object {
                                  "animateChanges": [Function],
                                  "getState": [Function],
                                  "isAnimated": [Function],
                                  "setActive": [Function],
                                  "setAnimateFunction": [Function],
                                },
                                "blockInitialAnimation": false,
                                "build": [Function],
                                "children": Set {},
                                "clearAllListeners": [Function],
                                "current": <div
                                  class="chakra-offset-slide"
                                  style="opacity: 0; transform: scale(0.7) translateZ(0);"
                                >
                                  <div
                                    class="css-0"
                                  >
                                    <h2
                                      class="chakra-heading css-0"
                                    >
                                      Register
                                    </h2>
                                    <div
                                      class="css-0"
                                    >
                                      <div
                                        class="chakra-form-control css-0"
                                        role="group"
                                      >
                                        <form>
                                          <div
                                            class="chakra-stack css-0"
                                          >
                                            <input />
                                          </div>
                                        </form>
                                      </div>
                                    </div>
                                  </div>
                                </div>,
                                "depth": 0,
                                "forEachValue": [Function],
                                "getBaseTarget": [Function],
                                "getClosestVariantNode": [Function],
                                "getDefaultTransition": [Function],
                                "getInstance": [Function],
                                "getLatestValues": [Function],
                                "getLayoutId": [Function],
                                "getProps": [Function],
                                "getStaticValue": [Function],
                                "getTransformPagePoint": [Function],
                                "getValue": [Function],
                                "getVariant": [Function],
                                "getVariantContext": [Function],
                                "hasValue": [Function],
                                "isMounted": [Function],
                                "isPresent": true,
                                "isVisible": undefined,
                                "makeTargetAnimatable": [Function],
                                "manuallyAnimateOnMount": false,
                                "measureViewportBox": [Function],
                                "mount": [Function],
                                "notifyAnimationComplete": [Function],
                                "notifyAnimationStart": [Function],
                                "notifyBeforeLayoutMeasure": [Function],
                                "notifyLayoutAnimationComplete": [Function],
                                "notifyLayoutAnimationStart": [Function],
                                "notifyLayoutMeasure": [Function],
                                "notifyLayoutUpdate": [Function],
                                "notifyRender": [Function],
                                "notifySetAxisTarget": [Function],
                                "notifyUnmount": [Function],
                                "notifyUpdate": [Function],
                                "notifyViewportBoxUpdate": [Function],
                                "onAnimationComplete": [Function],
                                "onAnimationStart": [Function],
                                "onBeforeLayoutMeasure": [Function],
                                "onLayoutAnimationComplete": [Function],
                                "onLayoutAnimationStart": [Function],
                                "onLayoutMeasure": [Function],
                                "onLayoutUpdate": [Function],
                                "onRender": [Function],
                                "onSetAxisTarget": [Function],
                                "onUnmount": [Function],
                                "onUpdate": [Function],
                                "onViewportBoxUpdate": [Function],
                                "parent": undefined,
                                "presenceId": 0,
                                "projection": [Circular],
                                "readValue": [Function],
                                "removeValue": [Function],
                                "scheduleRender": [Function],
                                "setBaseTarget": [Function],
                                "setProps": [Function],
                                "setStaticValue": [Function],
                                "setVisibility": [Function],
                                "shouldReduceMotion": false,
                                "sortNodePosition": [Function],
                                "syncRender": [Function],
                                "treeType": "dom",
                                "unmount": [Function],
                                "updatePropListeners": [Function],
                                "variantChildren": Set {},
                              },
                            },
                            "parent": [Circular],
                            "path": Array [
                              [Circular],
                            ],
                            "potentialNodes": Map {},
                            "root": [Circular],
                            "sharedNodes": Map {},
                            "shouldResetTransform": false,
                            "treeScale": Object {
                              "x": 1,
                              "y": 1,
                            },
                            "updateBlockedByResize": false,
                            "updateManuallyBlocked": false,
                            "updateProjection": [Function],
                          },
                          ProjectionNode {
                            "animationProgress": 0,
                            "checkUpdateFailed": [Function],
                            "children": Set {},
                            "depth": 1,
                            "eventHandlers": Map {},
                            "hasProjected": false,
                            "id": undefined,
                            "instance": <div
                              class="chakra-offset-slide"
                              style="opacity: 0; transform: scale(0.7) translateZ(0);"
                            >
                              <div
                                class="css-0"
                              >
                                <h2
                                  class="chakra-heading css-0"
                                >
                                  Login
                                </h2>
                                <div
                                  class="css-0"
                                >
                                  <div
                                    class="chakra-form-control css-0"
                                    role="group"
                                  >
                                    <form>
                                      <div
                                        class="chakra-stack css-0"
                                      >
                                        <input />
                                      </div>
                                    </form>
                                  </div>
                                </div>
                              </div>
                            </div>,
                            "isAnimationBlocked": false,
                            "isLayoutDirty": false,
                            "isSVG": false,
                            "isTreeAnimating": false,
                            "isUpdating": false,
                            "isVisible": true,
                            "latestValues": Object {
                              "opacity": 0,
                              "scale": 0.7,
                            },
                            "needsReset": false,
                            "options": Object {
                              "alwaysMeasureLayout": undefined,
                              "animationType": "both",
                              "crossfade": true,
                              "initialPromotionConfig": Object {},
                              "layout": undefined,
                              "layoutId": undefined,
                              "layoutScroll": undefined,
                              "scheduleRender": [Function],
                              "visualElement": Object {
                                "addValue": [Function],
                                "addVariantChild": [Function],
                                "animationState": Object {
                                  "animateChanges": [Function],
                                  "getState": [Function],
                                  "isAnimated": [Function],
                                  "setActive": [Function],
                                  "setAnimateFunction": [Function],
                                },
                                "blockInitialAnimation": false,
                                "build": [Function],
                                "children": Set {},
                                "clearAllListeners": [Function],
                                "current": <div
                                  class="chakra-offset-slide"
                                  style="opacity: 0; transform: scale(0.7) translateZ(0);"
                                >
                                  <div
                                    class="css-0"
                                  >
                                    <h2
                                      class="chakra-heading css-0"
                                    >
                                      Login
                                    </h2>
                                    <div
                                      class="css-0"
                                    >
                                      <div
                                        class="chakra-form-control css-0"
                                        role="group"
                                      >
                                        <form>
                                          <div
                                            class="chakra-stack css-0"
                                          >
                                            <input />
                                          </div>
                                        </form>
                                      </div>
                                    </div>
                                  </div>
                                </div>,
                                "depth": 0,
                                "forEachValue": [Function],
                                "getBaseTarget": [Function],
                                "getClosestVariantNode": [Function],
                                "getDefaultTransition": [Function],
                                "getInstance": [Function],
                                "getLatestValues": [Function],
                                "getLayoutId": [Function],
                                "getProps": [Function],
                                "getStaticValue": [Function],
                                "getTransformPagePoint": [Function],
                                "getValue": [Function],
                                "getVariant": [Function],
                                "getVariantContext": [Function],
                                "hasValue": [Function],
                                "isMounted": [Function],
                                "isPresent": true,
                                "isVisible": undefined,
                                "makeTargetAnimatable": [Function],
                                "manuallyAnimateOnMount": false,
                                "measureViewportBox": [Function],
                                "mount": [Function],
                                "notifyAnimationComplete": [Function],
                                "notifyAnimationStart": [Function],
                                "notifyBeforeLayoutMeasure": [Function],
                                "notifyLayoutAnimationComplete": [Function],
                                "notifyLayoutAnimationStart": [Function],
                                "notifyLayoutMeasure": [Function],
                                "notifyLayoutUpdate": [Function],
                                "notifyRender": [Function],
                                "notifySetAxisTarget": [Function],
                                "notifyUnmount": [Function],
                                "notifyUpdate": [Function],
                                "notifyViewportBoxUpdate": [Function],
                                "onAnimationComplete": [Function],
                                "onAnimationStart": [Function],
                                "onBeforeLayoutMeasure": [Function],
                                "onLayoutAnimationComplete": [Function],
                                "onLayoutAnimationStart": [Function],
                                "onLayoutMeasure": [Function],
                                "onLayoutUpdate": [Function],
                                "onRender": [Function],
                                "onSetAxisTarget": [Function],
                                "onUnmount": [Function],
                                "onUpdate": [Function],
                                "onViewportBoxUpdate": [Function],
                                "parent": undefined,
                                "presenceId": 2,
                                "projection": [Circular],
                                "readValue": [Function],
                                "removeValue": [Function],
                                "scheduleRender": [Function],
                                "setBaseTarget": [Function],
                                "setProps": [Function],
                                "setStaticValue": [Function],
                                "setVisibility": [Function],
                                "shouldReduceMotion": false,
                                "sortNodePosition": [Function],
                                "syncRender": [Function],
                                "treeType": "dom",
                                "unmount": [Function],
                                "updatePropListeners": [Function],
                                "variantChildren": Set {},
                              },
                            },
                            "parent": [Circular],
                            "path": Array [
                              [Circular],
                            ],
                            "potentialNodes": Map {},
                            "root": [Circular],
                            "sharedNodes": Map {},
                            "shouldResetTransform": false,
                            "treeScale": Object {
                              "x": 1,
                              "y": 1,
                            },
                            "updateBlockedByResize": false,
                            "updateManuallyBlocked": false,
                            "updateProjection": [Function],
                          },
                          [Circular],
                        },
                        "depth": 0,
                        "eventHandlers": Map {},
                        "hasProjected": false,
                        "id": 0,
                        "instance": [Window],
                        "isAnimationBlocked": false,
                        "isLayoutDirty": false,
                        "isSVG": false,
                        "isTreeAnimating": false,
                        "isUpdating": false,
                        "isVisible": true,
                        "latestValues": Object {},
                        "needsReset": false,
                        "nodes": FlatTree {
                          "children": Array [
                            [Circular],
                            ProjectionNode {
                              "animationProgress": 0,
                              "checkUpdateFailed": [Function],
                              "children": Set {},
                              "depth": 1,
                              "eventHandlers": Map {},
                              "hasProjected": false,
                              "id": undefined,
                              "instance": <div
                                class="chakra-offset-slide"
                                style="opacity: 0; transform: scale(0.7) translateZ(0);"
                              >
                                <div
                                  class="css-0"
                                >
                                  <h2
                                    class="chakra-heading css-0"
                                  >
                                    Register
                                  </h2>
                                  <div
                                    class="css-0"
                                  >
                                    <div
                                      class="chakra-form-control css-0"
                                      role="group"
                                    >
                                      <form>
                                        <div
                                          class="chakra-stack css-0"
                                        >
                                          <input />
                                        </div>
                                      </form>
                                    </div>
                                  </div>
                                </div>
                              </div>,
                              "isAnimationBlocked": false,
                              "isLayoutDirty": false,
                              "isSVG": false,
                              "isTreeAnimating": false,
                              "isUpdating": false,
                              "isVisible": true,
                              "latestValues": Object {
                                "opacity": 0,
                                "scale": 0.7,
                              },
                              "needsReset": false,
                              "options": Object {
                                "alwaysMeasureLayout": undefined,
                                "animationType": "both",
                                "crossfade": true,
                                "initialPromotionConfig": Object {},
                                "layout": undefined,
                                "layoutId": undefined,
                                "layoutScroll": undefined,
                                "scheduleRender": [Function],
                                "visualElement": Object {
                                  "addValue": [Function],
                                  "addVariantChild": [Function],
                                  "animationState": Object {
                                    "animateChanges": [Function],
                                    "getState": [Function],
                                    "isAnimated": [Function],
                                    "setActive": [Function],
                                    "setAnimateFunction": [Function],
                                  },
                                  "blockInitialAnimation": false,
                                  "build": [Function],
                                  "children": Set {},
                                  "clearAllListeners": [Function],
                                  "current": <div
                                    class="chakra-offset-slide"
                                    style="opacity: 0; transform: scale(0.7) translateZ(0);"
                                  >
                                    <div
                                      class="css-0"
                                    >
                                      <h2
                                        class="chakra-heading css-0"
                                      >
                                        Register
                                      </h2>
                                      <div
                                        class="css-0"
                                      >
                                        <div
                                          class="chakra-form-control css-0"
                                          role="group"
                                        >
                                          <form>
                                            <div
                                              class="chakra-stack css-0"
                                            >
                                              <input />
                                            </div>
                                          </form>
                                        </div>
                                      </div>
                                    </div>
                                  </div>,
                                  "depth": 0,
                                  "forEachValue": [Function],
                                  "getBaseTarget": [Function],
                                  "getClosestVariantNode": [Function],
                                  "getDefaultTransition": [Function],
                                  "getInstance": [Function],
                                  "getLatestValues": [Function],
                                  "getLayoutId": [Function],
                                  "getProps": [Function],
                                  "getStaticValue": [Function],
                                  "getTransformPagePoint": [Function],
                                  "getValue": [Function],
                                  "getVariant": [Function],
                                  "getVariantContext": [Function],
                                  "hasValue": [Function],
                                  "isMounted": [Function],
                                  "isPresent": true,
                                  "isVisible": undefined,
                                  "makeTargetAnimatable": [Function],
                                  "manuallyAnimateOnMount": false,
                                  "measureViewportBox": [Function],
                                  "mount": [Function],
                                  "notifyAnimationComplete": [Function],
                                  "notifyAnimationStart": [Function],
                                  "notifyBeforeLayoutMeasure": [Function],
                                  "notifyLayoutAnimationComplete": [Function],
                                  "notifyLayoutAnimationStart": [Function],
                                  "notifyLayoutMeasure": [Function],
                                  "notifyLayoutUpdate": [Function],
                                  "notifyRender": [Function],
                                  "notifySetAxisTarget": [Function],
                                  "notifyUnmount": [Function],
                                  "notifyUpdate": [Function],
                                  "notifyViewportBoxUpdate": [Function],
                                  "onAnimationComplete": [Function],
                                  "onAnimationStart": [Function],
                                  "onBeforeLayoutMeasure": [Function],
                                  "onLayoutAnimationComplete": [Function],
                                  "onLayoutAnimationStart": [Function],
                                  "onLayoutMeasure": [Function],
                                  "onLayoutUpdate": [Function],
                                  "onRender": [Function],
                                  "onSetAxisTarget": [Function],
                                  "onUnmount": [Function],
                                  "onUpdate": [Function],
                                  "onViewportBoxUpdate": [Function],
                                  "parent": undefined,
                                  "presenceId": 0,
                                  "projection": [Circular],
                                  "readValue": [Function],
                                  "removeValue": [Function],
                                  "scheduleRender": [Function],
                                  "setBaseTarget": [Function],
                                  "setProps": [Function],
                                  "setStaticValue": [Function],
                                  "setVisibility": [Function],
                                  "shouldReduceMotion": false,
                                  "sortNodePosition": [Function],
                                  "syncRender": [Function],
                                  "treeType": "dom",
                                  "unmount": [Function],
                                  "updatePropListeners": [Function],
                                  "variantChildren": Set {},
                                },
                              },
                              "parent": [Circular],
                              "path": Array [
                                [Circular],
                              ],
                              "potentialNodes": Map {},
                              "root": [Circular],
                              "sharedNodes": Map {},
                              "shouldResetTransform": false,
                              "treeScale": Object {
                                "x": 1,
                                "y": 1,
                              },
                              "updateBlockedByResize": false,
                              "updateManuallyBlocked": false,
                              "updateProjection": [Function],
                            },
                            ProjectionNode {
                              "animationProgress": 0,
                              "checkUpdateFailed": [Function],
                              "children": Set {},
                              "depth": 1,
                              "eventHandlers": Map {},
                              "hasProjected": false,
                              "id": undefined,
                              "instance": <div
                                class="chakra-offset-slide"
                                style="opacity: 0; transform: scale(0.7) translateZ(0);"
                              >
                                <div
                                  class="css-0"
                                >
                                  <h2
                                    class="chakra-heading css-0"
                                  >
                                    Login
                                  </h2>
                                  <div
                                    class="css-0"
                                  >
                                    <div
                                      class="chakra-form-control css-0"
                                      role="group"
                                    >
                                      <form>
                                        <div
                                          class="chakra-stack css-0"
                                        >
                                          <input />
                                        </div>
                                      </form>
                                    </div>
                                  </div>
                                </div>
                              </div>,
                              "isAnimationBlocked": false,
                              "isLayoutDirty": false,
                              "isSVG": false,
                              "isTreeAnimating": false,
                              "isUpdating": false,
                              "isVisible": true,
                              "latestValues": Object {
                                "opacity": 0,
                                "scale": 0.7,
                              },
                              "needsReset": false,
                              "options": Object {
                                "alwaysMeasureLayout": undefined,
                                "animationType": "both",
                                "crossfade": true,
                                "initialPromotionConfig": Object {},
                                "layout": undefined,
                                "layoutId": undefined,
                                "layoutScroll": undefined,
                                "scheduleRender": [Function],
                                "visualElement": Object {
                                  "addValue": [Function],
                                  "addVariantChild": [Function],
                                  "animationState": Object {
                                    "animateChanges": [Function],
                                    "getState": [Function],
                                    "isAnimated": [Function],
                                    "setActive": [Function],
                                    "setAnimateFunction": [Function],
                                  },
                                  "blockInitialAnimation": false,
                                  "build": [Function],
                                  "children": Set {},
                                  "clearAllListeners": [Function],
                                  "current": <div
                                    class="chakra-offset-slide"
                                    style="opacity: 0; transform: scale(0.7) translateZ(0);"
                                  >
                                    <div
                                      class="css-0"
                                    >
                                      <h2
                                        class="chakra-heading css-0"
                                      >
                                        Login
                                      </h2>
                                      <div
                                        class="css-0"
                                      >
                                        <div
                                          class="chakra-form-control css-0"
                                          role="group"
                                        >
                                          <form>
                                            <div
                                              class="chakra-stack css-0"
                                            >
                                              <input />
                                            </div>
                                          </form>
                                        </div>
                                      </div>
                                    </div>
                                  </div>,
                                  "depth": 0,
                                  "forEachValue": [Function],
                                  "getBaseTarget": [Function],
                                  "getClosestVariantNode": [Function],
                                  "getDefaultTransition": [Function],
                                  "getInstance": [Function],
                                  "getLatestValues": [Function],
                                  "getLayoutId": [Function],
                                  "getProps": [Function],
                                  "getStaticValue": [Function],
                                  "getTransformPagePoint": [Function],
                                  "getValue": [Function],
                                  "getVariant": [Function],
                                  "getVariantContext": [Function],
                                  "hasValue": [Function],
                                  "isMounted": [Function],
                                  "isPresent": true,
                                  "isVisible": undefined,
                                  "makeTargetAnimatable": [Function],
                                  "manuallyAnimateOnMount": false,
                                  "measureViewportBox": [Function],
                                  "mount": [Function],
                                  "notifyAnimationComplete": [Function],
                                  "notifyAnimationStart": [Function],
                                  "notifyBeforeLayoutMeasure": [Function],
                                  "notifyLayoutAnimationComplete": [Function],
                                  "notifyLayoutAnimationStart": [Function],
                                  "notifyLayoutMeasure": [Function],
                                  "notifyLayoutUpdate": [Function],
                                  "notifyRender": [Function],
                                  "notifySetAxisTarget": [Function],
                                  "notifyUnmount": [Function],
                                  "notifyUpdate": [Function],
                                  "notifyViewportBoxUpdate": [Function],
                                  "onAnimationComplete": [Function],
                                  "onAnimationStart": [Function],
                                  "onBeforeLayoutMeasure": [Function],
                                  "onLayoutAnimationComplete": [Function],
                                  "onLayoutAnimationStart": [Function],
                                  "onLayoutMeasure": [Function],
                                  "onLayoutUpdate": [Function],
                                  "onRender": [Function],
                                  "onSetAxisTarget": [Function],
                                  "onUnmount": [Function],
                                  "onUpdate": [Function],
                                  "onViewportBoxUpdate": [Function],
                                  "parent": undefined,
                                  "presenceId": 2,
                                  "projection": [Circular],
                                  "readValue": [Function],
                                  "removeValue": [Function],
                                  "scheduleRender": [Function],
                                  "setBaseTarget": [Function],
                                  "setProps": [Function],
                                  "setStaticValue": [Function],
                                  "setVisibility": [Function],
                                  "shouldReduceMotion": false,
                                  "sortNodePosition": [Function],
                                  "syncRender": [Function],
                                  "treeType": "dom",
                                  "unmount": [Function],
                                  "updatePropListeners": [Function],
                                  "variantChildren": Set {},
                                },
                              },
                              "parent": [Circular],
                              "path": Array [
                                [Circular],
                              ],
                              "potentialNodes": Map {},
                              "root": [Circular],
                              "sharedNodes": Map {},
                              "shouldResetTransform": false,
                              "treeScale": Object {
                                "x": 1,
                                "y": 1,
                              },
                              "updateBlockedByResize": false,
                              "updateManuallyBlocked": false,
                              "updateProjection": [Function],
                            },
                            [Circular],
                          ],
                          "isDirty": true,
                        },
                        "options": Object {
                          "crossfade": true,
                          "layoutScroll": true,
                        },
                        "parent": undefined,
                        "path": Array [],
                        "potentialNodes": Map {},
                        "root": [Circular],
                        "sharedNodes": Map {},
                        "shouldResetTransform": true,
                        "treeScale": Object {
                          "x": 1,
                          "y": 1,
                        },
                        "updateBlockedByResize": false,
                        "updateManuallyBlocked": false,
                        "updateProjection": [Function],
                      },
                    ],
                    "potentialNodes": Map {},
                    "root": ProjectionNode {
                      "animationProgress": 0,
                      "checkUpdateFailed": [Function],
                      "children": Set {
                        ProjectionNode {
                          "animationProgress": 0,
                          "checkUpdateFailed": [Function],
                          "children": Set {},
                          "depth": 1,
                          "eventHandlers": Map {},
                          "hasProjected": false,
                          "id": undefined,
                          "instance": <div
                            class="chakra-offset-slide"
                            style="opacity: 0; transform: scale(0.7) translateZ(0);"
                          >
                            <div
                              class="css-0"
                            >
                              <h2
                                class="chakra-heading css-0"
                              >
                                Register
                              </h2>
                              <div
                                class="css-0"
                              >
                                <div
                                  class="chakra-form-control css-0"
                                  role="group"
                                >
                                  <form>
                                    <div
                                      class="chakra-stack css-0"
                                    >
                                      <input />
                                    </div>
                                  </form>
                                </div>
                              </div>
                            </div>
                          </div>,
                          "isAnimationBlocked": false,
                          "isLayoutDirty": false,
                          "isSVG": false,
                          "isTreeAnimating": false,
                          "isUpdating": false,
                          "isVisible": true,
                          "latestValues": Object {
                            "opacity": 0,
                            "scale": 0.7,
                          },
                          "needsReset": false,
                          "options": Object {
                            "alwaysMeasureLayout": undefined,
                            "animationType": "both",
                            "crossfade": true,
                            "initialPromotionConfig": Object {},
                            "layout": undefined,
                            "layoutId": undefined,
                            "layoutScroll": undefined,
                            "scheduleRender": [Function],
                            "visualElement": Object {
                              "addValue": [Function],
                              "addVariantChild": [Function],
                              "animationState": Object {
                                "animateChanges": [Function],
                                "getState": [Function],
                                "isAnimated": [Function],
                                "setActive": [Function],
                                "setAnimateFunction": [Function],
                              },
                              "blockInitialAnimation": false,
                              "build": [Function],
                              "children": Set {},
                              "clearAllListeners": [Function],
                              "current": <div
                                class="chakra-offset-slide"
                                style="opacity: 0; transform: scale(0.7) translateZ(0);"
                              >
                                <div
                                  class="css-0"
                                >
                                  <h2
                                    class="chakra-heading css-0"
                                  >
                                    Register
                                  </h2>
                                  <div
                                    class="css-0"
                                  >
                                    <div
                                      class="chakra-form-control css-0"
                                      role="group"
                                    >
                                      <form>
                                        <div
                                          class="chakra-stack css-0"
                                        >
                                          <input />
                                        </div>
                                      </form>
                                    </div>
                                  </div>
                                </div>
                              </div>,
                              "depth": 0,
                              "forEachValue": [Function],
                              "getBaseTarget": [Function],
                              "getClosestVariantNode": [Function],
                              "getDefaultTransition": [Function],
                              "getInstance": [Function],
                              "getLatestValues": [Function],
                              "getLayoutId": [Function],
                              "getProps": [Function],
                              "getStaticValue": [Function],
                              "getTransformPagePoint": [Function],
                              "getValue": [Function],
                              "getVariant": [Function],
                              "getVariantContext": [Function],
                              "hasValue": [Function],
                              "isMounted": [Function],
                              "isPresent": true,
                              "isVisible": undefined,
                              "makeTargetAnimatable": [Function],
                              "manuallyAnimateOnMount": false,
                              "measureViewportBox": [Function],
                              "mount": [Function],
                              "notifyAnimationComplete": [Function],
                              "notifyAnimationStart": [Function],
                              "notifyBeforeLayoutMeasure": [Function],
                              "notifyLayoutAnimationComplete": [Function],
                              "notifyLayoutAnimationStart": [Function],
                              "notifyLayoutMeasure": [Function],
                              "notifyLayoutUpdate": [Function],
                              "notifyRender": [Function],
                              "notifySetAxisTarget": [Function],
                              "notifyUnmount": [Function],
                              "notifyUpdate": [Function],
                              "notifyViewportBoxUpdate": [Function],
                              "onAnimationComplete": [Function],
                              "onAnimationStart": [Function],
                              "onBeforeLayoutMeasure": [Function],
                              "onLayoutAnimationComplete": [Function],
                              "onLayoutAnimationStart": [Function],
                              "onLayoutMeasure": [Function],
                              "onLayoutUpdate": [Function],
                              "onRender": [Function],
                              "onSetAxisTarget": [Function],
                              "onUnmount": [Function],
                              "onUpdate": [Function],
                              "onViewportBoxUpdate": [Function],
                              "parent": undefined,
                              "presenceId": 0,
                              "projection": [Circular],
                              "readValue": [Function],
                              "removeValue": [Function],
                              "scheduleRender": [Function],
                              "setBaseTarget": [Function],
                              "setProps": [Function],
                              "setStaticValue": [Function],
                              "setVisibility": [Function],
                              "shouldReduceMotion": false,
                              "sortNodePosition": [Function],
                              "syncRender": [Function],
                              "treeType": "dom",
                              "unmount": [Function],
                              "updatePropListeners": [Function],
                              "variantChildren": Set {},
                            },
                          },
                          "parent": [Circular],
                          "path": Array [
                            [Circular],
                          ],
                          "potentialNodes": Map {},
                          "root": [Circular],
                          "sharedNodes": Map {},
                          "shouldResetTransform": false,
                          "treeScale": Object {
                            "x": 1,
                            "y": 1,
                          },
                          "updateBlockedByResize": false,
                          "updateManuallyBlocked": false,
                          "updateProjection": [Function],
                        },
                        ProjectionNode {
                          "animationProgress": 0,
                          "checkUpdateFailed": [Function],
                          "children": Set {},
                          "depth": 1,
                          "eventHandlers": Map {},
                          "hasProjected": false,
                          "id": undefined,
                          "instance": <div
                            class="chakra-offset-slide"
                            style="opacity: 0; transform: scale(0.7) translateZ(0);"
                          >
                            <div
                              class="css-0"
                            >
                              <h2
                                class="chakra-heading css-0"
                              >
                                Login
                              </h2>
                              <div
                                class="css-0"
                              >
                                <div
                                  class="chakra-form-control css-0"
                                  role="group"
                                >
                                  <form>
                                    <div
                                      class="chakra-stack css-0"
                                    >
                                      <input />
                                    </div>
                                  </form>
                                </div>
                              </div>
                            </div>
                          </div>,
                          "isAnimationBlocked": false,
                          "isLayoutDirty": false,
                          "isSVG": false,
                          "isTreeAnimating": false,
                          "isUpdating": false,
                          "isVisible": true,
                          "latestValues": Object {
                            "opacity": 0,
                            "scale": 0.7,
                          },
                          "needsReset": false,
                          "options": Object {
                            "alwaysMeasureLayout": undefined,
                            "animationType": "both",
                            "crossfade": true,
                            "initialPromotionConfig": Object {},
                            "layout": undefined,
                            "layoutId": undefined,
                            "layoutScroll": undefined,
                            "scheduleRender": [Function],
                            "visualElement": Object {
                              "addValue": [Function],
                              "addVariantChild": [Function],
                              "animationState": Object {
                                "animateChanges": [Function],
                                "getState": [Function],
                                "isAnimated": [Function],
                                "setActive": [Function],
                                "setAnimateFunction": [Function],
                              },
                              "blockInitialAnimation": false,
                              "build": [Function],
                              "children": Set {},
                              "clearAllListeners": [Function],
                              "current": <div
                                class="chakra-offset-slide"
                                style="opacity: 0; transform: scale(0.7) translateZ(0);"
                              >
                                <div
                                  class="css-0"
                                >
                                  <h2
                                    class="chakra-heading css-0"
                                  >
                                    Login
                                  </h2>
                                  <div
                                    class="css-0"
                                  >
                                    <div
                                      class="chakra-form-control css-0"
                                      role="group"
                                    >
                                      <form>
                                        <div
                                          class="chakra-stack css-0"
                                        >
                                          <input />
                                        </div>
                                      </form>
                                    </div>
                                  </div>
                                </div>
                              </div>,
                              "depth": 0,
                              "forEachValue": [Function],
                              "getBaseTarget": [Function],
                              "getClosestVariantNode": [Function],
                              "getDefaultTransition": [Function],
                              "getInstance": [Function],
                              "getLatestValues": [Function],
                              "getLayoutId": [Function],
                              "getProps": [Function],
                              "getStaticValue": [Function],
                              "getTransformPagePoint": [Function],
                              "getValue": [Function],
                              "getVariant": [Function],
                              "getVariantContext": [Function],
                              "hasValue": [Function],
                              "isMounted": [Function],
                              "isPresent": true,
                              "isVisible": undefined,
                              "makeTargetAnimatable": [Function],
                              "manuallyAnimateOnMount": false,
                              "measureViewportBox": [Function],
                              "mount": [Function],
                              "notifyAnimationComplete": [Function],
                              "notifyAnimationStart": [Function],
                              "notifyBeforeLayoutMeasure": [Function],
                              "notifyLayoutAnimationComplete": [Function],
                              "notifyLayoutAnimationStart": [Function],
                              "notifyLayoutMeasure": [Function],
                              "notifyLayoutUpdate": [Function],
                              "notifyRender": [Function],
                              "notifySetAxisTarget": [Function],
                              "notifyUnmount": [Function],
                              "notifyUpdate": [Function],
                              "notifyViewportBoxUpdate": [Function],
                              "onAnimationComplete": [Function],
                              "onAnimationStart": [Function],
                              "onBeforeLayoutMeasure": [Function],
                              "onLayoutAnimationComplete": [Function],
                              "onLayoutAnimationStart": [Function],
                              "onLayoutMeasure": [Function],
                              "onLayoutUpdate": [Function],
                              "onRender": [Function],
                              "onSetAxisTarget": [Function],
                              "onUnmount": [Function],
                              "onUpdate": [Function],
                              "onViewportBoxUpdate": [Function],
                              "parent": undefined,
                              "presenceId": 2,
                              "projection": [Circular],
                              "readValue": [Function],
                              "removeValue": [Function],
                              "scheduleRender": [Function],
                              "setBaseTarget": [Function],
                              "setProps": [Function],
                              "setStaticValue": [Function],
                              "setVisibility": [Function],
                              "shouldReduceMotion": false,
                              "sortNodePosition": [Function],
                              "syncRender": [Function],
                              "treeType": "dom",
                              "unmount": [Function],
                              "updatePropListeners": [Function],
                              "variantChildren": Set {},
                            },
                          },
                          "parent": [Circular],
                          "path": Array [
                            [Circular],
                          ],
                          "potentialNodes": Map {},
                          "root": [Circular],
                          "sharedNodes": Map {},
                          "shouldResetTransform": false,
                          "treeScale": Object {
                            "x": 1,
                            "y": 1,
                          },
                          "updateBlockedByResize": false,
                          "updateManuallyBlocked": false,
                          "updateProjection": [Function],
                        },
                        [Circular],
                      },
                      "depth": 0,
                      "eventHandlers": Map {},
                      "hasProjected": false,
                      "id": 0,
                      "instance": [Window],
                      "isAnimationBlocked": false,
                      "isLayoutDirty": false,
                      "isSVG": false,
                      "isTreeAnimating": false,
                      "isUpdating": false,
                      "isVisible": true,
                      "latestValues": Object {},
                      "needsReset": false,
                      "nodes": FlatTree {
                        "children": Array [
                          [Circular],
                          ProjectionNode {
                            "animationProgress": 0,
                            "checkUpdateFailed": [Function],
                            "children": Set {},
                            "depth": 1,
                            "eventHandlers": Map {},
                            "hasProjected": false,
                            "id": undefined,
                            "instance": <div
                              class="chakra-offset-slide"
                              style="opacity: 0; transform: scale(0.7) translateZ(0);"
                            >
                              <div
                                class="css-0"
                              >
                                <h2
                                  class="chakra-heading css-0"
                                >
                                  Register
                                </h2>
                                <div
                                  class="css-0"
                                >
                                  <div
                                    class="chakra-form-control css-0"
                                    role="group"
                                  >
                                    <form>
                                      <div
                                        class="chakra-stack css-0"
                                      >
                                        <input />
                                      </div>
                                    </form>
                                  </div>
                                </div>
                              </div>
                            </div>,
                            "isAnimationBlocked": false,
                            "isLayoutDirty": false,
                            "isSVG": false,
                            "isTreeAnimating": false,
                            "isUpdating": false,
                            "isVisible": true,
                            "latestValues": Object {
                              "opacity": 0,
                              "scale": 0.7,
                            },
                            "needsReset": false,
                            "options": Object {
                              "alwaysMeasureLayout": undefined,
                              "animationType": "both",
                              "crossfade": true,
                              "initialPromotionConfig": Object {},
                              "layout": undefined,
                              "layoutId": undefined,
                              "layoutScroll": undefined,
                              "scheduleRender": [Function],
                              "visualElement": Object {
                                "addValue": [Function],
                                "addVariantChild": [Function],
                                "animationState": Object {
                                  "animateChanges": [Function],
                                  "getState": [Function],
                                  "isAnimated": [Function],
                                  "setActive": [Function],
                                  "setAnimateFunction": [Function],
                                },
                                "blockInitialAnimation": false,
                                "build": [Function],
                                "children": Set {},
                                "clearAllListeners": [Function],
                                "current": <div
                                  class="chakra-offset-slide"
                                  style="opacity: 0; transform: scale(0.7) translateZ(0);"
                                >
                                  <div
                                    class="css-0"
                                  >
                                    <h2
                                      class="chakra-heading css-0"
                                    >
                                      Register
                                    </h2>
                                    <div
                                      class="css-0"
                                    >
                                      <div
                                        class="chakra-form-control css-0"
                                        role="group"
                                      >
                                        <form>
                                          <div
                                            class="chakra-stack css-0"
                                          >
                                            <input />
                                          </div>
                                        </form>
                                      </div>
                                    </div>
                                  </div>
                                </div>,
                                "depth": 0,
                                "forEachValue": [Function],
                                "getBaseTarget": [Function],
                                "getClosestVariantNode": [Function],
                                "getDefaultTransition": [Function],
                                "getInstance": [Function],
                                "getLatestValues": [Function],
                                "getLayoutId": [Function],
                                "getProps": [Function],
                                "getStaticValue": [Function],
                                "getTransformPagePoint": [Function],
                                "getValue": [Function],
                                "getVariant": [Function],
                                "getVariantContext": [Function],
                                "hasValue": [Function],
                                "isMounted": [Function],
                                "isPresent": true,
                                "isVisible": undefined,
                                "makeTargetAnimatable": [Function],
                                "manuallyAnimateOnMount": false,
                                "measureViewportBox": [Function],
                                "mount": [Function],
                                "notifyAnimationComplete": [Function],
                                "notifyAnimationStart": [Function],
                                "notifyBeforeLayoutMeasure": [Function],
                                "notifyLayoutAnimationComplete": [Function],
                                "notifyLayoutAnimationStart": [Function],
                                "notifyLayoutMeasure": [Function],
                                "notifyLayoutUpdate": [Function],
                                "notifyRender": [Function],
                                "notifySetAxisTarget": [Function],
                                "notifyUnmount": [Function],
                                "notifyUpdate": [Function],
                                "notifyViewportBoxUpdate": [Function],
                                "onAnimationComplete": [Function],
                                "onAnimationStart": [Function],
                                "onBeforeLayoutMeasure": [Function],
                                "onLayoutAnimationComplete": [Function],
                                "onLayoutAnimationStart": [Function],
                                "onLayoutMeasure": [Function],
                                "onLayoutUpdate": [Function],
                                "onRender": [Function],
                                "onSetAxisTarget": [Function],
                                "onUnmount": [Function],
                                "onUpdate": [Function],
                                "onViewportBoxUpdate": [Function],
                                "parent": undefined,
                                "presenceId": 0,
                                "projection": [Circular],
                                "readValue": [Function],
                                "removeValue": [Function],
                                "scheduleRender": [Function],
                                "setBaseTarget": [Function],
                                "setProps": [Function],
                                "setStaticValue": [Function],
                                "setVisibility": [Function],
                                "shouldReduceMotion": false,
                                "sortNodePosition": [Function],
                                "syncRender": [Function],
                                "treeType": "dom",
                                "unmount": [Function],
                                "updatePropListeners": [Function],
                                "variantChildren": Set {},
                              },
                            },
                            "parent": [Circular],
                            "path": Array [
                              [Circular],
                            ],
                            "potentialNodes": Map {},
                            "root": [Circular],
                            "sharedNodes": Map {},
                            "shouldResetTransform": false,
                            "treeScale": Object {
                              "x": 1,
                              "y": 1,
                            },
                            "updateBlockedByResize": false,
                            "updateManuallyBlocked": false,
                            "updateProjection": [Function],
                          },
                          ProjectionNode {
                            "animationProgress": 0,
                            "checkUpdateFailed": [Function],
                            "children": Set {},
                            "depth": 1,
                            "eventHandlers": Map {},
                            "hasProjected": false,
                            "id": undefined,
                            "instance": <div
                              class="chakra-offset-slide"
                              style="opacity: 0; transform: scale(0.7) translateZ(0);"
                            >
                              <div
                                class="css-0"
                              >
                                <h2
                                  class="chakra-heading css-0"
                                >
                                  Login
                                </h2>
                                <div
                                  class="css-0"
                                >
                                  <div
                                    class="chakra-form-control css-0"
                                    role="group"
                                  >
                                    <form>
                                      <div
                                        class="chakra-stack css-0"
                                      >
                                        <input />
                                      </div>
                                    </form>
                                  </div>
                                </div>
                              </div>
                            </div>,
                            "isAnimationBlocked": false,
                            "isLayoutDirty": false,
                            "isSVG": false,
                            "isTreeAnimating": false,
                            "isUpdating": false,
                            "isVisible": true,
                            "latestValues": Object {
                              "opacity": 0,
                              "scale": 0.7,
                            },
                            "needsReset": false,
                            "options": Object {
                              "alwaysMeasureLayout": undefined,
                              "animationType": "both",
                              "crossfade": true,
                              "initialPromotionConfig": Object {},
                              "layout": undefined,
                              "layoutId": undefined,
                              "layoutScroll": undefined,
                              "scheduleRender": [Function],
                              "visualElement": Object {
                                "addValue": [Function],
                                "addVariantChild": [Function],
                                "animationState": Object {
                                  "animateChanges": [Function],
                                  "getState": [Function],
                                  "isAnimated": [Function],
                                  "setActive": [Function],
                                  "setAnimateFunction": [Function],
                                },
                                "blockInitialAnimation": false,
                                "build": [Function],
                                "children": Set {},
                                "clearAllListeners": [Function],
                                "current": <div
                                  class="chakra-offset-slide"
                                  style="opacity: 0; transform: scale(0.7) translateZ(0);"
                                >
                                  <div
                                    class="css-0"
                                  >
                                    <h2
                                      class="chakra-heading css-0"
                                    >
                                      Login
                                    </h2>
                                    <div
                                      class="css-0"
                                    >
                                      <div
                                        class="chakra-form-control css-0"
                                        role="group"
                                      >
                                        <form>
                                          <div
                                            class="chakra-stack css-0"
                                          >
                                            <input />
                                          </div>
                                        </form>
                                      </div>
                                    </div>
                                  </div>
                                </div>,
                                "depth": 0,
                                "forEachValue": [Function],
                                "getBaseTarget": [Function],
                                "getClosestVariantNode": [Function],
                                "getDefaultTransition": [Function],
                                "getInstance": [Function],
                                "getLatestValues": [Function],
                                "getLayoutId": [Function],
                                "getProps": [Function],
                                "getStaticValue": [Function],
                                "getTransformPagePoint": [Function],
                                "getValue": [Function],
                                "getVariant": [Function],
                                "getVariantContext": [Function],
                                "hasValue": [Function],
                                "isMounted": [Function],
                                "isPresent": true,
                                "isVisible": undefined,
                                "makeTargetAnimatable": [Function],
                                "manuallyAnimateOnMount": false,
                                "measureViewportBox": [Function],
                                "mount": [Function],
                                "notifyAnimationComplete": [Function],
                                "notifyAnimationStart": [Function],
                                "notifyBeforeLayoutMeasure": [Function],
                                "notifyLayoutAnimationComplete": [Function],
                                "notifyLayoutAnimationStart": [Function],
                                "notifyLayoutMeasure": [Function],
                                "notifyLayoutUpdate": [Function],
                                "notifyRender": [Function],
                                "notifySetAxisTarget": [Function],
                                "notifyUnmount": [Function],
                                "notifyUpdate": [Function],
                                "notifyViewportBoxUpdate": [Function],
                                "onAnimationComplete": [Function],
                                "onAnimationStart": [Function],
                                "onBeforeLayoutMeasure": [Function],
                                "onLayoutAnimationComplete": [Function],
                                "onLayoutAnimationStart": [Function],
                                "onLayoutMeasure": [Function],
                                "onLayoutUpdate": [Function],
                                "onRender": [Function],
                                "onSetAxisTarget": [Function],
                                "onUnmount": [Function],
                                "onUpdate": [Function],
                                "onViewportBoxUpdate": [Function],
                                "parent": undefined,
                                "presenceId": 2,
                                "projection": [Circular],
                                "readValue": [Function],
                                "removeValue": [Function],
                                "scheduleRender": [Function],
                                "setBaseTarget": [Function],
                                "setProps": [Function],
                                "setStaticValue": [Function],
                                "setVisibility": [Function],
                                "shouldReduceMotion": false,
                                "sortNodePosition": [Function],
                                "syncRender": [Function],
                                "treeType": "dom",
                                "unmount": [Function],
                                "updatePropListeners": [Function],
                                "variantChildren": Set {},
                              },
                            },
                            "parent": [Circular],
                            "path": Array [
                              [Circular],
                            ],
                            "potentialNodes": Map {},
                            "root": [Circular],
                            "sharedNodes": Map {},
                            "shouldResetTransform": false,
                            "treeScale": Object {
                              "x": 1,
                              "y": 1,
                            },
                            "updateBlockedByResize": false,
                            "updateManuallyBlocked": false,
                            "updateProjection": [Function],
                          },
                          [Circular],
                        ],
                        "isDirty": true,
                      },
                      "options": Object {
                        "crossfade": true,
                        "layoutScroll": true,
                      },
                      "parent": undefined,
                      "path": Array [],
                      "potentialNodes": Map {},
                      "root": [Circular],
                      "sharedNodes": Map {},
                      "shouldResetTransform": true,
                      "treeScale": Object {
                        "x": 1,
                        "y": 1,
                      },
                      "updateBlockedByResize": false,
                      "updateManuallyBlocked": false,
                      "updateProjection": [Function],
                    },
                    "sharedNodes": Map {},
                    "shouldResetTransform": false,
                    "treeScale": Object {
                      "x": 1,
                      "y": 1,
                    },
                    "updateBlockedByResize": false,
                    "updateManuallyBlocked": false,
                    "updateProjection": [Function],
                  },
                  "readValue": [Function],
                  "removeValue": [Function],
                  "scheduleRender": [Function],
                  "setBaseTarget": [Function],
                  "setProps": [Function],
                  "setStaticValue": [Function],
                  "setVisibility": [Function],
                  "shouldReduceMotion": false,
                  "sortNodePosition": [Function],
                  "syncRender": [Function],
                  "treeType": "dom",
                  "unmount": [Function],
                  "updatePropListeners": [Function],
                  "variantChildren": Set {},
                }
              }
            />
            <div
              className="chakra-offset-slide"
              style={
                Object {
                  "opacity": 0,
                  "transform": "scale(0.7) translateZ(0)",
                }
              }
            >
              <Flex
                alignItems="center"
                color="red"
                flexDir="column"
                h="100vh"
                justifyContent="center"
                paddingBlock="0.5rem"
                pos="relative"
                zIndex="101"
              >
                <Styled(div)
                  __css={
                    Object {
                      "alignItems": undefined,
                      "display": "flex",
                      "flexBasis": undefined,
                      "flexDirection": undefined,
                      "flexGrow": undefined,
                      "flexShrink": undefined,
                      "flexWrap": undefined,
                      "justifyContent": undefined,
                    }
                  }
                  alignItems="center"
                  color="red"
                  flexDir="column"
                  h="100vh"
                  justifyContent="center"
                  paddingBlock="0.5rem"
                  pos="relative"
                  zIndex="101"
                >
                  <Noop />
                  <div
                    className="css-0"
                  >
                    <Heading
                      bg="form_gray"
                      borderTopRadius="5px"
                      color="white"
                      p="0.5rem"
                      textAlign="center"
                      w={
                        Object {
                          "base": "95%",
                          "lg": "60%",
                          "md": "70%",
                          "sm": "90%",
                          "xl": "40%",
                        }
                      }
                    >
                      <Styled(h2)
                        __css={Object {}}
                        bg="form_gray"
                        borderTopRadius="5px"
                        className="chakra-heading"
                        color="white"
                        p="0.5rem"
                        textAlign="center"
                        w={
                          Object {
                            "base": "95%",
                            "lg": "60%",
                            "md": "70%",
                            "sm": "90%",
                            "xl": "40%",
                          }
                        }
                      >
                        <Noop />
                        <h2
                          className="chakra-heading css-0"
                        >
                          Register
                        </h2>
                      </Styled(h2)>
                    </Heading>
                    <Box
                      bg="white"
                      boxShadow="default"
                      maxH="auto"
                      minH="45vh"
                      padding="3rem"
                      w={
                        Object {
                          "base": "95%",
                          "lg": "60%",
                          "md": "70%",
                          "sm": "90%",
                          "xl": "40%",
                        }
                      }
                    >
                      <Noop />
                      <div
                        className="css-0"
                      >
                        <FormControl
                          borderRadius="5px"
                          w="full"
                        >
                          <Styled(div)
                            borderRadius="5px"
                            className="chakra-form-control"
                            role="group"
                            w="full"
                          >
                            <Noop />
                            <div
                              className="chakra-form-control css-0"
                              role="group"
                            >
                              <form
                                onSubmit={[Function]}
                              >
                                <VStack
                                  alignItems="flex-start"
                                  spacing={5}
                                  w="full"
                                >
                                  <Stack
                                    align="center"
                                    alignItems="flex-start"
                                    direction="column"
                                    spacing={5}
                                    w="full"
                                  >
                                    <Styled(div)
                                      __css={
                                        Object {
                                          "& > *:not(style) ~ *:not(style)": Object {
                                            "marginBottom": 0,
                                            "marginEnd": 0,
                                            "marginStart": 0,
                                            "marginTop": 5,
                                          },
                                        }
                                      }
                                      alignItems="flex-start"
                                      className="chakra-stack"
                                      display="flex"
                                      flexDirection="column"
                                      w="full"
                                    >
                                      <Noop />
                                      <div
                                        className="chakra-stack css-0"
                                      >
                                        <input
                                          key=".0"
                                        />
                                      </div>
                                    </Styled(div)>
                                  </Stack>
                                </VStack>
                              </form>
                            </div>
                          </Styled(div)>
                        </FormControl>
                      </div>
                    </Box>
                  </div>
                </Styled(div)>
              </Flex>
            </div>
          </VisualElementHandler>
        </ForwardRef(MotionComponent)>
      </PresenceChild>
    </AnimatePresence>
  </ScaleFade>
</FormWrapper>
`;
